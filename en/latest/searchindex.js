Search.setIndex({"alltitles": {"1st_exact": [[52, "st-exact"]], "1st_homogeneous_coeff_best": [[52, "st-homogeneous-coeff-best"]], "1st_homogeneous_coeff_subs_dep_div_indep": [[52, "st-homogeneous-coeff-subs-dep-div-indep"]], "1st_homogeneous_coeff_subs_indep_div_dep": [[52, "st-homogeneous-coeff-subs-indep-div-dep"]], "1st_linear": [[52, "st-linear"]], "1st_power_series": [[52, "st-power-series"]], "2D Pretty Printer": [[121, "d-pretty-printer"]], "2nd_power_series_ordinary": [[52, "nd-power-series-ordinary"]], "2nd_power_series_regular": [[52, "nd-power-series-regular"]], "API Reference": [[61, "module-diofant.utilities.autowrap"], [62, "module-diofant.utilities.codegen"]], "API reference": [[34, "api-reference"]], "About": [[0, "about"]], "Abs": [[30, "abs"]], "Abstract Domains": [[28, "abstract-domains"]], "Accuracy and error handling": [[5, "accuracy-and-error-handling"]], "Add": [[27, "id7"]], "Advanced Methods": [[119, "advanced-methods"]], "Airy Functions": [[32, "airy-functions"]], "Algebraic Equations": [[123, "algebraic-equations"]], "Algebraic Operations": [[119, "algebraic-operations"]], "Algebraic equations": [[55, "module-diofant.solvers.solvers"]], "Algebraic number fields": [[10, "algebraic-number-fields"], [45, "module-diofant.polys.numberfields"]], "An example": [[8, "an-example"]], "Applying the Integral Theorems": [[6, "applying-the-integral-theorems"]], "Applying the Operators": [[8, "applying-the-operators"]], "Assumptions": [[113, "assumptions"]], "AtomicExpr": [[27, "atomicexpr"]], "Autowrap Module": [[61, "autowrap-module"]], "B-Splines": [[32, "b-splines"]], "Basic Manipulation": [[41, "basic-manipulation"]], "Basic polynomial manipulation functions": [[45, "module-diofant.polys.polytools"]], "Basics": [[113, "basics"]], "Bernoulli": [[52, "bernoulli"]], "Bessel Type Functions": [[32, "module-diofant.functions.special.bessel"]], "Bibliography": [[112, "bibliography"]], "Block Matrices": [[38, "block-matrices"]], "Boolean functions": [[36, "boolean-functions"]], "CCodePrinter": [[46, "module-diofant.printing.ccode"]], "CSE": [[122, "cse"]], "Calculus": [[11, "module-diofant.calculus"], [114, "calculus"]], "Catalan": [[27, "catalan"]], "Chebyshev Polynomials": [[32, "chebyshev-polynomials"]], "Classes": [[57, "classes"]], "Classical remainder sequence": [[10, "classical-remainder-sequence"]], "CodePrinter": [[46, "module-diofant.printing.codeprinter"]], "Codegen": [[62, "codegen"]], "Combinatorial": [[29, "combinatorial"]], "Combinatorial simplification": [[48, "module-diofant.simplify.combsimp"]], "Combinatorics": [[14, "combinatorics"]], "Command-Line Usage": [[1, "command-line-usage"]], "Common Subexpresion Elimination": [[48, "module-diofant.simplify.cse_main"]], "Compatibility breaks": [[72, "compatibility-breaks"], [73, "compatibility-breaks"], [74, "compatibility-breaks"], [75, "compatibility-breaks"], [76, "compatibility-breaks"], [77, "compatibility-breaks"], [102, "compatibility-breaks"], [104, "compatibility-breaks"], [105, "compatibility-breaks"], [106, "compatibility-breaks"], [107, "compatibility-breaks"], [108, "compatibility-breaks"], [109, "compatibility-breaks"], [110, "compatibility-breaks"]], "ComplexInfinity": [[27, "complexinfinity"]], "Compound Sets": [[47, "compound-sets"]], "Computing Integrals using Meijer G-Functions": [[6, "computing-integrals-using-meijer-g-functions"]], "Concrete Class Reference": [[25, "concrete-class-reference"]], "Concrete Domains": [[28, "concrete-domains"]], "Concrete Functions Reference": [[25, "concrete-functions-reference"]], "Concrete Mathematics": [[25, "concrete-mathematics"]], "Conditions of Convergence for Integral (1)": [[6, "conditions-of-convergence-for-integral-1"]], "Conditions of Convergence for Integral (2)": [[6, "conditions-of-convergence-for-integral-2"]], "Config": [[26, "module-diofant.config"]], "Contains": [[56, "contains"]], "Contents": [[14, null], [31, null], [40, null], [50, null], [58, null], [65, null], [116, null]], "Contributing Code": [[2, "contributing-code"]], "Core": [[27, "module-diofant.core"]], "Creating Matrices": [[41, "creating-matrices"]], "Decorator": [[63, "module-diofant.utilities.decorator"]], "Dense Matrices": [[37, "module-diofant.matrices.dense"]], "Derivative": [[27, "derivative"]], "Derivatives": [[114, "derivatives"]], "Derivatives by array": [[57, "derivatives-by-array"]], "Details on the Hypergeometric Function Expansion": [[8, "details-on-the-hypergeometric-function-expansion"]], "Developer changes": [[72, "developer-changes"], [73, "developer-changes"], [74, "developer-changes"], [75, "developer-changes"], [76, "developer-changes"], [77, "developer-changes"], [109, "developer-changes"], [110, "developer-changes"]], "Development": [[2, "development"]], "Dict": [[27, "dict"]], "Differential Equations": [[123, "differential-equations"]], "Diofant 0.10": [[72, "diofant-0-10"]], "Diofant 0.11": [[73, "diofant-0-11"]], "Diofant 0.12": [[74, "diofant-0-12"]], "Diofant 0.13": [[75, "diofant-0-13"]], "Diofant 0.14": [[76, "diofant-0-14"]], "Diofant 0.15": [[77, "diofant-0-15"]], "Diofant 0.8": [[109, "diofant-0-8"]], "Diofant 0.9": [[110, "diofant-0-9"]], "Diofant\u2019s documentation": [[3, "diofant-s-documentation"]], "Diophantine": [[49, "module-diofant.solvers.diophantine"]], "Diophantine equations": [[49, "diophantine-equations"]], "DiracDelta": [[32, "diracdelta"]], "Division": [[120, "division"]], "Docstring": [[66, "module-diofant.utilities.iterables"]], "Domain Elements": [[28, "domain-elements"]], "Domain constructors": [[45, "module-diofant.polys.constructor"]], "Domains": [[28, "module-diofant.domains"]], "Dot": [[121, "dot"]], "Dummy": [[27, "dummy"]], "EPath Tools": [[48, "module-diofant.simplify.epathtools"]], "EPath class": [[48, "epath-class"]], "Elementary": [[30, "elementary"]], "Elementary Sets": [[47, "elementary-sets"]], "Elliptic integrals": [[32, "module-diofant.functions.special.elliptic_integrals"]], "Enumerative": [[64, "module-diofant.utilities.enumerative"]], "Eq": [[27, "eq"]], "Equality": [[27, "equality"], [115, "equality"]], "Error Functions and Fresnel Integrals": [[32, "module-diofant.functions.special.error_functions"]], "EulerGamma": [[27, "eulergamma"]], "Examples": [[34, "examples"]], "Exp1": [[27, "exp1"]], "Exponential, Logarithmic and Trigonometric Integrals": [[32, "exponential-logarithmic-and-trigonometric-integrals"]], "Expr": [[27, "id3"]], "ExprCondPair": [[30, "exprcondpair"]], "Expression Trees": [[118, "expression-trees"]], "Extending The Hypergeometric Tables": [[8, "extending-the-hypergeometric-tables"]], "Extra polynomial manipulation functions": [[45, "module-diofant.polys.polyfuncs"]], "Factorization": [[120, "factorization"]], "Factorization over algebraic number fields": [[10, "module-diofant.polys.factorization_alg_field"]], "FallingFactorial": [[29, "fallingfactorial"]], "Feedback": [[4, "feedback"]], "Float": [[27, "float"]], "Floating-point numbers": [[5, "floating-point-numbers"]], "Formal manipulation of roots of polynomials": [[45, "module-diofant.polys.rootoftools"]], "Forming logical expressions": [[36, "forming-logical-expressions"]], "Fortran Printing": [[46, "fortran-printing"]], "From Sources": [[4, "from-sources"]], "Function": [[27, "id10"]], "FunctionClass": [[27, "functionclass"]], "Functions": [[57, "functions"]], "Further tools": [[10, "module-diofant.polys.rootisolation"]], "GCD and LCM": [[120, "gcd-and-lcm"]], "Gamma, Beta and related Functions": [[32, "module-diofant.functions.special.gamma_functions"]], "Ge": [[27, "ge"]], "Gegenbauer Polynomials": [[32, "gegenbauer-polynomials"]], "Generators": [[18, "module-diofant.combinatorics.generators"]], "GoldenRatio": [[27, "goldenratio"]], "Gotchas": [[115, "gotchas"]], "Gray Code": [[12, "module-diofant.combinatorics.graycode"]], "GreaterThan": [[27, "greaterthan"]], "Group constructors": [[13, "module-diofant.combinatorics.group_constructs"]], "Gr\u00f6bner bases": [[120, "grobner-bases"]], "Gr\u00f6bner basis algorithms": [[10, "grobner-basis-algorithms"]], "Gt": [[27, "gt"]], "Half": [[27, "half"]], "Heaviside": [[32, "heaviside"]], "Hermite Polynomials": [[32, "hermite-polynomials"]], "Heuristic GCD": [[10, "heuristic-gcd"]], "Hint Functions": [[52, "hint-functions"]], "Hint Methods": [[53, "hint-methods"]], "How to compute the integral": [[6, "how-to-compute-the-integral"]], "Hyperbolic Functions": [[30, "hyperbolic-functions"]], "Hyperbolic Inverses": [[30, "hyperbolic-inverses"]], "HyperbolicFunction": [[30, "hyperbolicfunction"]], "Hypergeometric Function Expansion": [[48, "module-diofant.simplify.hyperexpand"]], "Hypergeometric Function Expansion Algorithm": [[8, "hypergeometric-function-expansion-algorithm"]], "Hypergeometric Functions": [[32, "hypergeometric-functions"]], "Hypergeometric terms": [[25, "hypergeometric-terms"]], "IdentityFunction": [[30, "identityfunction"]], "ImaginaryUnit": [[27, "imaginaryunit"]], "Immutable Matrices": [[39, "immutable-matrices"]], "ImmutableMatrix Class Reference": [[37, "immutablematrix-class-reference"], [39, "module-diofant.matrices.immutable"]], "ImmutableSparseMatrix Class Reference": [[42, "immutablesparsematrix-class-reference"]], "Implementation - Helper Classes/Functions": [[46, "module-diofant.printing.conventions"]], "Implementation Details": [[62, "implementation-details"]], "Implementation Domains": [[28, "implementation-domains"]], "Implementation details": [[61, "implementation-details"]], "Implemented G-Function Formulae": [[6, "implemented-g-function-formulae"]], "Implemented Hypergeometric Formulae": [[8, "implemented-hypergeometric-formulae"]], "Incrementing and decrementing indices": [[8, "incrementing-and-decrementing-indices"]], "Indexed Objects": [[60, "module-diofant.tensor.indexed"]], "Indexing": [[119, "indexing"]], "Inequality Solvers": [[51, "module-diofant.solvers.inequalities"]], "Inference": [[36, "inference"]], "Infinity": [[27, "infinity"]], "Information on the ode module": [[52, "module-diofant.solvers.ode"]], "Information on the pde module": [[53, "module-diofant.solvers.pde"]], "Installation": [[4, "installation"]], "Integer": [[27, "integer"]], "Integral Transforms": [[34, "module-diofant.integrals.transforms"]], "Integrals": [[34, "module-diofant.integrals"], [114, "integrals"]], "Interactive": [[35, "module-diofant.interactive"]], "Internal Functions": [[49, "internal-functions"]], "Internals": [[9, "internals"], [34, "internals"]], "Internals of the Polynomial Manipulation Module": [[10, "internals-of-the-polynomial-manipulation-module"]], "Introduction": [[36, "introduction"], [117, "introduction"]], "Issues closed": [[72, "issues-closed"], [73, "issues-closed"], [74, "issues-closed"], [75, "issues-closed"], [76, "issues-closed"], [77, "issues-closed"], [109, "issues-closed"], [110, "issues-closed"]], "Iterables": [[66, "iterables"]], "Jacobi Polynomials": [[32, "jacobi-polynomials"]], "LaTeX": [[121, "latex"]], "Laguerre Polynomials": [[32, "laguerre-polynomials"]], "Lambda": [[27, "lambda"]], "LambdaPrinter": [[46, "module-diofant.printing.lambdarepr"]], "Lambdify": [[67, "module-diofant.utilities.lambdify"]], "LambertW": [[30, "lambertw"]], "LatexPrinter": [[46, "module-diofant.printing.latex"]], "Le": [[27, "le"]], "Legendre Polynomials": [[32, "legendre-polynomials"]], "LessThan": [[27, "lessthan"]], "License": [[0, "license"]], "Lie heuristics": [[52, "lie-heuristics"]], "Limits": [[114, "limits"]], "Linear algebra": [[41, "linear-algebra"]], "Liouville": [[52, "liouville"]], "Logic": [[36, "module-diofant.logic"]], "Loose Ends": [[8, "loose-ends"]], "Lt": [[27, "lt"]], "Major Changes": [[102, "major-changes"], [104, "major-changes"]], "Major changes": [[72, "major-changes"], [73, "major-changes"], [74, "major-changes"], [75, "major-changes"], [76, "major-changes"], [77, "major-changes"], [103, "major-changes"], [105, "major-changes"], [106, "major-changes"], [107, "major-changes"], [109, "major-changes"], [110, "major-changes"]], "Manipulation of rational functions": [[45, "module-diofant.polys.rationaltools"]], "Manipulation of sparse, distributed polynomials": [[10, "manipulation-of-sparse-distributed-polynomials"]], "MathMLPrinter": [[46, "module-diofant.printing.mathml"]], "Mathematica code printing": [[46, "module-diofant.printing.mathematica"]], "Mathematical Functions": [[31, "module-diofant.functions"]], "Matrices": [[40, "module-diofant.matrices"], [119, "matrices"]], "Matrices (linear algebra)": [[41, "module-diofant.matrices.matrices"]], "Matrix Class Reference": [[37, "matrix-class-reference"]], "Matrix Exceptions Reference": [[41, "matrix-exceptions-reference"]], "Matrix Expressions": [[38, "module-diofant.matrices.expressions"]], "Matrix Expressions Core Reference": [[38, "matrix-expressions-core-reference"]], "Matrix Functions Reference": [[41, "matrix-functions-reference"]], "MatrixBase Class Reference": [[41, "matrixbase-class-reference"]], "Max": [[30, "max"]], "Meijer G-Functions of Finite Confluence": [[8, "meijer-g-functions-of-finite-confluence"]], "Memoization": [[68, "module-diofant.utilities.memoization"]], "Methods": [[59, "module-diofant.tensor.index_methods"]], "Min": [[30, "min"]], "Minor changes": [[72, "minor-changes"], [73, "minor-changes"], [74, "minor-changes"], [75, "minor-changes"], [76, "minor-changes"], [77, "minor-changes"], [104, "minor-changes"], [105, "minor-changes"], [107, "minor-changes"], [108, "minor-changes"], [109, "minor-changes"], [110, "minor-changes"]], "Miscellaneous": [[69, "module-diofant.utilities.misc"]], "Mod": [[27, "id8"]], "Modular GCD": [[10, "module-diofant.polys.modulargcd"]], "Module structure": [[49, "module-structure"]], "Monomials encoded as tuples": [[45, "module-diofant.polys.monomials"]], "Moving Around in the Parameter Space": [[8, "moving-around-in-the-parameter-space"]], "Mul": [[27, "id6"]], "N": [[27, "n"]], "N-dim array": [[57, "module-diofant.tensor.array"]], "NaN": [[27, "nan"]], "Named Groups": [[15, "module-diofant.combinatorics.named_groups"]], "Naming of Functions": [[115, "naming-of-functions"]], "Ne": [[27, "ne"]], "NegativeInfinity": [[27, "negativeinfinity"]], "NegativeOne": [[27, "negativeone"]], "New features": [[72, "new-features"], [73, "new-features"], [74, "new-features"], [75, "new-features"], [76, "new-features"], [77, "new-features"], [108, "new-features"], [109, "new-features"], [110, "new-features"]], "Notation": [[8, "notation"]], "Number": [[27, "number"]], "Number Theory": [[43, "module-diofant.ntheory.generate"]], "NumberSymbol": [[27, "numbersymbol"]], "Numbers": [[115, "numbers"]], "Numeric Integrals": [[34, "numeric-integrals"]], "Numerical evaluation": [[5, "numerical-evaluation"]], "Numerical simplification": [[5, "numerical-simplification"]], "Numerics": [[113, "numerics"]], "Numpy Utility Functions Reference": [[41, "numpy-utility-functions-reference"]], "ODE": [[52, "ode"]], "One": [[27, "one"]], "Operations on entries": [[41, "operations-on-entries"]], "Orderings of monomials": [[45, "module-diofant.polys.orderings"]], "Orthogonal Polynomials": [[32, "module-diofant.functions.special.polynomials"]], "Orthogonal polynomials": [[45, "module-diofant.polys.orthopolys"]], "Overview": [[6, "overview"]], "PDE": [[53, "pde"]], "PQa": [[49, "pqa"]], "Parsing": [[44, "module-diofant.parsing"]], "Parsing Functions Reference": [[44, "parsing-functions-reference"]], "Parsing Transformations Reference": [[44, "parsing-transformations-reference"]], "Partial fraction decomposition": [[45, "module-diofant.polys.partfrac"]], "Partitions": [[16, "module-diofant.combinatorics.partitions"]], "Permutation Groups": [[17, "module-diofant.combinatorics.perm_groups"]], "Permutations": [[18, "module-diofant.combinatorics.permutations"]], "Pi": [[27, "pi"]], "Piecewise": [[30, "piecewise"]], "Polar Numbers and Branched Functions": [[6, "polar-numbers-and-branched-functions"]], "PoleError": [[27, "poleerror"]], "Polyhedron": [[19, "module-diofant.combinatorics.polyhedron"]], "Polynomial factorization algorithms": [[10, "polynomial-factorization-algorithms"]], "Polynomials": [[45, "module-diofant.polys"], [120, "polynomials"]], "Power simplification": [[48, "module-diofant.simplify.powsimp"]], "Powers and Logarithms": [[122, "powers-and-logarithms"]], "Precedence": [[46, "module-diofant.printing.precedence"]], "PrecisionExhausted": [[27, "precisionexhausted"]], "Pretty-Printing Implementation Helpers": [[46, "module-diofant.printing.pretty_symbology"]], "PrettyPrinter Class": [[46, "prettyprinter-class"]], "Printer Class": [[46, "module-diofant.printing.printer"]], "Printing": [[46, "module-diofant.printing"], [121, "printing"]], "Products and contractions": [[57, "products-and-contractions"]], "Prufer Sequences": [[20, "module-diofant.combinatorics.prufer"]], "PythonPrinter": [[46, "module-diofant.printing.python"]], "Radsimp": [[48, "module-diofant.simplify.radsimp"]], "Randomised Testing": [[70, "module-diofant.utilities.randtest"]], "Rational": [[27, "rational"]], "Rational Functions": [[122, "rational-functions"]], "Ratsimp": [[48, "module-diofant.simplify.ratsimp"]], "Recurrence Equations": [[54, "module-diofant.solvers.recurr"], [123, "recurrence-equations"]], "Reduction of Order": [[8, "reduction-of-order"]], "Reference": [[33, "module-diofant"]], "References": [[49, "references"]], "Rel": [[27, "rel"]], "Relational": [[27, "id9"]], "Release Notes": [[71, "release-notes"]], "Release Procedure": [[2, "release-procedure"]], "Reporting Issues": [[2, "reporting-issues"]], "Repr": [[121, "repr"]], "ReprPrinter": [[46, "module-diofant.printing.repr"]], "Representing Branched Functions on the Argand Plane": [[6, "representing-branched-functions-on-the-argand-plane"]], "Reshape and Rearrange": [[119, "reshape-and-rearrange"]], "Riccati_special_minus2": [[52, "riccati-special-minus2"]], "Riemann Zeta and Related Functions": [[32, "module-diofant.functions.special.zeta_functions"]], "RisingFactorial": [[29, "risingfactorial"]], "Rosetta Stone": [[2, "rosetta-stone"]], "RoundFunction": [[30, "roundfunction"]], "Routine": [[62, "routine"]], "Run Diofant": [[4, "run-diofant"]], "Series Expansion": [[114, "series-expansion"]], "Sets": [[47, "module-diofant.sets.sets"]], "Simplification": [[122, "simplification"]], "Simplification and equivalence-testing": [[36, "simplification-and-equivalence-testing"]], "Simplified remainder sequences": [[10, "simplified-remainder-sequences"]], "Simplify": [[48, "simplify"]], "Singleton Sets": [[47, "singleton-sets"]], "Solvers": [[50, "module-diofant.solvers"], [123, "solvers"]], "Sparse Matrices": [[42, "module-diofant.matrices.sparse"]], "Special": [[32, "special"]], "Special Functions": [[122, "special-functions"]], "Special Matrices": [[119, "special-matrices"]], "Special Sets": [[47, "module-diofant.sets.fancysets"]], "Special polynomials": [[45, "module-diofant.polys.specialpolys"]], "Spherical Harmonics": [[32, "spherical-harmonics"]], "Square Root Denest": [[48, "module-diofant.simplify.sqrtdenest"]], "Square-free factorization": [[120, "square-free-factorization"]], "Str": [[121, "str"]], "StrPrinter": [[46, "module-diofant.printing.str"]], "StrictGreaterThan": [[27, "strictgreaterthan"]], "StrictLessThan": [[27, "strictlessthan"]], "Subresultant sequence": [[10, "subresultant-sequence"]], "Subs": [[27, "subs"]], "Subsets": [[21, "module-diofant.combinatorics.subsets"]], "Substitution": [[113, "substitution"]], "Sums and Products": [[114, "sums-and-products"]], "Sums and integrals": [[5, "sums-and-integrals"]], "SymPy 0.5.0": [[78, "sympy-0-5-0"]], "SymPy 0.5.1": [[79, "sympy-0-5-1"]], "SymPy 0.5.10": [[80, "sympy-0-5-10"]], "SymPy 0.5.11": [[81, "sympy-0-5-11"]], "SymPy 0.5.12": [[82, "sympy-0-5-12"]], "SymPy 0.5.13": [[83, "sympy-0-5-13"]], "SymPy 0.5.14": [[84, "sympy-0-5-14"]], "SymPy 0.5.15": [[85, "sympy-0-5-15"]], "SymPy 0.5.2": [[86, "sympy-0-5-2"]], "SymPy 0.5.3": [[87, "sympy-0-5-3"]], "SymPy 0.5.4": [[88, "sympy-0-5-4"]], "SymPy 0.5.5": [[89, "sympy-0-5-5"]], "SymPy 0.5.6": [[90, "sympy-0-5-6"]], "SymPy 0.5.7": [[91, "sympy-0-5-7"]], "SymPy 0.5.8": [[92, "sympy-0-5-8"]], "SymPy 0.5.9": [[93, "sympy-0-5-9"]], "SymPy 0.6.0": [[94, "sympy-0-6-0"]], "SymPy 0.6.1": [[95, "sympy-0-6-1"]], "SymPy 0.6.2": [[96, "sympy-0-6-2"]], "SymPy 0.6.3": [[97, "sympy-0-6-3"]], "SymPy 0.6.4": [[98, "sympy-0-6-4"]], "SymPy 0.6.5": [[99, "sympy-0-6-5"]], "SymPy 0.6.6": [[100, "sympy-0-6-6"]], "SymPy 0.6.7": [[101, "sympy-0-6-7"]], "SymPy 0.7.0": [[102, "sympy-0-7-0"]], "SymPy 0.7.1": [[103, "sympy-0-7-1"]], "SymPy 0.7.2": [[104, "sympy-0-7-2"]], "SymPy 0.7.3": [[105, "sympy-0-7-3"]], "SymPy 0.7.4": [[106, "sympy-0-7-4"]], "SymPy 0.7.5": [[107, "sympy-0-7-5"]], "SymPy 0.7.6": [[108, "sympy-0-7-6"]], "SymPy releases": [[111, "sympy-releases"]], "Symbol": [[27, "id5"]], "Symbolic root-finding algorithms": [[45, "module-diofant.polys.polyroots"]], "System of ODEs": [[52, "system-of-odes"]], "Systems of Polynomial Equations": [[55, "module-diofant.solvers.polysys"]], "Table Lookups and Inverse Mellin Transforms": [[6, "table-lookups-and-inverse-mellin-transforms"]], "Tensor Canonicalization": [[22, "module-diofant.combinatorics.tensor_can"]], "Tensor Functions": [[32, "tensor-functions"]], "Tensors": [[58, "module-diofant.tensor"]], "Test Utilities": [[23, "module-diofant.combinatorics.testutil"]], "The G-Function Integration Theorems": [[6, "the-g-function-integration-theorems"]], "The Gruntz Algorithm": [[7, "the-gruntz-algorithm"]], "The Inverse Laplace Transform of a G-function": [[6, "the-inverse-laplace-transform-of-a-g-function"]], "Traversal Tools": [[48, "module-diofant.simplify.traversaltools"]], "Trigonometric Functions": [[30, "trigonometric-functions"], [122, "trigonometric-functions"]], "Trigonometric Inverses": [[30, "trigonometric-inverses"]], "Trigonometric simplification": [[48, "module-diofant.simplify.trigsimp"]], "Tuple": [[27, "tuple"]], "Tutorial": [[49, "tutorial"], [116, "tutorial"]], "Undocumented": [[10, "undocumented"]], "Unequality": [[27, "unequality"]], "User Functions": [[49, "user-functions"], [52, "user-functions"], [53, "user-functions"]], "Utilities": [[24, "module-diofant.combinatorics.util"], [65, "module-diofant.utilities"]], "Utilities for solving": [[56, "module-diofant.solvers.utils"]], "Versioning": [[2, "versioning"]], "Walking the Tree": [[118, "walking-the-tree"]], "When the integral exists": [[6, "when-the-integral-exists"]], "When this computation is valid": [[6, "when-this-computation-is-valid"]], "Wild": [[27, "wild"]], "WildFunction": [[27, "wildfunction"]], "Zero": [[27, "zero"]], "abaco1_product": [[52, "abaco1-product"]], "abaco1_simple": [[52, "abaco1-simple"]], "abaco2_similar": [[52, "abaco2-similar"]], "abaco2_unique_unknown": [[52, "abaco2-unique-unknown"]], "acos": [[30, "acos"]], "acosh": [[30, "acosh"]], "acot": [[30, "acot"]], "acoth": [[30, "acoth"]], "acsc": [[30, "acsc"]], "add": [[27, "module-diofant.core.add"]], "adjoint": [[30, "adjoint"]], "allhints": [[52, "allhints"]], "almost_linear": [[52, "almost-linear"]], "arg": [[30, "arg"]], "asec": [[30, "asec"]], "asin": [[30, "asin"]], "asinh": [[30, "asinh"]], "assumptions": [[27, "module-diofant.core.assumptions"]], "atan": [[30, "atan"]], "atan2": [[30, "atan2"]], "atanh": [[30, "atanh"]], "base_solution_linear": [[49, "base-solution-linear"]], "basic": [[27, "module-diofant.core.basic"]], "bell": [[29, "bell"]], "bernoulli": [[29, "bernoulli"]], "besselsimp": [[48, "besselsimp"]], "binomial": [[29, "binomial"]], "bivariate": [[52, "bivariate"]], "cache": [[27, "module-diofant.core.cache"]], "cacheit": [[27, "cacheit"]], "catalan": [[29, "catalan"]], "ceiling": [[30, "ceiling"]], "checkinfsol": [[52, "checkinfsol"]], "checkodesol": [[52, "checkodesol"]], "checkpdesol": [[53, "checkpdesol"]], "chi": [[52, "chi"]], "classify_diop": [[49, "classify-diop"]], "classify_ode": [[52, "classify-ode"]], "classify_pde": [[53, "classify-pde"]], "collect": [[48, "collect"]], "collect_const": [[48, "collect-const"]], "collect_sqrt": [[48, "collect-sqrt"]], "combsimp": [[48, "combsimp"]], "compatibility": [[27, "module-diofant.core.compatibility"]], "conjugate": [[30, "conjugate"]], "constant_renumber": [[52, "constant-renumber"]], "constantsimp": [[52, "constantsimp"]], "containers": [[27, "module-diofant.core.containers"]], "core": [[27, "id2"]], "cornacchia": [[49, "cornacchia"]], "cos": [[30, "cos"]], "cosh": [[30, "cosh"]], "cot": [[30, "cot"]], "coth": [[30, "coth"]], "count_ops": [[27, "count-ops"]], "csc": [[30, "csc"]], "csch": [[30, "csch"]], "cse": [[48, "cse"]], "descent": [[49, "descent"]], "diff": [[27, "diff"]], "diofant.functions.elementary.complexes": [[30, "diofant-functions-elementary-complexes"]], "diofant.functions.elementary.exponential": [[30, "diofant-functions-elementary-exponential"]], "diofant.functions.elementary.hyperbolic": [[30, "diofant-functions-elementary-hyperbolic"]], "diofant.functions.elementary.integers": [[30, "diofant-functions-elementary-integers"]], "diofant.functions.elementary.miscellaneous": [[30, "diofant-functions-elementary-miscellaneous"]], "diofant.functions.elementary.piecewise": [[30, "diofant-functions-elementary-piecewise"]], "diofant.functions.elementary.trigonometric": [[30, "diofant-functions-elementary-trigonometric"]], "diop_DN": [[49, "diop-dn"]], "diop_bf_DN": [[49, "diop-bf-dn"]], "diop_general_pythagorean": [[49, "diop-general-pythagorean"]], "diop_general_sum_of_even_powers": [[49, "diop-general-sum-of-even-powers"]], "diop_general_sum_of_squares": [[49, "diop-general-sum-of-squares"]], "diop_linear": [[49, "diop-linear"]], "diop_quadratic": [[49, "diop-quadratic"]], "diop_solve": [[49, "diop-solve"]], "diop_ternary_quadratic": [[49, "diop-ternary-quadratic"]], "diop_ternary_quadratic_normal": [[49, "diop-ternary-quadratic-normal"]], "diophantine": [[49, "id1"]], "divisible": [[49, "divisible"]], "dotprint": [[46, "dotprint"]], "dsolve": [[52, "dsolve"]], "epath": [[48, "epath"]], "equivalent": [[49, "equivalent"]], "euler": [[29, "euler"]], "evalf": [[27, "module-diofant.core.evalf"]], "evaluate": [[27, "module-diofant.core.evaluate"]], "exp_polar": [[30, "exp-polar"]], "expand": [[27, "expand"]], "expand_complex": [[27, "expand-complex"]], "expand_func": [[27, "expand-func"]], "expand_log": [[27, "expand-log"]], "expand_mul": [[27, "expand-mul"]], "expand_multinomial": [[27, "expand-multinomial"]], "expand_power_base": [[27, "expand-power-base"]], "expand_power_exp": [[27, "expand-power-exp"]], "expand_trig": [[27, "expand-trig"]], "expr": [[27, "module-diofant.core.expr"]], "exprtools": [[27, "module-diofant.core.exprtools"]], "factor_terms": [[27, "factor-terms"]], "factorial": [[29, "factorial"]], "factorial2 / double factorial": [[29, "factorial2-double-factorial"]], "fibonacci": [[29, "fibonacci"]], "find_DN": [[49, "find-dn"]], "floor": [[30, "floor"]], "fraction": [[48, "fraction"]], "fu": [[48, "module-diofant.simplify.fu"]], "function": [[27, "module-diofant.core.function"]], "function_sum": [[52, "function-sum"]], "futrig": [[48, "futrig"]], "gaussian_reduce": [[49, "gaussian-reduce"]], "gcd_terms": [[27, "gcd-terms"]], "harmonic": [[29, "harmonic"]], "holzer": [[49, "holzer"]], "homogeneous_order": [[52, "homogeneous-order"]], "hyperexpand": [[48, "hyperexpand"]], "hypersimilar": [[48, "hypersimilar"]], "hypersimp": [[48, "hypersimp"]], "im": [[30, "im"]], "infinitesimals": [[52, "infinitesimals"]], "integer_digits": [[27, "integer-digits"]], "ldescent": [[49, "ldescent"]], "lie_group": [[52, "lie-group"]], "linear": [[52, "linear"]], "linear_coefficients": [[52, "linear-coefficients"]], "logcombine": [[48, "logcombine"]], "lucas": [[29, "lucas"]], "merge_solution": [[49, "merge-solution"]], "mod": [[27, "module-diofant.core.mod"]], "mod_inverse": [[27, "mod-inverse"]], "mul": [[27, "module-diofant.core.mul"]], "multidimensional": [[27, "module-diofant.core.multidimensional"]], "nfloat": [[27, "nfloat"]], "nsimplify": [[48, "nsimplify"]], "nth_linear_constant_coeff_homogeneous": [[52, "nth-linear-constant-coeff-homogeneous"]], "nth_linear_constant_coeff_undetermined_coefficients": [[52, "nth-linear-constant-coeff-undetermined-coefficients"]], "nth_linear_constant_coeff_variation_of_parameters": [[52, "nth-linear-constant-coeff-variation-of-parameters"]], "nthroot": [[48, "nthroot"]], "numbers": [[27, "module-diofant.core.numbers"]], "odesimp": [[52, "odesimp"]], "opt_cse": [[48, "opt-cse"]], "parametrize_ternary_quadratic": [[49, "parametrize-ternary-quadratic"]], "partition": [[49, "partition"]], "partitions": [[66, "partitions"]], "pde_1st_linear_constant_coeff": [[53, "pde-1st-linear-constant-coeff"]], "pde_1st_linear_constant_coeff_homogeneous": [[53, "pde-1st-linear-constant-coeff-homogeneous"]], "pde_1st_linear_variable_coeff": [[53, "pde-1st-linear-variable-coeff"]], "pde_separate": [[53, "pde-separate"]], "pde_separate_add": [[53, "pde-separate-add"]], "pde_separate_mul": [[53, "pde-separate-mul"]], "pdsolve": [[53, "pdsolve"]], "periodic_argument": [[30, "periodic-argument"]], "polar_lift": [[30, "polar-lift"]], "posify": [[48, "posify"]], "powdenest": [[48, "powdenest"]], "power": [[27, "module-diofant.core.power"]], "power_representation": [[49, "power-representation"]], "powsimp": [[48, "powsimp"]], "prime_as_sum_of_two_squares": [[49, "prime-as-sum-of-two-squares"]], "principal_branch": [[30, "principal-branch"]], "python -m diofant": [[1, "python-m-diofant"]], "rad_rationalize": [[48, "rad-rationalize"]], "radsimp": [[48, "id2"]], "ratsimp": [[48, "id3"]], "re": [[30, "re"]], "real_root": [[30, "real-root"]], "reconstruct": [[49, "reconstruct"]], "relational": [[27, "module-diofant.core.relational"]], "root": [[30, "root"]], "sec": [[30, "sec"]], "sech": [[30, "sech"]], "separable": [[52, "separable"]], "separable_reduced": [[52, "separable-reduced"]], "separatevars": [[48, "separatevars"]], "sign": [[30, "sign"]], "simplify": [[48, "id1"]], "sin": [[30, "sin"]], "singleton": [[27, "module-diofant.core.singleton"]], "sinh": [[30, "sinh"]], "sol_simplicity": [[52, "sol-simplicity"]], "sqf_normal": [[49, "sqf-normal"]], "sqrt": [[30, "sqrt"]], "sqrtdenest": [[48, "sqrtdenest"]], "square_factor": [[49, "square-factor"]], "stirling": [[29, "stirling"]], "subfactorial": [[29, "subfactorial"]], "sum_of_four_squares": [[49, "sum-of-four-squares"]], "sum_of_squares": [[49, "sum-of-squares"]], "sum_of_three_squares": [[49, "sum-of-three-squares"]], "symbol": [[27, "module-diofant.core.symbol"]], "symbols": [[27, "symbols"]], "sympify": [[27, "module-diofant.core.sympify"], [27, "id1"]], "system_of_odes_linear_2eq_order1_type3": [[52, "system-of-odes-linear-2eq-order1-type3"]], "system_of_odes_linear_2eq_order1_type4": [[52, "system-of-odes-linear-2eq-order1-type4"]], "system_of_odes_linear_2eq_order1_type5": [[52, "system-of-odes-linear-2eq-order1-type5"]], "system_of_odes_linear_2eq_order1_type6": [[52, "system-of-odes-linear-2eq-order1-type6"]], "system_of_odes_linear_2eq_order1_type7": [[52, "system-of-odes-linear-2eq-order1-type7"]], "system_of_odes_linear_2eq_order2_type1": [[52, "system-of-odes-linear-2eq-order2-type1"]], "system_of_odes_linear_2eq_order2_type11": [[52, "system-of-odes-linear-2eq-order2-type11"]], "system_of_odes_linear_2eq_order2_type2": [[52, "system-of-odes-linear-2eq-order2-type2"]], "system_of_odes_linear_2eq_order2_type3": [[52, "system-of-odes-linear-2eq-order2-type3"]], "system_of_odes_linear_2eq_order2_type5": [[52, "system-of-odes-linear-2eq-order2-type5"]], "system_of_odes_linear_2eq_order2_type6": [[52, "system-of-odes-linear-2eq-order2-type6"]], "system_of_odes_linear_2eq_order2_type7": [[52, "system-of-odes-linear-2eq-order2-type7"]], "system_of_odes_linear_2eq_order2_type8": [[52, "system-of-odes-linear-2eq-order2-type8"]], "system_of_odes_linear_2eq_order2_type9": [[52, "system-of-odes-linear-2eq-order2-type9"]], "system_of_odes_linear_3eq_order1_type4": [[52, "system-of-odes-linear-3eq-order1-type4"]], "system_of_odes_linear_neq_order1_type1": [[52, "system-of-odes-linear-neq-order1-type1"]], "system_of_odes_nonlinear_2eq_order1_type1": [[52, "system-of-odes-nonlinear-2eq-order1-type1"]], "system_of_odes_nonlinear_2eq_order1_type2": [[52, "system-of-odes-nonlinear-2eq-order1-type2"]], "system_of_odes_nonlinear_2eq_order1_type3": [[52, "system-of-odes-nonlinear-2eq-order1-type3"]], "system_of_odes_nonlinear_2eq_order1_type4": [[52, "system-of-odes-nonlinear-2eq-order1-type4"]], "system_of_odes_nonlinear_2eq_order1_type5": [[52, "system-of-odes-nonlinear-2eq-order1-type5"]], "system_of_odes_nonlinear_3eq_order1_type1": [[52, "system-of-odes-nonlinear-3eq-order1-type1"]], "system_of_odes_nonlinear_3eq_order1_type2": [[52, "system-of-odes-nonlinear-3eq-order1-type2"]], "tan": [[30, "tan"]], "tanh": [[30, "tanh"]], "transformation_to_DN": [[49, "transformation-to-dn"]], "transformation_to_normal": [[49, "transformation-to-normal"]], "transpose": [[30, "transpose"]], "tree_cse": [[48, "tree-cse"]], "trigsimp": [[48, "trigsimp"]], "uFuncify": [[5, "ufuncify"]], "unrad": [[48, "unrad"]], "use": [[48, "use"]], "var": [[27, "var"]], "vectorize": [[27, "vectorize"]]}, "docnames": ["aboutus", "cli", "guide", "index", "install", "internals/evalf", "internals/g-functions", "internals/gruntz", "internals/hyperexpand", "internals/index", "internals/polys", "modules/calculus/index", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/config", "modules/core", "modules/domains", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/index", "modules/integrals", "modules/interactive", "modules/logic", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/sparse", "modules/ntheory", "modules/parsing", "modules/polys", "modules/printing", "modules/sets", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/recurr", "modules/solvers/solvers", "modules/solvers/utilities", "modules/tensor/array", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/randtest", "release/index", "release/notes-0.10", "release/notes-0.11", "release/notes-0.12", "release/notes-0.13", "release/notes-0.14", "release/notes-0.15", "release/notes-0.5.0", "release/notes-0.5.1", "release/notes-0.5.10", "release/notes-0.5.11", "release/notes-0.5.12", "release/notes-0.5.13", "release/notes-0.5.14", "release/notes-0.5.15", "release/notes-0.5.2", "release/notes-0.5.3", "release/notes-0.5.4", "release/notes-0.5.5", "release/notes-0.5.6", "release/notes-0.5.7", "release/notes-0.5.8", "release/notes-0.5.9", "release/notes-0.6.0", "release/notes-0.6.1", "release/notes-0.6.2", "release/notes-0.6.3", "release/notes-0.6.4", "release/notes-0.6.5", "release/notes-0.6.6", "release/notes-0.6.7", "release/notes-0.7.0", "release/notes-0.7.1", "release/notes-0.7.2", "release/notes-0.7.3", "release/notes-0.7.4", "release/notes-0.7.5", "release/notes-0.7.6", "release/notes-0.8", "release/notes-0.9", "release/sympy", "sources", "tutorial/basics", "tutorial/calculus", "tutorial/gotchas", "tutorial/index", "tutorial/intro", "tutorial/manipulation", "tutorial/matrices", "tutorial/polys", "tutorial/printing", "tutorial/simplification", "tutorial/solvers"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["aboutus.rst", "cli.rst", "guide.rst", "index.rst", "install.rst", "internals/evalf.rst", "internals/g-functions.rst", "internals/gruntz.rst", "internals/hyperexpand.rst", "internals/index.rst", "internals/polys.rst", "modules/calculus/index.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/config.rst", "modules/core.rst", "modules/domains.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/index.rst", "modules/integrals.rst", "modules/interactive.rst", "modules/logic.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/sparse.rst", "modules/ntheory.rst", "modules/parsing.rst", "modules/polys.rst", "modules/printing.rst", "modules/sets.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/recurr.rst", "modules/solvers/solvers.rst", "modules/solvers/utilities.rst", "modules/tensor/array.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/randtest.rst", "release/index.rst", "release/notes-0.10.rst", "release/notes-0.11.rst", "release/notes-0.12.rst", "release/notes-0.13.rst", "release/notes-0.14.rst", "release/notes-0.15.rst", "release/notes-0.5.0.rst", "release/notes-0.5.1.rst", "release/notes-0.5.10.rst", "release/notes-0.5.11.rst", "release/notes-0.5.12.rst", "release/notes-0.5.13.rst", "release/notes-0.5.14.rst", "release/notes-0.5.15.rst", "release/notes-0.5.2.rst", "release/notes-0.5.3.rst", "release/notes-0.5.4.rst", "release/notes-0.5.5.rst", "release/notes-0.5.6.rst", "release/notes-0.5.7.rst", "release/notes-0.5.8.rst", "release/notes-0.5.9.rst", "release/notes-0.6.0.rst", "release/notes-0.6.1.rst", "release/notes-0.6.2.rst", "release/notes-0.6.3.rst", "release/notes-0.6.4.rst", "release/notes-0.6.5.rst", "release/notes-0.6.6.rst", "release/notes-0.6.7.rst", "release/notes-0.7.0.rst", "release/notes-0.7.1.rst", "release/notes-0.7.2.rst", "release/notes-0.7.3.rst", "release/notes-0.7.4.rst", "release/notes-0.7.5.rst", "release/notes-0.7.6.rst", "release/notes-0.8.rst", "release/notes-0.9.rst", "release/sympy.rst", "sources.rst", "tutorial/basics.rst", "tutorial/calculus.rst", "tutorial/gotchas.rst", "tutorial/index.rst", "tutorial/intro.rst", "tutorial/manipulation.rst", "tutorial/matrices.rst", "tutorial/polys.rst", "tutorial/printing.rst", "tutorial/simplification.rst", "tutorial/solvers.rst"], "indexentries": {"--auto-symbols": [[1, "cmdoption-python-m-diofant-a", false]], "--help": [[1, "cmdoption-python-m-diofant-h", false]], "--no-ipython": [[1, "cmdoption-python-m-diofant-no-ipython", false]], "--no-wrap-division": [[1, "cmdoption-python-m-diofant-no-wrap-division", false]], "--unicode-identifiers": [[1, "cmdoption-python-m-diofant-unicode-identifiers", false]], "--version": [[1, "cmdoption-python-m-diofant-V", false]], "--wrap-floats": [[1, "cmdoption-python-m-diofant-wrap-floats", false]], "-a": [[1, "cmdoption-python-m-diofant-a", false]], "-h": [[1, "cmdoption-python-m-diofant-h", false]], "-v": [[1, "cmdoption-python-m-diofant-V", false]], "__add__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__add__", false]], "__contains__() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.__contains__", false]], "__eq__() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.__eq__", false]], "__eq__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__eq__", false]], "__getitem__() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.__getitem__", false]], "__getitem__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__getitem__", false]], "__mul__() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.__mul__", false]], "__mul__() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.__mul__", false]], "__mul__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__mul__", false]], "__new__() (diofant.combinatorics.perm_groups.permutationgroup static method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.__new__", false]], "__pow__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__pow__", false]], "__radd__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__radd__", false]], "__rmul__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__rmul__", false]], "__rsub__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__rsub__", false]], "__setitem__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__setitem__", false]], "__sub__() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.__sub__", false]], "__weakref__ (diofant.polys.rings.polyelement attribute)": [[10, "diofant.polys.rings.PolyElement.__weakref__", false]], "_af_parity() (in module diofant.combinatorics.permutations)": [[18, "diofant.combinatorics.permutations._af_parity", false]], "_alpha_to_z() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._alpha_to_z", false]], "_base_ordering() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._base_ordering", false]], "_check_cycles_alt_sym() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._check_cycles_alt_sym", false]], "_chinese_remainder_reconstruction() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._chinese_remainder_reconstruction", false]], "_cmp_perm_lists() (in module diofant.combinatorics.testutil)": [[23, "diofant.combinatorics.testutil._cmp_perm_lists", false]], "_denominator() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._denominator", false]], "_diophantine() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._diophantine", false]], "_diophantine_univariate() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._diophantine_univariate", false]], "_distinct_prime_divisors() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._distinct_prime_divisors", false]], "_distribute_gens_by_base() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._distribute_gens_by_base", false]], "_div() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._div", false]], "_euclidean_algorithm() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._euclidean_algorithm", false]], "_evaluate_ground() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._evaluate_ground", false]], "_extended_euclidean_algorithm() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._extended_euclidean_algorithm", false]], "_factor() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._factor", false]], "_func_field_modgcd_m() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._func_field_modgcd_m", false]], "_func_field_modgcd_p() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._func_field_modgcd_p", false]], "_gf_gcdex() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._gf_gcdex", false]], "_handle_integral() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._handle_Integral", false]], "_handle_precomputed_bsgs() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._handle_precomputed_bsgs", false]], "_hensel_lift() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._hensel_lift", false]], "_interpolate() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._interpolate", false]], "_leading_coeffs() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._leading_coeffs", false]], "_linear_2eq_order1_type3() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order1_type3", false]], "_linear_2eq_order1_type4() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order1_type4", false]], "_linear_2eq_order1_type5() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order1_type5", false]], "_linear_2eq_order1_type6() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order1_type6", false]], "_linear_2eq_order1_type7() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order1_type7", false]], "_linear_2eq_order2_type1() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type1", false]], "_linear_2eq_order2_type11() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type11", false]], "_linear_2eq_order2_type2() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type2", false]], "_linear_2eq_order2_type3() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type3", false]], "_linear_2eq_order2_type5() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type5", false]], "_linear_2eq_order2_type6() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type6", false]], "_linear_2eq_order2_type7() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type7", false]], "_linear_2eq_order2_type8() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type8", false]], "_linear_2eq_order2_type9() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_2eq_order2_type9", false]], "_linear_3eq_order1_type4() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._linear_3eq_order1_type4", false]], "_minpoly_from_dense() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._minpoly_from_dense", false]], "_modgcd_p() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._modgcd_p", false]], "_monic_associate() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._monic_associate", false]], "_naive_list_centralizer() (in module diofant.combinatorics.testutil)": [[23, "diofant.combinatorics.testutil._naive_list_centralizer", false]], "_nonlinear_2eq_order1_type1() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._nonlinear_2eq_order1_type1", false]], "_nonlinear_2eq_order1_type2() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._nonlinear_2eq_order1_type2", false]], "_nonlinear_2eq_order1_type3() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._nonlinear_2eq_order1_type3", false]], "_nonlinear_2eq_order1_type4() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._nonlinear_2eq_order1_type4", false]], "_nonlinear_2eq_order1_type5() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._nonlinear_2eq_order1_type5", false]], "_nonlinear_3eq_order1_type1() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._nonlinear_3eq_order1_type1", false]], "_nonlinear_3eq_order1_type2() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._nonlinear_3eq_order1_type2", false]], "_orbits_transversals_from_bsgs() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._orbits_transversals_from_bsgs", false]], "_padic_lift() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._padic_lift", false]], "_primitive_in_x0() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._primitive_in_x0", false]], "_print() (diofant.printing.printer.printer method)": [[46, "diofant.printing.printer.Printer._print", false]], "_rational_function_reconstruction() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._rational_function_reconstruction", false]], "_rational_reconstruction_func_coeffs() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._rational_reconstruction_func_coeffs", false]], "_rational_reconstruction_int_coeffs() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._rational_reconstruction_int_coeffs", false]], "_remove_gens() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._remove_gens", false]], "_sqf_p() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._sqf_p", false]], "_strip() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._strip", false]], "_strong_gens_from_distr() (in module diofant.combinatorics.util)": [[24, "diofant.combinatorics.util._strong_gens_from_distr", false]], "_subs_ground() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._subs_ground", false]], "_test_evaluation_points() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._test_evaluation_points", false]], "_test_prime() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._test_prime", false]], "_to_anp_poly() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._to_ANP_poly", false]], "_to_zz_poly() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._to_ZZ_poly", false]], "_trunc() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd._trunc", false]], "_undetermined_coefficients_match() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode._undetermined_coefficients_match", false]], "_union_find_merge() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup._union_find_merge", false]], "_union_find_rep() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup._union_find_rep", false]], "_verify_bsgs() (in module diofant.combinatorics.testutil)": [[23, "diofant.combinatorics.testutil._verify_bsgs", false]], "_verify_centralizer() (in module diofant.combinatorics.testutil)": [[23, "diofant.combinatorics.testutil._verify_centralizer", false]], "_verify_normal_closure() (in module diofant.combinatorics.testutil)": [[23, "diofant.combinatorics.testutil._verify_normal_closure", false]], "_z_to_alpha() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field._z_to_alpha", false]], "_zz_heu_gcd() (diofant.polys.euclidtools._gcd method)": [[10, "diofant.polys.euclidtools._GCD._zz_heu_gcd", false]], "a (diofant.polys.rootisolation.realinterval property)": [[10, "diofant.polys.rootisolation.RealInterval.a", false]], "a2idx() (in module diofant.matrices.matrices)": [[41, "diofant.matrices.matrices.a2idx", false]], "abeliangroup() (in module diofant.combinatorics.named_groups)": [[15, "diofant.combinatorics.named_groups.AbelianGroup", false]], "above() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.above", false]], "abs (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.Abs", false]], "accepted_latex_functions (in module diofant.printing.latex)": [[46, "diofant.printing.latex.accepted_latex_functions", false]], "acos (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.acos", false]], "acosh (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.acosh", false]], "acot (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.acot", false]], "acoth (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.acoth", false]], "acsc (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.acsc", false]], "add (class in diofant.core.add)": [[27, "diofant.core.add.Add", false]], "add() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.add", false]], "add() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.add", false]], "add_formulae() (in module diofant.simplify.hyperexpand)": [[8, "diofant.simplify.hyperexpand.add_formulae", false]], "adjoint (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.adjoint", false]], "adjoint() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.adjoint", false]], "adjoint() (diofant.matrices.immutable.immutablematrix method)": [[39, "diofant.matrices.immutable.ImmutableMatrix.adjoint", false]], "adjoint() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.adjoint", false]], "adjugate() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.adjugate", false]], "airyai (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.airyai", false]], "airyaiprime (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.airyaiprime", false]], "airybase (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.AiryBase", false]], "airybi (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.airybi", false]], "airybiprime (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.airybiprime", false]], "algebraic_field() (diofant.domains.algebraicfield method)": [[28, "diofant.domains.AlgebraicField.algebraic_field", false]], "algebraic_field() (diofant.domains.rationalfield method)": [[28, "diofant.domains.RationalField.algebraic_field", false]], "algebraicfield (class in diofant.domains)": [[28, "diofant.domains.AlgebraicField", false]], "all_coeffs() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.all_coeffs", false]], "all_roots() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.all_roots", false]], "all_roots() (diofant.polys.rootoftools.rootof class method)": [[45, "diofant.polys.rootoftools.RootOf.all_roots", false]], "allhints (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.allhints", false]], "almosteq() (diofant.domains.complexfield method)": [[28, "diofant.domains.ComplexField.almosteq", false]], "almosteq() (diofant.domains.realfield method)": [[28, "diofant.domains.RealField.almosteq", false]], "alternating() (diofant.combinatorics.generators method)": [[18, "diofant.combinatorics.generators.alternating", false]], "alternatinggroup() (in module diofant.combinatorics.named_groups)": [[15, "diofant.combinatorics.named_groups.AlternatingGroup", false]], "an (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.an", false]], "and (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.And", false]], "annotated() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.annotated", false]], "antidivisor_count() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.antidivisor_count", false]], "antidivisors() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.antidivisors", false]], "aother (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.aother", false]], "ap (diofant.functions.special.hyper.hyper property)": [[32, "diofant.functions.special.hyper.hyper.ap", false]], "ap (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.ap", false]], "apart() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.apart", false]], "apart() (in module diofant.polys.partfrac)": [[45, "diofant.polys.partfrac.apart", false]], "apart_list() (in module diofant.polys.partfrac)": [[45, "diofant.polys.partfrac.apart_list", false]], "apply() (diofant.simplify.epathtools.epath method)": [[48, "diofant.simplify.epathtools.EPath.apply", false]], "applyfunc() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.applyfunc", false]], "applyfunc() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.applyfunc", false]], "approximation_interval() (diofant.core.numbers.numbersymbol method)": [[27, "diofant.core.numbers.NumberSymbol.approximation_interval", false]], "arg (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.arg", false]], "args (diofant.core.basic.basic property)": [[27, "diofant.core.basic.Basic.args", false]], "args (diofant.core.containers.dict property)": [[27, "diofant.core.containers.Dict.args", false]], "args (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.args", false]], "args (diofant.tensor.indexed.indexedbase property)": [[60, "diofant.tensor.indexed.IndexedBase.args", false]], "args_cnc() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.args_cnc", false]], "argument (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.Argument", false]], "argument (diofant.functions.special.bessel.besselbase property)": [[32, "diofant.functions.special.bessel.BesselBase.argument", false]], "argument (diofant.functions.special.hyper.hyper property)": [[32, "diofant.functions.special.hyper.hyper.argument", false]], "argument (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.argument", false]], "array (class in diofant.tensor.array)": [[57, "diofant.tensor.array.Array", false]], "array_form (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.array_form", false]], "array_form (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.array_form", false]], "as_base_exp() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_base_exp", false]], "as_base_exp() (diofant.core.mul.mul method)": [[27, "diofant.core.mul.Mul.as_base_exp", false]], "as_base_exp() (diofant.core.power.pow method)": [[27, "diofant.core.power.Pow.as_base_exp", false]], "as_coeff_add() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.as_coeff_Add", false], [27, "diofant.core.add.Add.as_coeff_add", false]], "as_coeff_add() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_coeff_Add", false], [27, "diofant.core.expr.Expr.as_coeff_add", false]], "as_coeff_add() (diofant.core.numbers.number method)": [[27, "diofant.core.numbers.Number.as_coeff_Add", false], [27, "diofant.core.numbers.Number.as_coeff_add", false]], "as_coeff_exponent() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_coeff_exponent", false]], "as_coeff_mul() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_coeff_Mul", false], [27, "diofant.core.expr.Expr.as_coeff_mul", false]], "as_coeff_mul() (diofant.core.mul.mul method)": [[27, "diofant.core.mul.Mul.as_coeff_Mul", false], [27, "diofant.core.mul.Mul.as_coeff_mul", false]], "as_coeff_mul() (diofant.core.numbers.number method)": [[27, "diofant.core.numbers.Number.as_coeff_Mul", false], [27, "diofant.core.numbers.Number.as_coeff_mul", false]], "as_coefficient() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_coefficient", false]], "as_coefficients_dict() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.as_coefficients_dict", false]], "as_coefficients_dict() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_coefficients_dict", false]], "as_content_primitive() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.as_content_primitive", false]], "as_content_primitive() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_content_primitive", false]], "as_content_primitive() (diofant.core.mul.mul method)": [[27, "diofant.core.mul.Mul.as_content_primitive", false]], "as_content_primitive() (diofant.core.numbers.rational method)": [[27, "diofant.core.numbers.Rational.as_content_primitive", false]], "as_content_primitive() (diofant.core.power.pow method)": [[27, "diofant.core.power.Pow.as_content_primitive", false]], "as_dict() (diofant.combinatorics.partitions.integerpartition method)": [[16, "diofant.combinatorics.partitions.IntegerPartition.as_dict", false]], "as_dict() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.as_dict", false]], "as_dummy() (diofant.concrete.expr_with_limits.exprwithlimits method)": [[25, "diofant.concrete.expr_with_limits.ExprWithLimits.as_dummy", false]], "as_explicit() (diofant.matrices.expressions.matrixexpr method)": [[38, "diofant.matrices.expressions.MatrixExpr.as_explicit", false]], "as_expr() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_expr", false]], "as_expr() (diofant.polys.monomials.monomial method)": [[45, "diofant.polys.monomials.Monomial.as_expr", false]], "as_expr() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.as_expr", false]], "as_ferrers() (diofant.combinatorics.partitions.integerpartition method)": [[16, "diofant.combinatorics.partitions.IntegerPartition.as_ferrers", false]], "as_immutable() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.as_immutable", false]], "as_immutable() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.as_immutable", false]], "as_independent() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_independent", false]], "as_int() (in module diofant.core.compatibility)": [[27, "diofant.core.compatibility.as_int", false]], "as_leading_term() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_leading_term", false]], "as_mutable() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.as_mutable", false]], "as_mutable() (diofant.matrices.expressions.matrixexpr method)": [[38, "diofant.matrices.expressions.MatrixExpr.as_mutable", false]], "as_mutable() (diofant.matrices.immutable.immutablematrix method)": [[39, "diofant.matrices.immutable.ImmutableMatrix.as_mutable", false]], "as_mutable() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.as_mutable", false]], "as_numer_denom() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_numer_denom", false]], "as_ordered_factors() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_ordered_factors", false]], "as_ordered_factors() (diofant.core.mul.mul method)": [[27, "diofant.core.mul.Mul.as_ordered_factors", false]], "as_ordered_terms() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_ordered_terms", false]], "as_poly() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_poly", false]], "as_powers_dict() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_powers_dict", false]], "as_powers_dict() (diofant.core.mul.mul method)": [[27, "diofant.core.mul.Mul.as_powers_dict", false]], "as_property() (in module diofant.core.assumptions)": [[27, "diofant.core.assumptions.as_property", false]], "as_real_imag() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.as_real_imag", false]], "as_real_imag() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_real_imag", false]], "as_real_imag() (diofant.core.mul.mul method)": [[27, "diofant.core.mul.Mul.as_real_imag", false]], "as_real_imag() (diofant.core.power.log method)": [[27, "diofant.core.power.log.as_real_imag", false]], "as_real_imag() (diofant.core.power.pow method)": [[27, "diofant.core.power.Pow.as_real_imag", false]], "as_real_imag() (diofant.functions.elementary.complexes.im method)": [[30, "diofant.functions.elementary.complexes.im.as_real_imag", false]], "as_real_imag() (diofant.functions.elementary.complexes.re method)": [[30, "diofant.functions.elementary.complexes.re.as_real_imag", false]], "as_real_imag() (diofant.functions.elementary.hyperbolic.sinh method)": [[30, "diofant.functions.elementary.hyperbolic.sinh.as_real_imag", false]], "as_relational() (diofant.sets.sets.finiteset method)": [[47, "diofant.sets.sets.FiniteSet.as_relational", false]], "as_relational() (diofant.sets.sets.intersection method)": [[47, "diofant.sets.sets.Intersection.as_relational", false]], "as_relational() (diofant.sets.sets.interval method)": [[47, "diofant.sets.sets.Interval.as_relational", false]], "as_relational() (diofant.sets.sets.union method)": [[47, "diofant.sets.sets.Union.as_relational", false]], "as_set() (diofant.core.relational.relational method)": [[27, "diofant.core.relational.Relational.as_set", false]], "as_sum() (diofant.integrals.integrals.integral method)": [[34, "diofant.integrals.integrals.Integral.as_sum", false]], "as_terms() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.as_terms", false]], "as_tuple() (diofant.polys.rootisolation.complexinterval method)": [[10, "diofant.polys.rootisolation.ComplexInterval.as_tuple", false]], "as_tuple() (diofant.polys.rootisolation.realinterval method)": [[10, "diofant.polys.rootisolation.RealInterval.as_tuple", false]], "as_two_terms() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.as_two_terms", false]], "as_two_terms() (diofant.core.mul.mul method)": [[27, "diofant.core.mul.Mul.as_two_terms", false]], "ascents() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.ascents", false]], "asec (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.asec", false]], "aseries() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.aseries", false]], "asin (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.asin", false]], "asinh (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.asinh", false]], "assemble_partfrac_list() (in module diofant.polys.partfrac)": [[45, "diofant.polys.partfrac.assemble_partfrac_list", false]], "assignmenterror": [[46, "diofant.printing.codeprinter.AssignmentError", false]], "assoc_laguerre (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.assoc_laguerre", false]], "assoc_legendre (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.assoc_legendre", false]], "atan (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.atan", false]], "atan2 (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.atan2", false]], "atanh (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.atanh", false]], "atom (class in diofant.core.basic)": [[27, "diofant.core.basic.Atom", false]], "atomicexpr (class in diofant.core.expr)": [[27, "diofant.core.expr.AtomicExpr", false]], "atoms() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.atoms", false]], "atoms() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.atoms", false]], "atoms() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.atoms", false]], "auto_number() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.auto_number", false]], "auto_symbol() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.auto_symbol", false]], "automaticsymbols (class in diofant.interactive.session)": [[35, "diofant.interactive.session.AutomaticSymbols", false]], "autowrap() (in module diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.autowrap", false]], "ax (diofant.polys.rootisolation.complexinterval property)": [[10, "diofant.polys.rootisolation.ComplexInterval.ax", false]], "ay (diofant.polys.rootisolation.complexinterval property)": [[10, "diofant.polys.rootisolation.ComplexInterval.ay", false]], "b (diofant.polys.rootisolation.realinterval property)": [[10, "diofant.polys.rootisolation.RealInterval.b", false]], "base (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.base", false]], "base (diofant.core.power.pow property)": [[27, "diofant.core.power.Pow.base", false]], "base (diofant.tensor.indexed.indexed property)": [[60, "diofant.tensor.indexed.Indexed.base", false]], "base_solution_linear() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.base_solution_linear", false]], "basepolynomialerror": [[10, "diofant.polys.polyerrors.BasePolynomialError", false]], "baseswap() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.baseswap", false]], "basic (class in diofant.core.basic)": [[27, "diofant.core.basic.Basic", false]], "basic_orbits (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.basic_orbits", false]], "basic_stabilizers (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.basic_stabilizers", false]], "basic_transversals (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.basic_transversals", false]], "bell (class in diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.bell", false]], "below() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.below", false]], "berkowitz() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.berkowitz", false]], "berkowitz_charpoly() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.berkowitz_charpoly", false]], "berkowitz_det() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.berkowitz_det", false]], "berkowitz_eigenvals() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.berkowitz_eigenvals", false]], "berkowitz_minors() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.berkowitz_minors", false]], "bernoulli (class in diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.bernoulli", false]], "besselbase (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.BesselBase", false]], "besseli (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.besseli", false]], "besselj (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.besselj", false]], "besselk (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.besselk", false]], "besselsimp() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.besselsimp", false]], "bessely (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.bessely", false]], "beta (class in diofant.functions.special.beta_functions)": [[32, "diofant.functions.special.beta_functions.beta", false]], "bin_to_gray() (diofant.combinatorics.graycode method)": [[12, "diofant.combinatorics.graycode.bin_to_gray", false]], "binary_function() (in module diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.binary_function", false]], "binomial (class in diofant.functions.combinatorial.factorials)": [[29, "diofant.functions.combinatorial.factorials.binomial", false]], "binomial_coefficients() (in module diofant.ntheory.multinomial)": [[43, "diofant.ntheory.multinomial.binomial_coefficients", false]], "binomial_coefficients_list() (in module diofant.ntheory.multinomial)": [[43, "diofant.ntheory.multinomial.binomial_coefficients_list", false]], "bitlist_from_subset() (diofant.combinatorics.subsets.subset class method)": [[21, "diofant.combinatorics.subsets.Subset.bitlist_from_subset", false]], "block_collapse() (in module diofant.matrices.expressions.blockmatrix)": [[38, "diofant.matrices.expressions.blockmatrix.block_collapse", false]], "blockdiagmatrix (class in diofant.matrices.expressions.blockmatrix)": [[38, "diofant.matrices.expressions.blockmatrix.BlockDiagMatrix", false]], "blockmatrix (class in diofant.matrices.expressions.blockmatrix)": [[38, "diofant.matrices.expressions.blockmatrix.BlockMatrix", false]], "bm (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.bm", false]], "booleanfalse (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.BooleanFalse", false]], "booleantrue (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.BooleanTrue", false]], "bother (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.bother", false]], "boundary (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.boundary", false]], "bq (diofant.functions.special.hyper.hyper property)": [[32, "diofant.functions.special.hyper.hyper.bq", false]], "bq (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.bq", false]], "bsgs_direct_product() (in module diofant.combinatorics.tensor_can)": [[22, "diofant.combinatorics.tensor_can.bsgs_direct_product", false]], "bspline_basis() (in module diofant.functions.special.bsplines)": [[32, "diofant.functions.special.bsplines.bspline_basis", false]], "bspline_basis_set() (in module diofant.functions.special.bsplines)": [[32, "diofant.functions.special.bsplines.bspline_basis_set", false]], "buchberger() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.buchberger", false]], "bx (diofant.polys.rootisolation.complexinterval property)": [[10, "diofant.polys.rootisolation.ComplexInterval.bx", false]], "by (diofant.polys.rootisolation.complexinterval property)": [[10, "diofant.polys.rootisolation.ComplexInterval.by", false]], "c (diofant.matrices.immutable.immutablematrix property)": [[39, "diofant.matrices.immutable.ImmutableMatrix.C", false]], "c (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.C", false]], "cacheit() (in module diofant.core.cache)": [[27, "diofant.core.cache.cacheit", false]], "cancel() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.cancel", false]], "cancel() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.cancel", false]], "cancel() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.cancel", false]], "cancel() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.cancel", false]], "canonical (diofant.core.relational.relational property)": [[27, "diofant.core.relational.Relational.canonical", false]], "canonical_variables (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.canonical_variables", false]], "canonicalize() (in module diofant.combinatorics.tensor_can)": [[22, "diofant.combinatorics.tensor_can.canonicalize", false]], "cantor_product() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.cantor_product", false]], "cardinality (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.cardinality", false]], "cardinality (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.cardinality", false]], "casoratian() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.casoratian", false]], "catalan (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Catalan", false]], "catalan (class in diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.catalan", false]], "ccode() (in module diofant.printing.ccode)": [[46, "diofant.printing.ccode.ccode", false]], "ccodegen (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.CCodeGen", false]], "ccodeprinter (class in diofant.printing.ccode)": [[46, "diofant.printing.ccode.CCodePrinter", false]], "ceiling (class in diofant.functions.elementary.integers)": [[30, "diofant.functions.elementary.integers.ceiling", false]], "ceiling() (diofant.core.numbers.float method)": [[27, "diofant.core.numbers.Float.ceiling", false]], "center (diofant.polys.rootisolation.complexinterval property)": [[10, "diofant.polys.rootisolation.ComplexInterval.center", false]], "center (diofant.polys.rootisolation.realinterval property)": [[10, "diofant.polys.rootisolation.RealInterval.center", false]], "center() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.center", false]], "centralizer() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.centralizer", false]], "change_index() (diofant.concrete.expr_with_intlimits.exprwithintlimits method)": [[25, "diofant.concrete.expr_with_intlimits.ExprWithIntLimits.change_index", false]], "characteristic (diofant.domains.ring.commutativering property)": [[28, "diofant.domains.ring.CommutativeRing.characteristic", false]], "characteristiczero (class in diofant.domains.characteristiczero)": [[28, "diofant.domains.characteristiczero.CharacteristicZero", false]], "charpoly() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.charpoly", false]], "chebyshevt (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.chebyshevt", false]], "chebyshevt_poly() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.chebyshevt_poly", false]], "chebyshevt_root (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.chebyshevt_root", false]], "chebyshevu (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.chebyshevu", false]], "chebyshevu_poly() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.chebyshevu_poly", false]], "chebyshevu_root (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.chebyshevu_root", false]], "check_assumptions() (in module diofant.core.assumptions)": [[27, "diofant.core.assumptions.check_assumptions", false]], "checkinfsol() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.checkinfsol", false]], "checkodesol() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.checkodesol", false]], "checkpdesol() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.checkpdesol", false]], "checksol() (in module diofant.solvers.utils)": [[56, "diofant.solvers.utils.checksol", false]], "chi (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.Chi", false]], "cholesky() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.cholesky", false]], "cholesky() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.cholesky", false]], "cholesky_solve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.cholesky_solve", false]], "ci (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.Ci", false]], "cl (diofant.matrices.sparse.sparsematrixbase property)": [[42, "diofant.matrices.sparse.SparseMatrixBase.CL", false]], "class_key() (diofant.core.add.add class method)": [[27, "diofant.core.add.Add.class_key", false]], "class_key() (diofant.core.basic.atom class method)": [[27, "diofant.core.basic.Atom.class_key", false]], "class_key() (diofant.core.basic.basic class method)": [[27, "diofant.core.basic.Basic.class_key", false]], "class_key() (diofant.core.function.function class method)": [[27, "diofant.core.function.Function.class_key", false]], "class_key() (diofant.core.mul.mul class method)": [[27, "diofant.core.mul.Mul.class_key", false]], "class_key() (diofant.core.numbers.number class method)": [[27, "diofant.core.numbers.Number.class_key", false]], "class_key() (diofant.core.power.pow class method)": [[27, "diofant.core.power.Pow.class_key", false]], "class_key() (diofant.core.symbol.dummy class method)": [[27, "diofant.core.symbol.Dummy.class_key", false]], "classify_diop() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.classify_diop", false]], "classify_ode() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.classify_ode", false]], "classify_pde() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.classify_pde", false]], "classof() (in module diofant.matrices.matrices)": [[41, "diofant.matrices.matrices.classof", false]], "clear_denoms() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.clear_denoms", false]], "closure (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.closure", false]], "codegen (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.CodeGen", false]], "codegen() (in module diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.codegen", false]], "codeprinter (class in diofant.printing.codeprinter)": [[46, "diofant.printing.codeprinter.CodePrinter", false]], "codewraperror": [[61, "diofant.utilities.autowrap.CodeWrapError", false]], "codewrapper (class in diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.CodeWrapper", false]], "coeff() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.coeff", false]], "coeff_monomial() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.coeff_monomial", false]], "coeffs() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.coeffs", false]], "coercionfailederror": [[10, "diofant.polys.polyerrors.CoercionFailedError", false]], "cofactor() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.cofactor", false]], "cofactormatrix() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.cofactorMatrix", false]], "cofactors() (diofant.core.numbers.number method)": [[27, "diofant.core.numbers.Number.cofactors", false]], "cofactors() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.cofactors", false]], "cofactors() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.cofactors", false]], "cofactors() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.cofactors", false]], "col_insert() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.col_insert", false]], "col_join() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.col_join", false]], "col_join() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.col_join", false]], "col_list() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.col_list", false]], "col_op() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.col_op", false]], "col_op() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.col_op", false]], "col_swap() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.col_swap", false]], "col_swap() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.col_swap", false]], "collect() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.collect", false]], "collect() (in module diofant.simplify.radsimp)": [[48, "diofant.simplify.radsimp.collect", false]], "collect_const() (in module diofant.simplify.radsimp)": [[48, "diofant.simplify.radsimp.collect_const", false]], "collect_sqrt() (in module diofant.simplify.radsimp)": [[48, "diofant.simplify.radsimp.collect_sqrt", false]], "combsimp() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.combsimp", false]], "combsimp() (in module diofant.simplify.combsimp)": [[48, "diofant.simplify.combsimp.combsimp", false]], "common_prefix() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.common_prefix", false]], "common_suffix() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.common_suffix", false]], "commutativering (class in diofant.domains.ring)": [[28, "diofant.domains.ring.CommutativeRing", false]], "commutator() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.commutator", false]], "commutator() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.commutator", false]], "commutes_with() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.commutes_with", false]], "complement (class in diofant.sets.sets)": [[47, "diofant.sets.sets.Complement", false]], "complement() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.complement", false]], "complexalgebraicfield (class in diofant.domains)": [[28, "diofant.domains.ComplexAlgebraicField", false]], "complexfield (class in diofant.domains)": [[28, "diofant.domains.ComplexField", false]], "complexinfinity (class in diofant.core.numbers)": [[27, "diofant.core.numbers.ComplexInfinity", false]], "complexinterval (class in diofant.polys.rootisolation)": [[10, "diofant.polys.rootisolation.ComplexInterval", false]], "components() (in module diofant.integrals.heurisch)": [[34, "diofant.integrals.heurisch.components", false]], "compose() (diofant.polys.fields.fracelement method)": [[10, "diofant.polys.fields.FracElement.compose", false]], "compose() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.compose", false]], "compose() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.compose", false]], "compose() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.compose", false]], "compositedomain (class in diofant.domains.compositedomain)": [[28, "diofant.domains.compositedomain.CompositeDomain", false]], "computationfailederror": [[10, "diofant.polys.polyerrors.ComputationFailedError", false]], "compute_leading_term() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.compute_leading_term", false]], "cond (diofant.functions.elementary.piecewise.exprcondpair property)": [[30, "diofant.functions.elementary.piecewise.ExprCondPair.cond", false]], "condition_number() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.condition_number", false]], "conjugate (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.conjugate", false]], "conjugate (diofant.combinatorics.partitions.integerpartition property)": [[16, "diofant.combinatorics.partitions.IntegerPartition.conjugate", false]], "conjugate() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.conjugate", false]], "conjugate() (diofant.matrices.immutable.immutablematrix method)": [[39, "diofant.matrices.immutable.ImmutableMatrix.conjugate", false]], "conjugate() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.conjugate", false]], "conjugate() (diofant.polys.rootisolation.complexinterval method)": [[10, "diofant.polys.rootisolation.ComplexInterval.conjugate", false]], "conserve_mpmath_dps() (in module diofant.utilities.decorator)": [[63, "diofant.utilities.decorator.conserve_mpmath_dps", false]], "constant_renumber() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.constant_renumber", false]], "constantsimp() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.constantsimp", false]], "construct_domain() (in module diofant.polys.constructor)": [[45, "diofant.polys.constructor.construct_domain", false]], "contains() (diofant.calculus.order.order method)": [[11, "diofant.calculus.order.Order.contains", false]], "contains() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.contains", false]], "contains() (diofant.polys.polytools.groebnerbasis method)": [[45, "diofant.polys.polytools.GroebnerBasis.contains", false]], "contains() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.contains", false]], "content() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.content", false]], "content() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.content", false]], "content() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.content", false]], "continued_fraction_convergents() (in module diofant.ntheory.continued_fraction)": [[43, "diofant.ntheory.continued_fraction.continued_fraction_convergents", false]], "continued_fraction_iterator() (in module diofant.ntheory.continued_fraction)": [[43, "diofant.ntheory.continued_fraction.continued_fraction_iterator", false]], "continued_fraction_periodic() (in module diofant.ntheory.continued_fraction)": [[43, "diofant.ntheory.continued_fraction.continued_fraction_periodic", false]], "continued_fraction_reduce() (in module diofant.ntheory.continued_fraction)": [[43, "diofant.ntheory.continued_fraction.continued_fraction_reduce", false]], "convergence_statement (diofant.functions.special.hyper.hyper property)": [[32, "diofant.functions.special.hyper.hyper.convergence_statement", false]], "convert() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.convert", false]], "convert_from() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.convert_from", false]], "convert_xor() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.convert_xor", false]], "copy() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.copy", false]], "copy() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.copy", false]], "copy() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.copy", false]], "copyin_list() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.copyin_list", false]], "copyin_matrix() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.copyin_matrix", false]], "core() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.core", false]], "cornacchia() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.cornacchia", false]], "corners (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.corners", false]], "cos (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.cos", false]], "coset_factor() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.coset_factor", false]], "coset_rank() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.coset_rank", false]], "coset_unrank() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.coset_unrank", false]], "cosh (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.cosh", false]], "cosine_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.cosine_transform", false]], "cosinetransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.CosineTransform", false]], "cot (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.cot", false]], "coth (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.coth", false]], "could_extract_minus_sign() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.could_extract_minus_sign", false]], "count() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.count", false]], "count_ops() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.count_ops", false]], "count_ops() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.count_ops", false]], "count_ops() (in module diofant.core.function)": [[27, "diofant.core.function.count_ops", false]], "count_partitions() (diofant.utilities.enumerative.multisetpartitiontraverser method)": [[64, "diofant.utilities.enumerative.MultisetPartitionTraverser.count_partitions", false]], "count_roots() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.count_roots", false]], "count_roots() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.count_roots", false]], "cp_key() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.cp_key", false]], "critical_pair() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.critical_pair", false]], "cross() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.cross", false]], "crt() (in module diofant.ntheory.modular)": [[43, "diofant.ntheory.modular.crt", false]], "crt1() (in module diofant.ntheory.modular)": [[43, "diofant.ntheory.modular.crt1", false]], "crt2() (in module diofant.ntheory.modular)": [[43, "diofant.ntheory.modular.crt2", false]], "csc (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.csc", false]], "csch (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.csch", false]], "cse() (in module diofant.simplify.cse_main)": [[48, "diofant.simplify.cse_main.cse", false]], "current (diofant.combinatorics.graycode.graycode property)": [[12, "diofant.combinatorics.graycode.GrayCode.current", false]], "cycle (class in diofant.combinatorics.permutations)": [[18, "diofant.combinatorics.permutations.Cycle", false]], "cycle_length() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.cycle_length", false]], "cycle_structure (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.cycle_structure", false]], "cycles (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.cycles", false]], "cyclic() (diofant.combinatorics.generators method)": [[18, "diofant.combinatorics.generators.cyclic", false]], "cyclic_form (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.cyclic_form", false]], "cyclic_form (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.cyclic_form", false]], "cyclicgroup() (in module diofant.combinatorics.named_groups)": [[15, "diofant.combinatorics.named_groups.CyclicGroup", false]], "cyclotomic_poly() (in module diofant.polys.specialpolys)": [[45, "diofant.polys.specialpolys.cyclotomic_poly", false]], "cythoncodewrapper (class in diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.CythonCodeWrapper", false]], "d (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.D", false]], "datatype (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.DataType", false]], "decompose() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.decompose", false]], "decompose() (diofant.polys.univar.univarpolyelement method)": [[10, "diofant.polys.univar.UnivarPolyElement.decompose", false]], "decompose() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.decompose", false]], "default_sort_key() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.default_sort_key", false]], "degree (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.degree", false]], "degree() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.degree", false]], "degree() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.degree", false]], "degree() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.degree", false]], "delta (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.delta", false]], "deltaintegrate() (in module diofant.integrals.deltafunctions)": [[34, "diofant.integrals.deltafunctions.deltaintegrate", false]], "densematrix (class in diofant.matrices.dense)": [[37, "diofant.matrices.dense.DenseMatrix", false]], "derivative (class in diofant.core.function)": [[27, "diofant.core.function.Derivative", false]], "derive_by_array() (in module diofant.tensor.array)": [[57, "diofant.tensor.array.derive_by_array", false]], "derived_series() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.derived_series", false]], "derived_subgroup() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.derived_subgroup", false]], "descent() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.descent", false]], "descents() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.descents", false]], "det() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.det", false]], "det_bareiss() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.det_bareiss", false]], "det_lu_decomposition() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.det_LU_decomposition", false]], "diag() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.diag", false]], "diagonal_solve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.diagonal_solve", false]], "diagonalize() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.diagonalize", false]], "dict (class in diofant.core.containers)": [[27, "diofant.core.containers.Dict", false]], "diff() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.diff", false]], "diff() (diofant.matrices.immutable.immutablematrix method)": [[39, "diofant.matrices.immutable.ImmutableMatrix.diff", false]], "diff() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.diff", false]], "diff() (diofant.polys.fields.fracelement method)": [[10, "diofant.polys.fields.FracElement.diff", false]], "diff() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.diff", false]], "diff() (in module diofant.core.function)": [[27, "diofant.core.function.diff", false]], "digamma() (in module diofant.functions.special.gamma_functions)": [[32, "diofant.functions.special.gamma_functions.digamma", false]], "dihedral() (diofant.combinatorics.generators method)": [[18, "diofant.combinatorics.generators.dihedral", false]], "dihedralgroup() (in module diofant.combinatorics.named_groups)": [[15, "diofant.combinatorics.named_groups.DihedralGroup", false]], "dimension (diofant.polys.polytools.groebnerbasis property)": [[45, "diofant.polys.polytools.GroebnerBasis.dimension", false]], "diofant": [[33, "module-diofant", false]], "diofant.calculus": [[11, "module-diofant.calculus", false]], "diofant.calculus.gruntz": [[7, "module-diofant.calculus.gruntz", false]], "diofant.calculus.limits": [[11, "module-diofant.calculus.limits", false]], "diofant.calculus.optimization": [[11, "module-diofant.calculus.optimization", false]], "diofant.calculus.order": [[11, "module-diofant.calculus.order", false]], "diofant.calculus.residues": [[11, "module-diofant.calculus.residues", false]], "diofant.calculus.singularities": [[11, "module-diofant.calculus.singularities", false]], "diofant.combinatorics.generators": [[18, "module-diofant.combinatorics.generators", false]], "diofant.combinatorics.graycode": [[12, "module-diofant.combinatorics.graycode", false]], "diofant.combinatorics.group_constructs": [[13, "module-diofant.combinatorics.group_constructs", false]], "diofant.combinatorics.named_groups": [[15, "module-diofant.combinatorics.named_groups", false]], "diofant.combinatorics.partitions": [[16, "module-diofant.combinatorics.partitions", false]], "diofant.combinatorics.perm_groups": [[17, "module-diofant.combinatorics.perm_groups", false]], "diofant.combinatorics.permutations": [[18, "module-diofant.combinatorics.permutations", false]], "diofant.combinatorics.polyhedron": [[19, "module-diofant.combinatorics.polyhedron", false]], "diofant.combinatorics.prufer": [[20, "module-diofant.combinatorics.prufer", false]], "diofant.combinatorics.subsets": [[21, "module-diofant.combinatorics.subsets", false]], "diofant.combinatorics.tensor_can": [[22, "module-diofant.combinatorics.tensor_can", false]], "diofant.combinatorics.testutil": [[23, "module-diofant.combinatorics.testutil", false]], "diofant.combinatorics.util": [[24, "module-diofant.combinatorics.util", false]], "diofant.config": [[26, "module-diofant.config", false]], "diofant.core": [[27, "module-diofant.core", false]], "diofant.core.add": [[27, "module-diofant.core.add", false]], "diofant.core.assumptions": [[27, "module-diofant.core.assumptions", false]], "diofant.core.basic": [[27, "module-diofant.core.basic", false]], "diofant.core.cache": [[27, "module-diofant.core.cache", false]], "diofant.core.compatibility": [[27, "module-diofant.core.compatibility", false]], "diofant.core.containers": [[27, "module-diofant.core.containers", false]], "diofant.core.core": [[27, "module-diofant.core.core", false]], "diofant.core.evalf": [[27, "module-diofant.core.evalf", false]], "diofant.core.evaluate": [[27, "module-diofant.core.evaluate", false]], "diofant.core.expr": [[27, "module-diofant.core.expr", false]], "diofant.core.exprtools": [[27, "module-diofant.core.exprtools", false]], "diofant.core.function": [[27, "module-diofant.core.function", false]], "diofant.core.mod": [[27, "module-diofant.core.mod", false]], "diofant.core.mul": [[27, "module-diofant.core.mul", false]], "diofant.core.multidimensional": [[27, "module-diofant.core.multidimensional", false]], "diofant.core.numbers": [[27, "module-diofant.core.numbers", false]], "diofant.core.power": [[27, "module-diofant.core.power", false]], "diofant.core.relational": [[27, "module-diofant.core.relational", false]], "diofant.core.singleton": [[27, "module-diofant.core.singleton", false]], "diofant.core.symbol": [[27, "module-diofant.core.symbol", false]], "diofant.core.sympify": [[27, "module-diofant.core.sympify", false]], "diofant.domains": [[28, "module-diofant.domains", false]], "diofant.functions": [[31, "module-diofant.functions", false]], "diofant.functions.special.bessel": [[32, "module-diofant.functions.special.bessel", false]], "diofant.functions.special.beta_functions": [[32, "module-diofant.functions.special.beta_functions", false]], "diofant.functions.special.elliptic_integrals": [[32, "module-diofant.functions.special.elliptic_integrals", false]], "diofant.functions.special.error_functions": [[32, "module-diofant.functions.special.error_functions", false]], "diofant.functions.special.gamma_functions": [[32, "module-diofant.functions.special.gamma_functions", false]], "diofant.functions.special.polynomials": [[32, "module-diofant.functions.special.polynomials", false]], "diofant.functions.special.zeta_functions": [[32, "module-diofant.functions.special.zeta_functions", false]], "diofant.integrals": [[34, "module-diofant.integrals", false]], "diofant.integrals.meijerint_doc": [[6, "module-diofant.integrals.meijerint_doc", false]], "diofant.integrals.quadrature": [[34, "module-diofant.integrals.quadrature", false]], "diofant.integrals.transforms": [[34, "module-diofant.integrals.transforms", false]], "diofant.interactive": [[35, "module-diofant.interactive", false]], "diofant.interactive.printing": [[35, "module-diofant.interactive.printing", false]], "diofant.interactive.session": [[35, "module-diofant.interactive.session", false]], "diofant.logic": [[36, "module-diofant.logic", false]], "diofant.matrices": [[40, "module-diofant.matrices", false]], "diofant.matrices.dense": [[37, "module-diofant.matrices.dense", false]], "diofant.matrices.expressions": [[38, "module-diofant.matrices.expressions", false]], "diofant.matrices.expressions.blockmatrix": [[38, "module-diofant.matrices.expressions.blockmatrix", false]], "diofant.matrices.immutable": [[39, "module-diofant.matrices.immutable", false]], "diofant.matrices.matrices": [[41, "module-diofant.matrices.matrices", false]], "diofant.matrices.sparse": [[42, "module-diofant.matrices.sparse", false]], "diofant.ntheory.continued_fraction": [[43, "module-diofant.ntheory.continued_fraction", false]], "diofant.ntheory.egyptian_fraction": [[43, "module-diofant.ntheory.egyptian_fraction", false]], "diofant.ntheory.factor_": [[43, "module-diofant.ntheory.factor_", false]], "diofant.ntheory.generate": [[43, "module-diofant.ntheory.generate", false]], "diofant.ntheory.modular": [[43, "module-diofant.ntheory.modular", false]], "diofant.ntheory.multinomial": [[43, "module-diofant.ntheory.multinomial", false]], "diofant.ntheory.partitions_": [[43, "module-diofant.ntheory.partitions_", false]], "diofant.ntheory.primetest": [[43, "module-diofant.ntheory.primetest", false]], "diofant.ntheory.residue_ntheory": [[43, "module-diofant.ntheory.residue_ntheory", false]], "diofant.parsing": [[44, "module-diofant.parsing", false]], "diofant.polys": [[45, "module-diofant.polys", false]], "diofant.polys.constructor": [[45, "module-diofant.polys.constructor", false]], "diofant.polys.euclidtools": [[10, "module-diofant.polys.euclidtools", false]], "diofant.polys.factorization_alg_field": [[10, "module-diofant.polys.factorization_alg_field", false]], "diofant.polys.factortools": [[10, "module-diofant.polys.factortools", false]], "diofant.polys.groebnertools": [[10, "module-diofant.polys.groebnertools", false]], "diofant.polys.modulargcd": [[10, "module-diofant.polys.modulargcd", false]], "diofant.polys.monomials": [[45, "module-diofant.polys.monomials", false]], "diofant.polys.numberfields": [[45, "module-diofant.polys.numberfields", false]], "diofant.polys.orderings": [[45, "module-diofant.polys.orderings", false]], "diofant.polys.orthopolys": [[45, "module-diofant.polys.orthopolys", false]], "diofant.polys.partfrac": [[45, "module-diofant.polys.partfrac", false]], "diofant.polys.polyerrors": [[10, "module-diofant.polys.polyerrors", false]], "diofant.polys.polyfuncs": [[45, "module-diofant.polys.polyfuncs", false]], "diofant.polys.polyoptions": [[10, "module-diofant.polys.polyoptions", false]], "diofant.polys.polyroots": [[45, "module-diofant.polys.polyroots", false]], "diofant.polys.polytools": [[45, "module-diofant.polys.polytools", false]], "diofant.polys.rationaltools": [[45, "module-diofant.polys.rationaltools", false]], "diofant.polys.rootisolation": [[10, "module-diofant.polys.rootisolation", false]], "diofant.polys.rootoftools": [[45, "module-diofant.polys.rootoftools", false]], "diofant.polys.specialpolys": [[45, "module-diofant.polys.specialpolys", false]], "diofant.polys.sqfreetools": [[10, "module-diofant.polys.sqfreetools", false]], "diofant.printing": [[46, "module-diofant.printing", false]], "diofant.printing.ccode": [[46, "module-diofant.printing.ccode", false]], "diofant.printing.codeprinter": [[46, "module-diofant.printing.codeprinter", false]], "diofant.printing.conventions": [[46, "module-diofant.printing.conventions", false]], "diofant.printing.fcode": [[46, "module-diofant.printing.fcode", false]], "diofant.printing.lambdarepr": [[46, "module-diofant.printing.lambdarepr", false]], "diofant.printing.latex": [[46, "module-diofant.printing.latex", false]], "diofant.printing.mathematica": [[46, "module-diofant.printing.mathematica", false]], "diofant.printing.mathml": [[46, "module-diofant.printing.mathml", false]], "diofant.printing.precedence": [[46, "module-diofant.printing.precedence", false]], "diofant.printing.pretty": [[46, "module-diofant.printing.pretty", false]], "diofant.printing.pretty_symbology": [[46, "module-diofant.printing.pretty_symbology", false]], "diofant.printing.printer": [[46, "module-diofant.printing.printer", false]], "diofant.printing.python": [[46, "module-diofant.printing.python", false]], "diofant.printing.repr": [[46, "module-diofant.printing.repr", false]], "diofant.printing.str": [[46, "module-diofant.printing.str", false]], "diofant.printing.stringpict": [[46, "module-diofant.printing.stringpict", false]], "diofant.sets.fancysets": [[47, "module-diofant.sets.fancysets", false]], "diofant.sets.sets": [[47, "module-diofant.sets.sets", false]], "diofant.simplify.combsimp": [[48, "module-diofant.simplify.combsimp", false]], "diofant.simplify.cse_main": [[48, "module-diofant.simplify.cse_main", false]], "diofant.simplify.epathtools": [[48, "module-diofant.simplify.epathtools", false]], "diofant.simplify.fu": [[48, "module-diofant.simplify.fu", false]], "diofant.simplify.hyperexpand": [[48, "module-diofant.simplify.hyperexpand", false]], "diofant.simplify.hyperexpand_doc": [[8, "module-diofant.simplify.hyperexpand_doc", false]], "diofant.simplify.powsimp": [[48, "module-diofant.simplify.powsimp", false]], "diofant.simplify.radsimp": [[48, "module-diofant.simplify.radsimp", false]], "diofant.simplify.ratsimp": [[48, "module-diofant.simplify.ratsimp", false]], "diofant.simplify.sqrtdenest": [[48, "module-diofant.simplify.sqrtdenest", false]], "diofant.simplify.traversaltools": [[48, "module-diofant.simplify.traversaltools", false]], "diofant.simplify.trigsimp": [[48, "module-diofant.simplify.trigsimp", false]], "diofant.solvers": [[50, "module-diofant.solvers", false]], "diofant.solvers.deutils": [[56, "module-diofant.solvers.deutils", false]], "diofant.solvers.diophantine": [[49, "module-diofant.solvers.diophantine", false]], "diofant.solvers.inequalities": [[51, "module-diofant.solvers.inequalities", false]], "diofant.solvers.ode": [[52, "module-diofant.solvers.ode", false]], "diofant.solvers.pde": [[53, "module-diofant.solvers.pde", false]], "diofant.solvers.polysys": [[55, "module-diofant.solvers.polysys", false]], "diofant.solvers.recurr": [[54, "module-diofant.solvers.recurr", false]], "diofant.solvers.solvers": [[55, "module-diofant.solvers.solvers", false]], "diofant.solvers.utils": [[56, "module-diofant.solvers.utils", false]], "diofant.tensor": [[58, "module-diofant.tensor", false]], "diofant.tensor.array": [[57, "module-diofant.tensor.array", false]], "diofant.tensor.index_methods": [[59, "module-diofant.tensor.index_methods", false]], "diofant.tensor.indexed": [[60, "module-diofant.tensor.indexed", false]], "diofant.utilities": [[65, "module-diofant.utilities", false]], "diofant.utilities.autowrap": [[61, "module-diofant.utilities.autowrap", false]], "diofant.utilities.codegen": [[62, "module-diofant.utilities.codegen", false]], "diofant.utilities.decorator": [[63, "module-diofant.utilities.decorator", false]], "diofant.utilities.enumerative": [[64, "module-diofant.utilities.enumerative", false]], "diofant.utilities.iterables": [[66, "module-diofant.utilities.iterables", false]], "diofant.utilities.lambdify": [[67, "module-diofant.utilities.lambdify", false]], "diofant.utilities.memoization": [[68, "module-diofant.utilities.memoization", false]], "diofant.utilities.misc": [[69, "module-diofant.utilities.misc", false]], "diofant.utilities.randtest": [[70, "module-diofant.utilities.randtest", false]], "diop_bf_dn() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_bf_DN", false]], "diop_dn() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_DN", false]], "diop_general_pythagorean() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_general_pythagorean", false]], "diop_general_sum_of_even_powers() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_general_sum_of_even_powers", false]], "diop_general_sum_of_squares() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_general_sum_of_squares", false]], "diop_linear() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_linear", false]], "diop_quadratic() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_quadratic", false]], "diop_solve() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_solve", false]], "diop_ternary_quadratic() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_ternary_quadratic", false]], "diop_ternary_quadratic_normal() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diop_ternary_quadratic_normal", false]], "diophantine() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.diophantine", false]], "diracdelta (class in diofant.functions.special.delta_functions)": [[32, "diofant.functions.special.delta_functions.DiracDelta", false]], "directproduct() (in module diofant.combinatorics.group_constructs)": [[13, "diofant.combinatorics.group_constructs.DirectProduct", false]], "dirichlet_eta (class in diofant.functions.special.zeta_functions)": [[32, "diofant.functions.special.zeta_functions.dirichlet_eta", false]], "discrete_log() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.discrete_log", false]], "discriminant() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.discriminant", false]], "discriminant() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.discriminant", false]], "discriminant() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.discriminant", false]], "dispersionset() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.dispersionset", false]], "dispersionset() (diofant.polys.univar.univarpolynomialring method)": [[28, "diofant.polys.univar.UnivarPolynomialRing.dispersionset", false]], "div() (diofant.domains.field.field method)": [[28, "diofant.domains.field.Field.div", false]], "div() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.div", false]], "div() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.div", false]], "div() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.div", false]], "div() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.div", false]], "divides() (diofant.polys.monomials.monomial method)": [[45, "diofant.polys.monomials.Monomial.divides", false]], "divisible() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.divisible", false]], "divisor_count() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.divisor_count", false]], "divisor_sigma (class in diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.divisor_sigma", false]], "divisors() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.divisors", false]], "doctest_depends_on() (in module diofant.utilities.decorator)": [[63, "diofant.utilities.decorator.doctest_depends_on", false]], "doit() (diofant.calculus.limits.limit method)": [[11, "diofant.calculus.limits.Limit.doit", false]], "doit() (diofant.core.basic.atom method)": [[27, "diofant.core.basic.Atom.doit", false]], "doit() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.doit", false]], "doit() (diofant.core.function.derivative method)": [[27, "diofant.core.function.Derivative.doit", false]], "doit() (diofant.core.function.subs method)": [[27, "diofant.core.function.Subs.doit", false]], "doit() (diofant.functions.elementary.piecewise.piecewise method)": [[30, "diofant.functions.elementary.piecewise.Piecewise.doit", false]], "doit() (diofant.integrals.integrals.integral method)": [[34, "diofant.integrals.integrals.Integral.doit", false]], "doit() (diofant.integrals.transforms.integraltransform method)": [[34, "diofant.integrals.transforms.IntegralTransform.doit", false]], "doit_numerically() (diofant.core.function.derivative method)": [[27, "diofant.core.function.Derivative.doit_numerically", false]], "domain (class in diofant.domains.domain)": [[28, "diofant.domains.domain.Domain", false]], "domain (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.domain", false]], "domainerror": [[10, "diofant.polys.polyerrors.DomainError", false]], "doprint() (diofant.printing.mathematica.mcodeprinter method)": [[46, "diofant.printing.mathematica.MCodePrinter.doprint", false]], "doprint() (diofant.printing.mathml.mathmlprinter method)": [[46, "diofant.printing.mathml.MathMLPrinter.doprint", false]], "doprint() (diofant.printing.printer.printer method)": [[46, "diofant.printing.printer.Printer.doprint", false]], "dot() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.dot", false]], "dotprint() (in module diofant.printing.dot)": [[46, "diofant.printing.dot.dotprint", false]], "double_coset_can_rep() (in module diofant.combinatorics.tensor_can)": [[22, "diofant.combinatorics.tensor_can.double_coset_can_rep", false]], "drop() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.drop", false]], "drop() (diofant.polys.rings.polynomialring method)": [[28, "diofant.polys.rings.PolynomialRing.drop", false]], "dsolve() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.dsolve", false]], "dtype (diofant.domains.expressiondomain attribute)": [[28, "diofant.domains.ExpressionDomain.dtype", false]], "dual() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.dual", false]], "dummy (class in diofant.core.symbol)": [[27, "diofant.core.symbol.Dummy", false]], "dummywrapper (class in diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.DummyWrapper", false]], "dump_c() (diofant.utilities.autowrap.ufuncifycodewrapper method)": [[61, "diofant.utilities.autowrap.UfuncifyCodeWrapper.dump_c", false]], "dump_c() (diofant.utilities.codegen.ccodegen method)": [[62, "diofant.utilities.codegen.CCodeGen.dump_c", false]], "dump_code() (diofant.utilities.codegen.codegen method)": [[62, "diofant.utilities.codegen.CodeGen.dump_code", false]], "dump_f95() (diofant.utilities.codegen.fcodegen method)": [[62, "diofant.utilities.codegen.FCodeGen.dump_f95", false]], "dump_h() (diofant.utilities.codegen.ccodegen method)": [[62, "diofant.utilities.codegen.CCodeGen.dump_h", false]], "dump_h() (diofant.utilities.codegen.fcodegen method)": [[62, "diofant.utilities.codegen.FCodeGen.dump_h", false]], "dump_m() (diofant.utilities.codegen.octavecodegen method)": [[62, "diofant.utilities.codegen.OctaveCodeGen.dump_m", false]], "dump_pyx() (diofant.utilities.autowrap.cythoncodewrapper method)": [[61, "diofant.utilities.autowrap.CythonCodeWrapper.dump_pyx", false]], "e1() (in module diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.E1", false]], "ec() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.EC", false]], "edges (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.edges", false]], "edges() (diofant.combinatorics.prufer.prufer static method)": [[20, "diofant.combinatorics.prufer.Prufer.edges", false]], "efactor() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field.efactor", false]], "egyptian_fraction() (in module diofant.ntheory.egyptian_fraction)": [[43, "diofant.ntheory.egyptian_fraction.egyptian_fraction", false]], "ei (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.Ei", false]], "eigenvals() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.eigenvals", false]], "eigenvects() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.eigenvects", false]], "eijk() (in module diofant.functions.special.tensor_functions)": [[32, "diofant.functions.special.tensor_functions.Eijk", false]], "eject() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.eject", false]], "eject() (diofant.polys.rings.polynomialring method)": [[28, "diofant.polys.rings.PolynomialRing.eject", false]], "elements (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.elements", false]], "eliminate() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.eliminate", false]], "elliptic_e (class in diofant.functions.special.elliptic_integrals)": [[32, "diofant.functions.special.elliptic_integrals.elliptic_e", false]], "elliptic_f (class in diofant.functions.special.elliptic_integrals)": [[32, "diofant.functions.special.elliptic_integrals.elliptic_f", false]], "elliptic_k (class in diofant.functions.special.elliptic_integrals)": [[32, "diofant.functions.special.elliptic_integrals.elliptic_k", false]], "elliptic_pi (class in diofant.functions.special.elliptic_integrals)": [[32, "diofant.functions.special.elliptic_integrals.elliptic_pi", false]], "em() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.EM", false]], "emptyprinter() (diofant.printing.repr.reprprinter method)": [[46, "diofant.printing.repr.ReprPrinter.emptyPrinter", false]], "emptyset (class in diofant.sets.sets)": [[47, "diofant.sets.sets.EmptySet", false]], "end (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.end", false]], "enum_all() (diofant.utilities.enumerative.multisetpartitiontraverser method)": [[64, "diofant.utilities.enumerative.MultisetPartitionTraverser.enum_all", false]], "enum_large() (diofant.utilities.enumerative.multisetpartitiontraverser method)": [[64, "diofant.utilities.enumerative.MultisetPartitionTraverser.enum_large", false]], "enum_range() (diofant.utilities.enumerative.multisetpartitiontraverser method)": [[64, "diofant.utilities.enumerative.MultisetPartitionTraverser.enum_range", false]], "enum_small() (diofant.utilities.enumerative.multisetpartitiontraverser method)": [[64, "diofant.utilities.enumerative.MultisetPartitionTraverser.enum_small", false]], "epath (class in diofant.simplify.epathtools)": [[48, "diofant.simplify.epathtools.EPath", false]], "epath() (in module diofant.simplify.epathtools)": [[48, "diofant.simplify.epathtools.epath", false]], "epsilon_eq() (diofant.core.numbers.float method)": [[27, "diofant.core.numbers.Float.epsilon_eq", false]], "eq (in module diofant.core.relational)": [[27, "diofant.core.relational.Eq", false]], "equality (class in diofant.core.relational)": [[27, "diofant.core.relational.Equality", false]], "equals() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.equals", false]], "equals() (diofant.core.relational.relational method)": [[27, "diofant.core.relational.Relational.equals", false]], "equals() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.equals", false]], "equals() (diofant.matrices.expressions.matrixexpr method)": [[38, "diofant.matrices.expressions.MatrixExpr.equals", false]], "equals() (diofant.matrices.immutable.immutablematrix method)": [[39, "diofant.matrices.immutable.ImmutableMatrix.equals", false]], "equivalent (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.Equivalent", false]], "equivalent() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.equivalent", false]], "erf (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.erf", false]], "erf2 (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.erf2", false]], "erf2inv (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.erf2inv", false]], "erfc (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.erfc", false]], "erfcinv (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.erfcinv", false]], "erfi (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.erfi", false]], "erfinv (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.erfinv", false]], "et() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.ET", false]], "eta (diofant.functions.special.hyper.hyper property)": [[32, "diofant.functions.special.hyper.hyper.eta", false]], "euler (class in diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.euler", false]], "euler_maclaurin() (diofant.concrete.summations.sum method)": [[25, "diofant.concrete.summations.Sum.euler_maclaurin", false]], "eulergamma (class in diofant.core.numbers)": [[27, "diofant.core.numbers.EulerGamma", false]], "eval() (diofant.functions.special.tensor_functions.kroneckerdelta class method)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.eval", false]], "eval() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.eval", false]], "eval_expr() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.eval_expr", false]], "eval_levicivita() (in module diofant.functions.special.tensor_functions)": [[32, "diofant.functions.special.tensor_functions.eval_levicivita", false]], "eval_rational() (diofant.polys.rootoftools.rootof method)": [[45, "diofant.polys.rootoftools.RootOf.eval_rational", false]], "evalf() (diofant.core.evalf.evalfmixin method)": [[27, "diofant.core.evalf.EvalfMixin.evalf", false]], "evalf() (diofant.core.function.subs method)": [[27, "diofant.core.function.Subs.evalf", false]], "evalf() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.evalf", false]], "evalfmixin (class in diofant.core.evalf)": [[27, "diofant.core.evalf.EvalfMixin", false]], "evaluate() (in module diofant.core.evaluate)": [[27, "diofant.core.evaluate.evaluate", false]], "evaluationfailederror": [[10, "diofant.polys.polyerrors.EvaluationFailedError", false]], "exactquotientfailederror": [[10, "diofant.polys.polyerrors.ExactQuotientFailedError", false]], "exclude() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.exclude", false]], "exp (diofant.core.power.pow property)": [[27, "diofant.core.power.Pow.exp", false]], "exp (diofant.functions.elementary.exponential.exp_polar property)": [[30, "diofant.functions.elementary.exponential.exp_polar.exp", false]], "exp() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.exp", false]], "exp() (in module diofant.core.power)": [[27, "diofant.core.power.exp", false]], "exp1 (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Exp1", false]], "exp_polar (class in diofant.functions.elementary.exponential)": [[30, "diofant.functions.elementary.exponential.exp_polar", false]], "expand() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.expand", false]], "expand() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.expand", false]], "expand() (in module diofant.core.function)": [[27, "diofant.core.function.expand", false]], "expand_complex() (in module diofant.core.function)": [[27, "diofant.core.function.expand_complex", false]], "expand_func() (in module diofant.core.function)": [[27, "diofant.core.function.expand_func", false]], "expand_log() (in module diofant.core.function)": [[27, "diofant.core.function.expand_log", false]], "expand_mul() (in module diofant.core.function)": [[27, "diofant.core.function.expand_mul", false]], "expand_multinomial() (in module diofant.core.function)": [[27, "diofant.core.function.expand_multinomial", false]], "expand_power_base() (in module diofant.core.function)": [[27, "diofant.core.function.expand_power_base", false]], "expand_power_exp() (in module diofant.core.function)": [[27, "diofant.core.function.expand_power_exp", false]], "expand_trig() (in module diofant.core.function)": [[27, "diofant.core.function.expand_trig", false]], "expint (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.expint", false]], "expr (class in diofant.core.expr)": [[27, "diofant.core.expr.Expr", false]], "expr (diofant.core.function.derivative property)": [[27, "diofant.core.function.Derivative.expr", false]], "expr (diofant.core.function.lambda property)": [[27, "diofant.core.function.Lambda.expr", false]], "expr (diofant.core.function.subs property)": [[27, "diofant.core.function.Subs.expr", false]], "expr (diofant.functions.elementary.piecewise.exprcondpair property)": [[30, "diofant.functions.elementary.piecewise.ExprCondPair.expr", false]], "exprcondpair (class in diofant.functions.elementary.piecewise)": [[30, "diofant.functions.elementary.piecewise.ExprCondPair", false]], "expressiondomain (class in diofant.domains)": [[28, "diofant.domains.ExpressionDomain", false]], "expressiondomain.expression (class in diofant.domains)": [[28, "diofant.domains.ExpressionDomain.Expression", false]], "exprwithintlimits (class in diofant.concrete.expr_with_intlimits)": [[25, "diofant.concrete.expr_with_intlimits.ExprWithIntLimits", false]], "exprwithlimits (class in diofant.concrete.expr_with_limits)": [[25, "diofant.concrete.expr_with_limits.ExprWithLimits", false]], "exquo() (diofant.domains.field.field method)": [[28, "diofant.domains.field.Field.exquo", false]], "exquo() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.exquo", false]], "exquo() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.exquo", false]], "exquo() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.exquo", false]], "exquo_ground() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.exquo_ground", false]], "extend() (diofant.ntheory.generate.sieve method)": [[43, "diofant.ntheory.generate.Sieve.extend", false]], "extend_to_no() (diofant.ntheory.generate.sieve method)": [[43, "diofant.ntheory.generate.Sieve.extend_to_no", false]], "extendedreals (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.ExtendedReals", false]], "extract() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.extract", false]], "extract() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.extract", false]], "extract_additively() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.extract_additively", false]], "extract_branch_factor() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.extract_branch_factor", false]], "extract_multiplicatively() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.extract_multiplicatively", false]], "extraneousfactorserror": [[10, "diofant.polys.polyerrors.ExtraneousFactorsError", false]], "eye() (diofant.matrices.dense.densematrix class method)": [[37, "diofant.matrices.dense.DenseMatrix.eye", false]], "eye() (diofant.matrices.sparse.sparsematrixbase class method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.eye", false]], "eye() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.eye", false]], "f2pycodewrapper (class in diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.F2PyCodeWrapper", false]], "f5_reduce() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.f5_reduce", false]], "f5b() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.f5b", false]], "faces (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.faces", false]], "factor() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.factor", false]], "factor() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.factor", false]], "factor_list() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.factor_list", false]], "factor_list() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.factor_list", false]], "factor_terms() (in module diofant.core.exprtools)": [[27, "diofant.core.exprtools.factor_terms", false]], "factorial (class in diofant.functions.combinatorial.factorials)": [[29, "diofant.functions.combinatorial.factorials.factorial", false]], "factorial2 (class in diofant.functions.combinatorial.factorials)": [[29, "diofant.functions.combinatorial.factorials.factorial2", false]], "factoring_visitor() (in module diofant.utilities.enumerative)": [[64, "diofant.utilities.enumerative.factoring_visitor", false]], "factorint() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.factorint", false]], "factorrat() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.factorrat", false]], "factors() (diofant.core.numbers.rational method)": [[27, "diofant.core.numbers.Rational.factors", false]], "fallingfactorial (class in diofant.functions.combinatorial.factorials)": [[29, "diofant.functions.combinatorial.factorials.FallingFactorial", false]], "fcode() (in module diofant.printing.fcode)": [[46, "diofant.printing.fcode.fcode", false]], "fcodegen (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.FCodeGen", false]], "fcodeprinter (class in diofant.printing.fcode)": [[46, "diofant.printing.fcode.FCodePrinter", false]], "fdiff() (diofant.core.function.function method)": [[27, "diofant.core.function.Function.fdiff", false]], "fdiff() (diofant.core.power.log method)": [[27, "diofant.core.power.log.fdiff", false]], "fdiff() (diofant.functions.elementary.complexes.abs method)": [[30, "diofant.functions.elementary.complexes.Abs.fdiff", false]], "fdiff() (diofant.functions.elementary.exponential.lambertw method)": [[30, "diofant.functions.elementary.exponential.LambertW.fdiff", false]], "fdiff() (diofant.functions.elementary.hyperbolic.csch method)": [[30, "diofant.functions.elementary.hyperbolic.csch.fdiff", false]], "fdiff() (diofant.functions.elementary.hyperbolic.sinh method)": [[30, "diofant.functions.elementary.hyperbolic.sinh.fdiff", false]], "fibonacci (class in diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.fibonacci", false]], "field (class in diofant.domains.field)": [[28, "diofant.domains.field.Field", false]], "field (diofant.domains.field.field property)": [[28, "diofant.domains.field.Field.field", false]], "field (diofant.domains.integerring property)": [[28, "diofant.domains.IntegerRing.field", false]], "field (diofant.polys.rings.polynomialring property)": [[28, "diofant.polys.rings.PolynomialRing.field", false]], "field_isomorphism() (in module diofant.polys.numberfields)": [[45, "diofant.polys.numberfields.field_isomorphism", false]], "fill() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.fill", false]], "fill() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.fill", false]], "filldedent() (in module diofant.utilities.misc)": [[69, "diofant.utilities.misc.filldedent", false]], "find() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.find", false]], "find_dn() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.find_DN", false]], "findrecur() (diofant.concrete.summations.sum method)": [[25, "diofant.concrete.summations.Sum.findrecur", false]], "finite_field() (diofant.domains.integerring method)": [[28, "diofant.domains.IntegerRing.finite_field", false]], "finite_ring() (diofant.domains.integerring method)": [[28, "diofant.domains.IntegerRing.finite_ring", false]], "finitefield (class in diofant.domains)": [[28, "diofant.domains.FiniteField", false]], "finiteset (class in diofant.sets.sets)": [[47, "diofant.sets.sets.FiniteSet", false]], "flagerror": [[10, "diofant.polys.polyerrors.FlagError", false]], "flatten() (diofant.core.add.add class method)": [[27, "diofant.core.add.Add.flatten", false]], "flatten() (diofant.core.mul.mul class method)": [[27, "diofant.core.mul.Mul.flatten", false]], "flatten() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.flatten", false]], "float (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Float", false]], "floatrationalizer (class in diofant.interactive.session)": [[35, "diofant.interactive.session.FloatRationalizer", false]], "floor (class in diofant.functions.elementary.integers)": [[30, "diofant.functions.elementary.integers.floor", false]], "floor() (diofant.core.numbers.float method)": [[27, "diofant.core.numbers.Float.floor", false]], "fourier_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.fourier_transform", false]], "fouriertransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.FourierTransform", false]], "frac_field() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.frac_field", false]], "fracelement (class in diofant.polys.fields)": [[10, "diofant.polys.fields.FracElement", false]], "fraction() (in module diofant.simplify.radsimp)": [[48, "diofant.simplify.radsimp.fraction", false]], "fractionfield (class in diofant.polys.fields)": [[28, "diofant.polys.fields.FractionField", false]], "free_symbols (diofant.concrete.expr_with_limits.exprwithlimits property)": [[25, "diofant.concrete.expr_with_limits.ExprWithLimits.free_symbols", false]], "free_symbols (diofant.core.basic.basic property)": [[27, "diofant.core.basic.Basic.free_symbols", false]], "free_symbols (diofant.core.function.derivative property)": [[27, "diofant.core.function.Derivative.free_symbols", false]], "free_symbols (diofant.core.function.lambda property)": [[27, "diofant.core.function.Lambda.free_symbols", false]], "free_symbols (diofant.core.function.subs property)": [[27, "diofant.core.function.Subs.free_symbols", false]], "free_symbols (diofant.integrals.integrals.integral property)": [[34, "diofant.integrals.integrals.Integral.free_symbols", false]], "free_symbols (diofant.integrals.transforms.integraltransform property)": [[34, "diofant.integrals.transforms.IntegralTransform.free_symbols", false]], "free_symbols (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.free_symbols", false]], "free_symbols (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.free_symbols", false]], "free_symbols (diofant.polys.polytools.purepoly property)": [[45, "diofant.polys.polytools.PurePoly.free_symbols", false]], "free_symbols_in_domain (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.free_symbols_in_domain", false]], "fresnelc (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.fresnelc", false]], "fresnelintegral (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.FresnelIntegral", false]], "fresnels (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.fresnels", false]], "from_dict() (diofant.polys.polytools.poly class method)": [[45, "diofant.polys.polytools.Poly.from_dict", false]], "from_expr() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.from_expr", false]], "from_expr() (diofant.polys.polytools.poly class method)": [[45, "diofant.polys.polytools.Poly.from_expr", false]], "from_inversion_vector() (diofant.combinatorics.permutations.permutation class method)": [[18, "diofant.combinatorics.permutations.Permutation.from_inversion_vector", false]], "from_list() (diofant.polys.polytools.poly class method)": [[45, "diofant.polys.polytools.Poly.from_list", false]], "from_poly() (diofant.polys.polytools.poly class method)": [[45, "diofant.polys.polytools.Poly.from_poly", false]], "from_rgs() (diofant.combinatorics.partitions.partition class method)": [[16, "diofant.combinatorics.partitions.Partition.from_rgs", false]], "from_sequence() (diofant.combinatorics.permutations.permutation class method)": [[18, "diofant.combinatorics.permutations.Permutation.from_sequence", false]], "fu() (in module diofant.simplify.fu)": [[48, "diofant.simplify.fu.fu", false]], "full_cyclic_form (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.full_cyclic_form", false]], "func (diofant.core.basic.basic property)": [[27, "diofant.core.basic.Basic.func", false]], "func_field_modgcd() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd.func_field_modgcd", false]], "function (class in diofant.core.function)": [[27, "diofant.core.function.Function", false]], "function (diofant.concrete.expr_with_limits.exprwithlimits property)": [[25, "diofant.concrete.expr_with_limits.ExprWithLimits.function", false]], "function (diofant.integrals.transforms.integraltransform property)": [[34, "diofant.integrals.transforms.IntegralTransform.function", false]], "function_exponentiation() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.function_exponentiation", false]], "function_variable (diofant.integrals.transforms.integraltransform property)": [[34, "diofant.integrals.transforms.IntegralTransform.function_variable", false]], "functionclass (class in diofant.core.function)": [[27, "diofant.core.function.FunctionClass", false]], "functionmatrix (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.FunctionMatrix", false]], "futrig() (in module diofant.simplify.trigsimp)": [[48, "diofant.simplify.trigsimp.futrig", false]], "g() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.G", false], [46, "diofant.printing.pretty_symbology.g", false]], "galoisfieldelement (class in diofant.domains.finitefield)": [[28, "diofant.domains.finitefield.GaloisFieldElement", false]], "gamma (class in diofant.functions.special.gamma_functions)": [[32, "diofant.functions.special.gamma_functions.gamma", false]], "gauss_chebyshev_t() (in module diofant.integrals.quadrature)": [[34, "diofant.integrals.quadrature.gauss_chebyshev_t", false]], "gauss_chebyshev_u() (in module diofant.integrals.quadrature)": [[34, "diofant.integrals.quadrature.gauss_chebyshev_u", false]], "gauss_gen_laguerre() (in module diofant.integrals.quadrature)": [[34, "diofant.integrals.quadrature.gauss_gen_laguerre", false]], "gauss_hermite() (in module diofant.integrals.quadrature)": [[34, "diofant.integrals.quadrature.gauss_hermite", false]], "gauss_jacobi() (in module diofant.integrals.quadrature)": [[34, "diofant.integrals.quadrature.gauss_jacobi", false]], "gauss_laguerre() (in module diofant.integrals.quadrature)": [[34, "diofant.integrals.quadrature.gauss_laguerre", false]], "gauss_legendre() (in module diofant.integrals.quadrature)": [[34, "diofant.integrals.quadrature.gauss_legendre", false]], "gaussian_reduce() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.gaussian_reduce", false]], "gcd() (diofant.core.numbers.number method)": [[27, "diofant.core.numbers.Number.gcd", false]], "gcd() (diofant.core.numbers.rational method)": [[27, "diofant.core.numbers.Rational.gcd", false]], "gcd() (diofant.domains.field.field method)": [[28, "diofant.domains.field.Field.gcd", false]], "gcd() (diofant.polys.monomials.monomial method)": [[45, "diofant.polys.monomials.Monomial.gcd", false]], "gcd() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.gcd", false]], "gcd() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.gcd", false]], "gcd_terms() (in module diofant.core.exprtools)": [[27, "diofant.core.exprtools.gcd_terms", false]], "gcdex() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.gcdex", false]], "gcdex() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.gcdex", false]], "gcdex() (diofant.polys.rings.polynomialring method)": [[28, "diofant.polys.rings.PolynomialRing.gcdex", false]], "gcdex() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.gcdex", false]], "ge (in module diofant.core.relational)": [[27, "diofant.core.relational.Ge", false]], "gegenbauer (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.gegenbauer", false]], "gegenbauer_poly() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.gegenbauer_poly", false]], "gen (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.gen", false]], "generate() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.generate", false]], "generate_dimino() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.generate_dimino", false]], "generate_gray() (diofant.combinatorics.graycode.graycode method)": [[12, "diofant.combinatorics.graycode.GrayCode.generate_gray", false]], "generate_schreier_sims() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.generate_schreier_sims", false]], "generators (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.generators", false]], "generatorserror": [[10, "diofant.polys.polyerrors.GeneratorsError", false]], "generatorsneedederror": [[10, "diofant.polys.polyerrors.GeneratorsNeededError", false]], "get() (diofant.core.containers.dict method)": [[27, "diofant.core.containers.Dict.get", false]], "get_adjacency_distance() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.get_adjacency_distance", false]], "get_adjacency_matrix() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.get_adjacency_matrix", false]], "get_contraction_structure() (in module diofant.tensor.index_methods)": [[59, "diofant.tensor.index_methods.get_contraction_structure", false]], "get_default_datatype() (in module diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.get_default_datatype", false]], "get_diag_blocks() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.get_diag_blocks", false]], "get_exact() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.get_exact", false]], "get_indices() (in module diofant.tensor.index_methods)": [[59, "diofant.tensor.index_methods.get_indices", false]], "get_interface() (diofant.utilities.codegen.fcodegen method)": [[62, "diofant.utilities.codegen.FCodeGen.get_interface", false]], "get_modulus() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.get_modulus", false]], "get_period() (diofant.functions.special.hyper.meijerg method)": [[32, "diofant.functions.special.hyper.meijerg.get_period", false]], "get_positional_distance() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.get_positional_distance", false]], "get_precedence_distance() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.get_precedence_distance", false]], "get_precedence_matrix() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.get_precedence_matrix", false]], "get_prototype() (diofant.utilities.codegen.ccodegen method)": [[62, "diofant.utilities.codegen.CCodeGen.get_prototype", false]], "get_subset_from_bitstring() (diofant.combinatorics.graycode method)": [[12, "diofant.combinatorics.graycode.get_subset_from_bitstring", false]], "get_symmetric_group_sgs() (in module diofant.combinatorics.tensor_can)": [[22, "diofant.combinatorics.tensor_can.get_symmetric_group_sgs", false]], "getn() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.getn", false]], "geto() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.getO", false]], "geto() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.getO", false]], "gmpyfinitefield (class in diofant.domains.finitefield)": [[28, "diofant.domains.finitefield.GMPYFiniteField", false]], "gmpyintegerring (class in diofant.domains.integerring)": [[28, "diofant.domains.integerring.GMPYIntegerRing", false]], "gmpyrationalfield (class in diofant.domains.rationalfield)": [[28, "diofant.domains.rationalfield.GMPYRationalField", false]], "goldenratio (class in diofant.core.numbers)": [[27, "diofant.core.numbers.GoldenRatio", false]], "gosper_normal() (in module diofant.concrete.gosper)": [[25, "diofant.concrete.gosper.gosper_normal", false]], "gosper_sum() (in module diofant.concrete.gosper)": [[25, "diofant.concrete.gosper.gosper_sum", false]], "gosper_term() (in module diofant.concrete.gosper)": [[25, "diofant.concrete.gosper.gosper_term", false]], "gradedlexorder (class in diofant.polys.orderings)": [[45, "diofant.polys.orderings.GradedLexOrder", false]], "gramschmidt() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.GramSchmidt", false]], "gray_to_bin() (diofant.combinatorics.graycode method)": [[12, "diofant.combinatorics.graycode.gray_to_bin", false]], "graycode (class in diofant.combinatorics.graycode)": [[12, "diofant.combinatorics.graycode.GrayCode", false]], "graycode_subsets() (diofant.combinatorics.graycode method)": [[12, "diofant.combinatorics.graycode.graycode_subsets", false]], "greaterthan (class in diofant.core.relational)": [[27, "diofant.core.relational.GreaterThan", false]], "greek_letters (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.greek_letters", false]], "groebner() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.groebner", false]], "groebner() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.groebner", false]], "groebner_gcd() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.groebner_gcd", false]], "groebner_lcm() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.groebner_lcm", false]], "groebnerbasis (class in diofant.polys.polytools)": [[45, "diofant.polys.polytools.GroebnerBasis", false]], "group() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.group", false]], "gt (in module diofant.core.relational)": [[27, "diofant.core.relational.Gt", false]], "h (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.H", false]], "half (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Half", false]], "half_gcdex() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.half_gcdex", false]], "half_gcdex() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.half_gcdex", false]], "half_gcdex() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.half_gcdex", false]], "half_gcdex() (diofant.polys.rings.polynomialring method)": [[28, "diofant.polys.rings.PolynomialRing.half_gcdex", false]], "half_gcdex() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.half_gcdex", false]], "hankel1 (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.hankel1", false]], "hankel2 (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.hankel2", false]], "hankel_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.hankel_transform", false]], "hankeltransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.HankelTransform", false]], "harmonic (class in diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.harmonic", false]], "has() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.has", false]], "has() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.has", false]], "has() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.has", false]], "has_only_gens() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.has_only_gens", false]], "heaviside (class in diofant.functions.special.delta_functions)": [[32, "diofant.functions.special.delta_functions.Heaviside", false]], "height() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.height", false]], "hermite (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.hermite", false]], "hermite_poly() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.hermite_poly", false]], "hessian() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.hessian", false]], "heurisch() (in module diofant.integrals.heurisch)": [[34, "diofant.integrals.heurisch.heurisch", false]], "heurisch_wrapper() (in module diofant.integrals.heurisch)": [[34, "diofant.integrals.heurisch.heurisch_wrapper", false]], "heuristicgcdfailederror": [[10, "diofant.polys.polyerrors.HeuristicGCDFailedError", false]], "hobj() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.hobj", false]], "holzer() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.holzer", false]], "homogeneous_order() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.homogeneous_order", false]], "homomorphismfailederror": [[10, "diofant.polys.polyerrors.HomomorphismFailedError", false]], "horner() (in module diofant.polys.polyfuncs)": [[45, "diofant.polys.polyfuncs.horner", false]], "hstack() (diofant.matrices.matrices.matrixbase class method)": [[41, "diofant.matrices.matrices.MatrixBase.hstack", false]], "hyper (class in diofant.functions.special.hyper)": [[32, "diofant.functions.special.hyper.hyper", false]], "hyperbolicfunction (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.HyperbolicFunction", false]], "hyperexpand() (in module diofant.simplify.hyperexpand)": [[48, "diofant.simplify.hyperexpand.hyperexpand", false]], "hypersimilar() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.hypersimilar", false]], "hypersimp() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.hypersimp", false]], "identity (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.Identity", false]], "identityfunction (class in diofant.functions.elementary.miscellaneous)": [[30, "diofant.functions.elementary.miscellaneous.IdentityFunction", false]], "idx (class in diofant.tensor.indexed)": [[60, "diofant.tensor.indexed.Idx", false]], "im (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.im", false]], "imageset (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.ImageSet", false]], "imageset() (in module diofant.sets.sets)": [[47, "diofant.sets.sets.imageset", false]], "imaginaryunit (class in diofant.core.numbers)": [[27, "diofant.core.numbers.ImaginaryUnit", false]], "immutabledensendimarray (class in diofant.tensor.array)": [[57, "diofant.tensor.array.ImmutableDenseNDimArray", false]], "immutablematrix (class in diofant.matrices.immutable)": [[39, "diofant.matrices.immutable.ImmutableMatrix", false]], "immutablesparsematrix (class in diofant.matrices.immutable)": [[42, "diofant.matrices.immutable.ImmutableSparseMatrix", false]], "immutablesparsendimarray (class in diofant.tensor.array)": [[57, "diofant.tensor.array.ImmutableSparseNDimArray", false]], "implemented_function() (in module diofant.utilities.lambdify)": [[67, "diofant.utilities.lambdify.implemented_function", false]], "implicit_application() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.implicit_application", false]], "implicit_multiplication() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.implicit_multiplication", false]], "implicit_multiplication_application() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.implicit_multiplication_application", false]], "implies (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.Implies", false]], "indent_code() (diofant.printing.ccode.ccodeprinter method)": [[46, "diofant.printing.ccode.CCodePrinter.indent_code", false]], "indent_code() (diofant.printing.fcode.fcodeprinter method)": [[46, "diofant.printing.fcode.FCodePrinter.indent_code", false]], "independent_sets (diofant.polys.polytools.groebnerbasis property)": [[45, "diofant.polys.polytools.GroebnerBasis.independent_sets", false]], "index() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.index", false]], "index() (diofant.concrete.expr_with_intlimits.exprwithintlimits method)": [[25, "diofant.concrete.expr_with_intlimits.ExprWithIntLimits.index", false]], "index() (diofant.core.containers.tuple method)": [[27, "diofant.core.containers.Tuple.index", false]], "index() (diofant.polys.rings.polynomialring method)": [[28, "diofant.polys.rings.PolynomialRing.index", false]], "indexconformanceexceptionerror": [[59, "diofant.tensor.index_methods.IndexConformanceExceptionError", false]], "indexed (class in diofant.tensor.indexed)": [[60, "diofant.tensor.indexed.Indexed", false]], "indexedbase (class in diofant.tensor.indexed)": [[60, "diofant.tensor.indexed.IndexedBase", false]], "indexexceptionerror": [[60, "diofant.tensor.indexed.IndexExceptionError", false]], "indices (diofant.tensor.indexed.indexed property)": [[60, "diofant.tensor.indexed.Indexed.indices", false]], "indices_contain_equal_information (diofant.functions.special.tensor_functions.kroneckerdelta property)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.indices_contain_equal_information", false]], "inf (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.inf", false]], "inf (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.inf", false]], "infinitesimals() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.infinitesimals", false]], "infinity (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Infinity", false]], "init_printing() (in module diofant.interactive.printing)": [[35, "diofant.interactive.printing.init_printing", false]], "inject() (diofant.domains.compositedomain.compositedomain method)": [[28, "diofant.domains.compositedomain.CompositeDomain.inject", false]], "inject() (diofant.domains.simpledomain.simpledomain method)": [[28, "diofant.domains.simpledomain.SimpleDomain.inject", false]], "inject() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.inject", false]], "inputargument (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.InputArgument", false]], "integer (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Integer", false]], "integer_digits() (in module diofant.core.numbers)": [[27, "diofant.core.numbers.integer_digits", false]], "integer_nthroot() (in module diofant.core.power)": [[27, "diofant.core.power.integer_nthroot", false]], "integer_rational_reconstruction() (in module diofant.ntheory.modular)": [[43, "diofant.ntheory.modular.integer_rational_reconstruction", false]], "integerdivisionwrapper (class in diofant.interactive.session)": [[35, "diofant.interactive.session.IntegerDivisionWrapper", false]], "integermodring (class in diofant.domains)": [[28, "diofant.domains.IntegerModRing", false]], "integerpartition (class in diofant.combinatorics.partitions)": [[16, "diofant.combinatorics.partitions.IntegerPartition", false]], "integerring (class in diofant.domains)": [[28, "diofant.domains.IntegerRing", false]], "integers (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.Integers", false]], "integral (class in diofant.integrals.integrals)": [[34, "diofant.integrals.integrals.Integral", false]], "integral.is_commutative (in module diofant.integrals.integrals)": [[34, "diofant.integrals.integrals.Integral.is_commutative", false]], "integraltransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.IntegralTransform", false]], "integrand() (diofant.functions.special.hyper.meijerg method)": [[32, "diofant.functions.special.hyper.meijerg.integrand", false]], "integrate() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.integrate", false]], "integrate() (diofant.matrices.immutable.immutablematrix method)": [[39, "diofant.matrices.immutable.ImmutableMatrix.integrate", false]], "integrate() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.integrate", false]], "integrate() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.integrate", false]], "integrate() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.integrate", false]], "integrate() (in module diofant.integrals.integrals)": [[34, "diofant.integrals.integrals.integrate", false]], "interior (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.interior", false]], "interpolate() (in module diofant.polys.polyfuncs)": [[45, "diofant.polys.polyfuncs.interpolate", false]], "interpolating_poly() (in module diofant.polys.specialpolys)": [[45, "diofant.polys.specialpolys.interpolating_poly", false]], "intersection (class in diofant.sets.sets)": [[47, "diofant.sets.sets.Intersection", false]], "intersection() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.intersection", false]], "interval (class in diofant.sets.sets)": [[47, "diofant.sets.sets.Interval", false]], "interval (diofant.polys.rootoftools.rootof property)": [[45, "diofant.polys.rootoftools.RootOf.interval", false]], "inv() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.inv", false]], "inv_mod() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.inv_mod", false]], "inverse (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.Inverse", false]], "inverse() (diofant.core.power.log method)": [[27, "diofant.core.power.log.inverse", false]], "inverse() (diofant.functions.elementary.hyperbolic.acosh method)": [[30, "diofant.functions.elementary.hyperbolic.acosh.inverse", false]], "inverse() (diofant.functions.elementary.hyperbolic.acoth method)": [[30, "diofant.functions.elementary.hyperbolic.acoth.inverse", false]], "inverse() (diofant.functions.elementary.hyperbolic.asinh method)": [[30, "diofant.functions.elementary.hyperbolic.asinh.inverse", false]], "inverse() (diofant.functions.elementary.hyperbolic.atanh method)": [[30, "diofant.functions.elementary.hyperbolic.atanh.inverse", false]], "inverse() (diofant.functions.elementary.hyperbolic.coth method)": [[30, "diofant.functions.elementary.hyperbolic.coth.inverse", false]], "inverse() (diofant.functions.elementary.hyperbolic.sinh method)": [[30, "diofant.functions.elementary.hyperbolic.sinh.inverse", false]], "inverse() (diofant.functions.elementary.hyperbolic.tanh method)": [[30, "diofant.functions.elementary.hyperbolic.tanh.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.acos method)": [[30, "diofant.functions.elementary.trigonometric.acos.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.acot method)": [[30, "diofant.functions.elementary.trigonometric.acot.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.acsc method)": [[30, "diofant.functions.elementary.trigonometric.acsc.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.asec method)": [[30, "diofant.functions.elementary.trigonometric.asec.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.asin method)": [[30, "diofant.functions.elementary.trigonometric.asin.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.atan method)": [[30, "diofant.functions.elementary.trigonometric.atan.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.cot method)": [[30, "diofant.functions.elementary.trigonometric.cot.inverse", false]], "inverse() (diofant.functions.elementary.trigonometric.tan method)": [[30, "diofant.functions.elementary.trigonometric.tan.inverse", false]], "inverse_adj() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.inverse_ADJ", false]], "inverse_cosine_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.inverse_cosine_transform", false]], "inverse_fourier_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.inverse_fourier_transform", false]], "inverse_ge() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.inverse_GE", false]], "inverse_hankel_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.inverse_hankel_transform", false]], "inverse_laplace_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.inverse_laplace_transform", false]], "inverse_lu() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.inverse_LU", false]], "inverse_mellin_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.inverse_mellin_transform", false]], "inverse_sine_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.inverse_sine_transform", false]], "inversecosinetransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.InverseCosineTransform", false]], "inversefouriertransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.InverseFourierTransform", false]], "inversehankeltransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.InverseHankelTransform", false]], "inverselaplacetransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.InverseLaplaceTransform", false]], "inversemellintransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.InverseMellinTransform", false]], "inversesinetransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.InverseSineTransform", false]], "inversion_vector() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.inversion_vector", false]], "inversions() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.inversions", false]], "invert() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.invert", false]], "invert() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.invert", false]], "invert() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.invert", false]], "invert() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.invert", false]], "is_abelian (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_abelian", false]], "is_above_fermi (diofant.functions.special.tensor_functions.kroneckerdelta property)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.is_above_fermi", false]], "is_algebraic (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_algebraic", false]], "is_algebraic_expr() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.is_algebraic_expr", false]], "is_alt_sym() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_alt_sym", false]], "is_anti_symmetric() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.is_anti_symmetric", false]], "is_below_fermi (diofant.functions.special.tensor_functions.kroneckerdelta property)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.is_below_fermi", false]], "is_closed (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.is_closed", false]], "is_cnf() (in module diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.is_cnf", false]], "is_commutative (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_commutative", false]], "is_comparable (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_comparable", false]], "is_complex (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_complex", false]], "is_composite (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_composite", false]], "is_composite (diofant.core.numbers.integer property)": [[27, "diofant.core.numbers.Integer.is_composite", false]], "is_constant() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.is_constant", false]], "is_cyclotomic (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_cyclotomic", false]], "is_diagonal() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.is_diagonal", false]], "is_diagonalizable() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.is_diagonalizable", false]], "is_disjoint() (diofant.polys.rootisolation.complexinterval method)": [[10, "diofant.polys.rootisolation.ComplexInterval.is_disjoint", false]], "is_disjoint() (diofant.polys.rootisolation.realinterval method)": [[10, "diofant.polys.rootisolation.RealInterval.is_disjoint", false]], "is_disjoint() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.is_disjoint", false]], "is_dnf() (in module diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.is_dnf", false]], "is_empty (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.is_Empty", false]], "is_evaluated (diofant.core.basic.basic property)": [[27, "diofant.core.basic.Basic.is_evaluated", false]], "is_even (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.is_even", false]], "is_even (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_even", false]], "is_even (diofant.core.numbers.integer property)": [[27, "diofant.core.numbers.Integer.is_even", false]], "is_extended_real (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_extended_real", false]], "is_finite (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_finite", false]], "is_groebner() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.is_groebner", false]], "is_ground (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_ground", false]], "is_hermitian (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.is_hermitian", false]], "is_hermitian (diofant.matrices.sparse.sparsematrixbase property)": [[42, "diofant.matrices.sparse.SparseMatrixBase.is_hermitian", false]], "is_homogeneous (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_homogeneous", false]], "is_hypergeometric() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.is_hypergeometric", false]], "is_identity (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.is_Identity", false]], "is_imaginary (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_imaginary", false]], "is_imaginary (diofant.core.numbers.integer property)": [[27, "diofant.core.numbers.Integer.is_imaginary", false]], "is_infinite (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_infinite", false]], "is_integer (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_integer", false]], "is_irrational (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_irrational", false]], "is_irreducible (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_irreducible", false]], "is_iterable() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.is_iterable", false]], "is_left_unbounded (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.is_left_unbounded", false]], "is_linear (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_linear", false]], "is_lower (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.is_lower", false]], "is_lower_hessenberg (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.is_lower_hessenberg", false]], "is_minimal() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.is_minimal", false]], "is_multivariate (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_multivariate", false]], "is_negative (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_negative", false]], "is_nilpotent (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_nilpotent", false]], "is_nilpotent() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.is_nilpotent", false]], "is_nnf() (in module diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.is_nnf", false]], "is_noninteger (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_noninteger", false]], "is_nonnegative (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_nonnegative", false]], "is_nonpositive (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_nonpositive", false]], "is_nonzero (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_nonzero", false]], "is_nonzero (diofant.core.numbers.integer property)": [[27, "diofant.core.numbers.Integer.is_nonzero", false]], "is_normal() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_normal", false]], "is_normal() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.is_normal", false]], "is_nthpow_residue() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.is_nthpow_residue", false]], "is_number (diofant.concrete.expr_with_limits.exprwithlimits property)": [[25, "diofant.concrete.expr_with_limits.ExprWithLimits.is_number", false]], "is_number (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_number", false]], "is_odd (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.is_odd", false]], "is_odd (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_odd", false]], "is_odd (diofant.core.numbers.integer property)": [[27, "diofant.core.numbers.Integer.is_odd", false]], "is_one (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_one", false]], "is_only_above_fermi (diofant.functions.special.tensor_functions.kroneckerdelta property)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.is_only_above_fermi", false]], "is_only_below_fermi (diofant.functions.special.tensor_functions.kroneckerdelta property)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.is_only_below_fermi", false]], "is_open (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.is_open", false]], "is_polar (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_polar", false]], "is_polynomial() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.is_polynomial", false]], "is_positive (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_positive", false]], "is_prime (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_prime", false]], "is_prime (diofant.core.numbers.integer property)": [[27, "diofant.core.numbers.Integer.is_prime", false]], "is_primitive (diofant.domains.finitefield.modularinteger property)": [[28, "diofant.domains.finitefield.ModularInteger.is_primitive", false]], "is_primitive() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_primitive", false]], "is_primitive_root() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.is_primitive_root", false]], "is_proper_subset() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.is_proper_subset", false]], "is_proper_superset() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.is_proper_superset", false]], "is_quad_residue() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.is_quad_residue", false]], "is_quadratic (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_quadratic", false]], "is_rational (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_rational", false]], "is_rational_function() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.is_rational_function", false]], "is_real (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_real", false]], "is_rewritable_or_comparable() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.is_rewritable_or_comparable", false]], "is_right_unbounded (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.is_right_unbounded", false]], "is_sequence() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.is_sequence", false]], "is_simple() (diofant.functions.special.delta_functions.diracdelta method)": [[32, "diofant.functions.special.delta_functions.DiracDelta.is_simple", false]], "is_singleton (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.is_Singleton", false]], "is_solvable (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_solvable", false]], "is_square (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.is_square", false]], "is_square() (in module diofant.ntheory.primetest)": [[43, "diofant.ntheory.primetest.is_square", false]], "is_squarefree (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_squarefree", false]], "is_subgroup() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_subgroup", false]], "is_subset() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.is_subset", false]], "is_superset() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.is_superset", false]], "is_symbolic() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.is_symbolic", false]], "is_symmetric() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.is_symmetric", false]], "is_symmetric() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.is_symmetric", false]], "is_term (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_term", false]], "is_transcendental (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_transcendental", false]], "is_transitive() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_transitive", false]], "is_trivial (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.is_trivial", false]], "is_univariate (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_univariate", false]], "is_upper (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.is_upper", false]], "is_upper_hessenberg (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.is_upper_hessenberg", false]], "is_zero (diofant.core.expr.expr property)": [[27, "diofant.core.expr.Expr.is_zero", false]], "is_zero (diofant.core.numbers.integer property)": [[27, "diofant.core.numbers.Integer.is_zero", false]], "is_zero (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.is_zero", false]], "is_zero (diofant.polys.polytools.poly property)": [[45, "diofant.polys.polytools.Poly.is_zero", false]], "isdisjoint() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.isdisjoint", false]], "isomorphismfailederror": [[10, "diofant.polys.polyerrors.IsomorphismFailedError", false]], "isprime() (in module diofant.ntheory.primetest)": [[43, "diofant.ntheory.primetest.isprime", false]], "issubset() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.issubset", false]], "issuperset() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.issuperset", false]], "ite (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.ITE", false]], "items() (diofant.core.containers.dict method)": [[27, "diofant.core.containers.Dict.items", false]], "iterate_binary() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.iterate_binary", false]], "iterate_graycode() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.iterate_graycode", false]], "jacobi (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.jacobi", false]], "jacobi_normalized() (in module diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.jacobi_normalized", false]], "jacobi_poly() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.jacobi_poly", false]], "jacobi_symbol() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.jacobi_symbol", false]], "jacobian() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.jacobian", false]], "jn (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.jn", false]], "jn_zeros() (in module diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.jn_zeros", false]], "jordan_cell() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.jordan_cell", false]], "jordan_cells() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.jordan_cells", false]], "jordan_form() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.jordan_form", false]], "josephus() (diofant.combinatorics.permutations.permutation class method)": [[18, "diofant.combinatorics.permutations.Permutation.josephus", false]], "key2bounds() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.key2bounds", false]], "key2ij() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.key2ij", false]], "keys() (diofant.core.containers.dict method)": [[27, "diofant.core.containers.Dict.keys", false]], "killable_index (diofant.functions.special.tensor_functions.kroneckerdelta property)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.killable_index", false]], "kroneckerdelta (class in diofant.functions.special.tensor_functions)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta", false]], "ksubsets() (diofant.combinatorics.subsets method)": [[21, "diofant.combinatorics.subsets.ksubsets", false]], "label (diofant.tensor.indexed.idx property)": [[60, "diofant.tensor.indexed.Idx.label", false]], "label (diofant.tensor.indexed.indexedbase property)": [[60, "diofant.tensor.indexed.IndexedBase.label", false]], "laguerre (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.laguerre", false]], "laguerre_poly() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.laguerre_poly", false]], "lambda (class in diofant.core.function)": [[27, "diofant.core.function.Lambda", false]], "lambdaprinter (class in diofant.printing.lambdarepr)": [[46, "diofant.printing.lambdarepr.LambdaPrinter", false]], "lambdarepr() (in module diofant.printing.lambdarepr)": [[46, "diofant.printing.lambdarepr.lambdarepr", false]], "lambdastr() (in module diofant.utilities.lambdify)": [[67, "diofant.utilities.lambdify.lambdastr", false]], "lambdify() (in module diofant.utilities.lambdify)": [[67, "diofant.utilities.lambdify.lambdify", false]], "lambertw (class in diofant.functions.elementary.exponential)": [[30, "diofant.functions.elementary.exponential.LambertW", false]], "laplace_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.laplace_transform", false]], "laplacetransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.LaplaceTransform", false]], "latex() (in module diofant.printing.latex)": [[46, "diofant.printing.latex.latex", false]], "latexprinter (class in diofant.printing.latex)": [[46, "diofant.printing.latex.LatexPrinter", false]], "lbp_cmp() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.lbp_cmp", false]], "lbp_key() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.lbp_key", false]], "lbp_mul_term() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.lbp_mul_term", false]], "lbp_sub() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.lbp_sub", false]], "lc() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.LC", false]], "lc() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.LC", false]], "lcm() (diofant.core.numbers.number method)": [[27, "diofant.core.numbers.Number.lcm", false]], "lcm() (diofant.core.numbers.rational method)": [[27, "diofant.core.numbers.Rational.lcm", false]], "lcm() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.lcm", false]], "lcm() (diofant.polys.monomials.monomial method)": [[45, "diofant.polys.monomials.Monomial.lcm", false]], "lcm() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.lcm", false]], "lcm() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.lcm", false]], "ldescent() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.ldescent", false]], "ldldecomposition() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.LDLdecomposition", false]], "ldldecomposition() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.LDLdecomposition", false]], "ldlsolve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.LDLsolve", false]], "le (in module diofant.core.relational)": [[27, "diofant.core.relational.Le", false]], "leading_expv() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.leading_expv", false]], "leading_term() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.leading_term", false]], "leadterm() (in module diofant.calculus.gruntz)": [[7, "diofant.calculus.gruntz.leadterm", false]], "left (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.left", false]], "left() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.left", false]], "left_open (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.left_open", false]], "legendre (class in diofant.functions.special.polynomials)": [[32, "diofant.functions.special.polynomials.legendre", false]], "legendre_poly() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.legendre_poly", false]], "legendre_symbol() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.legendre_symbol", false]], "length() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.length", false]], "length() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.length", false]], "lerchphi (class in diofant.functions.special.zeta_functions)": [[32, "diofant.functions.special.zeta_functions.lerchphi", false]], "lessthan (class in diofant.core.relational)": [[27, "diofant.core.relational.LessThan", false]], "levicivita (class in diofant.functions.special.tensor_functions)": [[32, "diofant.functions.special.tensor_functions.LeviCivita", false]], "lexorder (class in diofant.polys.orderings)": [[45, "diofant.polys.orderings.LexOrder", false]], "lhs (diofant.core.relational.relational property)": [[27, "diofant.core.relational.Relational.lhs", false]], "li (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.Li", false], [32, "diofant.functions.special.error_functions.li", false]], "lie_heuristic_abaco1_product() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_abaco1_product", false]], "lie_heuristic_abaco1_simple() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_abaco1_simple", false]], "lie_heuristic_abaco2_similar() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_abaco2_similar", false]], "lie_heuristic_abaco2_unique_unknown() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_abaco2_unique_unknown", false]], "lie_heuristic_bivariate() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_bivariate", false]], "lie_heuristic_chi() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_chi", false]], "lie_heuristic_function_sum() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_function_sum", false]], "lie_heuristic_linear() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.lie_heuristic_linear", false]], "limit (class in diofant.calculus.limits)": [[11, "diofant.calculus.limits.Limit", false]], "limit() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.limit", false]], "limit() (diofant.matrices.immutable.immutablematrix method)": [[39, "diofant.matrices.immutable.ImmutableMatrix.limit", false]], "limit() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.limit", false]], "limit() (in module diofant.calculus.limits)": [[11, "diofant.calculus.limits.limit", false]], "limit_denominator() (diofant.core.numbers.rational method)": [[27, "diofant.core.numbers.Rational.limit_denominator", false]], "limitinf() (in module diofant.calculus.gruntz)": [[7, "diofant.calculus.gruntz.limitinf", false]], "limits (diofant.concrete.expr_with_limits.exprwithlimits property)": [[25, "diofant.concrete.expr_with_limits.ExprWithLimits.limits", false]], "list() (diofant.combinatorics.permutations.cycle method)": [[18, "diofant.combinatorics.permutations.Cycle.list", false]], "list() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.list", false]], "list2numpy() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.list2numpy", false]], "list_visitor() (in module diofant.utilities.enumerative)": [[64, "diofant.utilities.enumerative.list_visitor", false]], "liupc() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.liupc", false]], "lm() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.LM", false]], "lm() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.LM", false]], "log (class in diofant.core.power)": [[27, "diofant.core.power.log", false]], "logcombine() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.logcombine", false]], "loggamma (class in diofant.functions.special.gamma_functions)": [[32, "diofant.functions.special.gamma_functions.loggamma", false]], "lopen() (diofant.sets.sets.interval class method)": [[47, "diofant.sets.sets.Interval.Lopen", false]], "lower (diofant.tensor.indexed.idx property)": [[60, "diofant.tensor.indexed.Idx.lower", false]], "lower_central_series() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.lower_central_series", false]], "lower_triangular_solve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.lower_triangular_solve", false]], "lowergamma (class in diofant.functions.special.gamma_functions)": [[32, "diofant.functions.special.gamma_functions.lowergamma", false]], "lt (in module diofant.core.relational)": [[27, "diofant.core.relational.Lt", false]], "lt() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.LT", false]], "lt() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.LT", false]], "lucas (class in diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.lucas", false]], "ludecomposition() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.LUdecomposition", false]], "ludecomposition_simple() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.LUdecomposition_Simple", false]], "ludecompositionff() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.LUdecompositionFF", false]], "lusolve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.LUsolve", false]], "make_perm() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.make_perm", false]], "make_property() (in module diofant.core.assumptions)": [[27, "diofant.core.assumptions.make_property", false]], "make_routine() (in module diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.make_routine", false]], "managedproperties (class in diofant.core.assumptions)": [[27, "diofant.core.assumptions.ManagedProperties", false]], "matadd (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.MatAdd", false]], "match() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.match", false]], "mathematica() (in module diofant.parsing.mathematica)": [[44, "diofant.parsing.mathematica.mathematica", false]], "mathematica_code() (in module diofant.printing.mathematica)": [[46, "diofant.printing.mathematica.mathematica_code", false]], "mathml() (in module diofant.printing.mathml)": [[46, "diofant.printing.mathml.mathml", false]], "mathml_tag() (diofant.printing.mathml.mathmlprinter method)": [[46, "diofant.printing.mathml.MathMLPrinter.mathml_tag", false]], "mathmlprinter (class in diofant.printing.mathml)": [[46, "diofant.printing.mathml.MathMLPrinter", false]], "matmul (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.MatMul", false]], "matpow (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.MatPow", false]], "matrix (class in diofant.matrices)": [[40, "diofant.matrices.Matrix", false]], "matrix2numpy() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.matrix2numpy", false]], "matrix_fglm() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.matrix_fglm", false]], "matrix_multiply_elementwise() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.matrix_multiply_elementwise", false]], "matrixbase (class in diofant.matrices.matrices)": [[41, "diofant.matrices.matrices.MatrixBase", false]], "matrixerror (class in diofant.matrices.matrices)": [[41, "diofant.matrices.matrices.MatrixError", false]], "matrixexpr (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.MatrixExpr", false]], "matrixsymbol (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.MatrixSymbol", false]], "max (class in diofant.functions.elementary.miscellaneous)": [[30, "diofant.functions.elementary.miscellaneous.Max", false]], "max() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.max", false]], "max_div (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.max_div", false]], "maximize() (in module diofant.calculus.optimization)": [[11, "diofant.calculus.optimization.maximize", false]], "mcodeprinter (class in diofant.printing.mathematica)": [[46, "diofant.printing.mathematica.MCodePrinter", false]], "measure (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.measure", false]], "meijerg (class in diofant.functions.special.hyper)": [[32, "diofant.functions.special.hyper.meijerg", false]], "mellin_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.mellin_transform", false]], "mellintransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.MellinTransform", false]], "merge_solution() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.merge_solution", false]], "min (class in diofant.functions.elementary.miscellaneous)": [[30, "diofant.functions.elementary.miscellaneous.Min", false]], "min() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.min", false]], "minimal_block() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.minimal_block", false]], "minimal_polynomial() (in module diofant.polys.numberfields)": [[45, "diofant.polys.numberfields.minimal_polynomial", false]], "minimize() (in module diofant.calculus.optimization)": [[11, "diofant.calculus.optimization.minimize", false]], "minlex() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.minlex", false]], "minorentry() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.minorEntry", false]], "minormatrix() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.minorMatrix", false]], "minpoly_groebner() (in module diofant.polys.numberfields)": [[10, "diofant.polys.numberfields.minpoly_groebner", false]], "minsolve_linear_system() (in module diofant.solvers.solvers)": [[55, "diofant.solvers.solvers.minsolve_linear_system", false]], "mobius (class in diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.mobius", false]], "mod (class in diofant.core.mod)": [[27, "diofant.core.mod.Mod", false]], "mod_inverse() (in module diofant.core.numbers)": [[27, "diofant.core.numbers.mod_inverse", false]], "modgcd() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd.modgcd", false]], "modulargcdfailederror": [[10, "diofant.polys.polyerrors.ModularGCDFailedError", false]], "modularinteger (class in diofant.domains.finitefield)": [[28, "diofant.domains.finitefield.ModularInteger", false]], "module": [[6, "module-diofant.integrals.meijerint_doc", false], [7, "module-diofant.calculus.gruntz", false], [8, "module-diofant.simplify.hyperexpand_doc", false], [10, "module-diofant.polys.euclidtools", false], [10, "module-diofant.polys.factorization_alg_field", false], [10, "module-diofant.polys.factortools", false], [10, "module-diofant.polys.groebnertools", false], [10, "module-diofant.polys.modulargcd", false], [10, "module-diofant.polys.polyerrors", false], [10, "module-diofant.polys.polyoptions", false], [10, "module-diofant.polys.rootisolation", false], [10, "module-diofant.polys.sqfreetools", false], [11, "module-diofant.calculus", false], [11, "module-diofant.calculus.limits", false], [11, "module-diofant.calculus.optimization", false], [11, "module-diofant.calculus.order", false], [11, "module-diofant.calculus.residues", false], [11, "module-diofant.calculus.singularities", false], [12, "module-diofant.combinatorics.graycode", false], [13, "module-diofant.combinatorics.group_constructs", false], [15, "module-diofant.combinatorics.named_groups", false], [16, "module-diofant.combinatorics.partitions", false], [17, "module-diofant.combinatorics.perm_groups", false], [18, "module-diofant.combinatorics.generators", false], [18, "module-diofant.combinatorics.permutations", false], [19, "module-diofant.combinatorics.polyhedron", false], [20, "module-diofant.combinatorics.prufer", false], [21, "module-diofant.combinatorics.subsets", false], [22, "module-diofant.combinatorics.tensor_can", false], [23, "module-diofant.combinatorics.testutil", false], [24, "module-diofant.combinatorics.util", false], [26, "module-diofant.config", false], [27, "module-diofant.core", false], [27, "module-diofant.core.add", false], [27, "module-diofant.core.assumptions", false], [27, "module-diofant.core.basic", false], [27, "module-diofant.core.cache", false], [27, "module-diofant.core.compatibility", false], [27, "module-diofant.core.containers", false], [27, "module-diofant.core.core", false], [27, "module-diofant.core.evalf", false], [27, "module-diofant.core.evaluate", false], [27, "module-diofant.core.expr", false], [27, "module-diofant.core.exprtools", false], [27, "module-diofant.core.function", false], [27, "module-diofant.core.mod", false], [27, "module-diofant.core.mul", false], [27, "module-diofant.core.multidimensional", false], [27, "module-diofant.core.numbers", false], [27, "module-diofant.core.power", false], [27, "module-diofant.core.relational", false], [27, "module-diofant.core.singleton", false], [27, "module-diofant.core.symbol", false], [27, "module-diofant.core.sympify", false], [28, "module-diofant.domains", false], [31, "module-diofant.functions", false], [32, "module-diofant.functions.special.bessel", false], [32, "module-diofant.functions.special.beta_functions", false], [32, "module-diofant.functions.special.elliptic_integrals", false], [32, "module-diofant.functions.special.error_functions", false], [32, "module-diofant.functions.special.gamma_functions", false], [32, "module-diofant.functions.special.polynomials", false], [32, "module-diofant.functions.special.zeta_functions", false], [33, "module-diofant", false], [34, "module-diofant.integrals", false], [34, "module-diofant.integrals.quadrature", false], [34, "module-diofant.integrals.transforms", false], [35, "module-diofant.interactive", false], [35, "module-diofant.interactive.printing", false], [35, "module-diofant.interactive.session", false], [36, "module-diofant.logic", false], [37, "module-diofant.matrices.dense", false], [38, "module-diofant.matrices.expressions", false], [38, "module-diofant.matrices.expressions.blockmatrix", false], [39, "module-diofant.matrices.immutable", false], [40, "module-diofant.matrices", false], [41, "module-diofant.matrices.matrices", false], [42, "module-diofant.matrices.sparse", false], [43, "module-diofant.ntheory.continued_fraction", false], [43, "module-diofant.ntheory.egyptian_fraction", false], [43, "module-diofant.ntheory.factor_", false], [43, "module-diofant.ntheory.generate", false], [43, "module-diofant.ntheory.modular", false], [43, "module-diofant.ntheory.multinomial", false], [43, "module-diofant.ntheory.partitions_", false], [43, "module-diofant.ntheory.primetest", false], [43, "module-diofant.ntheory.residue_ntheory", false], [44, "module-diofant.parsing", false], [45, "module-diofant.polys", false], [45, "module-diofant.polys.constructor", false], [45, "module-diofant.polys.monomials", false], [45, "module-diofant.polys.numberfields", false], [45, "module-diofant.polys.orderings", false], [45, "module-diofant.polys.orthopolys", false], [45, "module-diofant.polys.partfrac", false], [45, "module-diofant.polys.polyfuncs", false], [45, "module-diofant.polys.polyroots", false], [45, "module-diofant.polys.polytools", false], [45, "module-diofant.polys.rationaltools", false], [45, "module-diofant.polys.rootoftools", false], [45, "module-diofant.polys.specialpolys", false], [46, "module-diofant.printing", false], [46, "module-diofant.printing.ccode", false], [46, "module-diofant.printing.codeprinter", false], [46, "module-diofant.printing.conventions", false], [46, "module-diofant.printing.fcode", false], [46, "module-diofant.printing.lambdarepr", false], [46, "module-diofant.printing.latex", false], [46, "module-diofant.printing.mathematica", false], [46, "module-diofant.printing.mathml", false], [46, "module-diofant.printing.precedence", false], [46, "module-diofant.printing.pretty", false], [46, "module-diofant.printing.pretty_symbology", false], [46, "module-diofant.printing.printer", false], [46, "module-diofant.printing.python", false], [46, "module-diofant.printing.repr", false], [46, "module-diofant.printing.str", false], [46, "module-diofant.printing.stringpict", false], [47, "module-diofant.sets.fancysets", false], [47, "module-diofant.sets.sets", false], [48, "module-diofant.simplify.combsimp", false], [48, "module-diofant.simplify.cse_main", false], [48, "module-diofant.simplify.epathtools", false], [48, "module-diofant.simplify.fu", false], [48, "module-diofant.simplify.hyperexpand", false], [48, "module-diofant.simplify.powsimp", false], [48, "module-diofant.simplify.radsimp", false], [48, "module-diofant.simplify.ratsimp", false], [48, "module-diofant.simplify.sqrtdenest", false], [48, "module-diofant.simplify.traversaltools", false], [48, "module-diofant.simplify.trigsimp", false], [49, "module-diofant.solvers.diophantine", false], [50, "module-diofant.solvers", false], [51, "module-diofant.solvers.inequalities", false], [52, "module-diofant.solvers.ode", false], [53, "module-diofant.solvers.pde", false], [54, "module-diofant.solvers.recurr", false], [55, "module-diofant.solvers.polysys", false], [55, "module-diofant.solvers.solvers", false], [56, "module-diofant.solvers.deutils", false], [56, "module-diofant.solvers.utils", false], [57, "module-diofant.tensor.array", false], [58, "module-diofant.tensor", false], [59, "module-diofant.tensor.index_methods", false], [60, "module-diofant.tensor.indexed", false], [61, "module-diofant.utilities.autowrap", false], [62, "module-diofant.utilities.codegen", false], [63, "module-diofant.utilities.decorator", false], [64, "module-diofant.utilities.enumerative", false], [65, "module-diofant.utilities", false], [66, "module-diofant.utilities.iterables", false], [67, "module-diofant.utilities.lambdify", false], [68, "module-diofant.utilities.memoization", false], [69, "module-diofant.utilities.misc", false], [70, "module-diofant.utilities.randtest", false]], "monic() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.monic", false]], "monic() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.monic", false]], "monic() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.monic", false]], "monomial (class in diofant.polys.monomials)": [[45, "diofant.polys.monomials.Monomial", false]], "monoms() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.monoms", false]], "mr() (in module diofant.ntheory.primetest)": [[43, "diofant.ntheory.primetest.mr", false]], "mrv() (in module diofant.calculus.gruntz)": [[7, "diofant.calculus.gruntz.mrv", false]], "mrv_max() (in module diofant.calculus.gruntz)": [[7, "diofant.calculus.gruntz.mrv_max", false]], "mul (class in diofant.core.mul)": [[27, "diofant.core.mul.Mul", false]], "mul_inv() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.mul_inv", false]], "multinomial_coefficients() (in module diofant.ntheory.multinomial)": [[43, "diofant.ntheory.multinomial.multinomial_coefficients", false]], "multinomial_coefficients_iterator() (in module diofant.ntheory.multinomial)": [[43, "diofant.ntheory.multinomial.multinomial_coefficients_iterator", false]], "multiplicity() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.multiplicity", false]], "multiply() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.multiply", false]], "multiply() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.multiply", false]], "multiply_elementwise() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.multiply_elementwise", false]], "multiset() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.multiset", false]], "multiset_combinations() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.multiset_combinations", false]], "multiset_partitions() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.multiset_partitions", false]], "multiset_partitions_taocp() (in module diofant.utilities.enumerative)": [[64, "diofant.utilities.enumerative.multiset_partitions_taocp", false]], "multiset_permutations() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.multiset_permutations", false]], "multisetpartitiontraverser (class in diofant.utilities.enumerative)": [[64, "diofant.utilities.enumerative.MultisetPartitionTraverser", false]], "multivariatepolynomialerror": [[10, "diofant.polys.polyerrors.MultivariatePolynomialError", false]], "mutabledensematrix (class in diofant.matrices.dense)": [[37, "diofant.matrices.dense.MutableDenseMatrix", false]], "mutabledensendimarray (class in diofant.tensor.array)": [[57, "diofant.tensor.array.MutableDenseNDimArray", false]], "mutablematrix (in module diofant.matrices.dense)": [[37, "diofant.matrices.dense.MutableMatrix", false]], "mutablesparsematrix (class in diofant.matrices.sparse)": [[42, "diofant.matrices.sparse.MutableSparseMatrix", false]], "mutablesparsendimarray (class in diofant.tensor.array)": [[57, "diofant.tensor.array.MutableSparseNDimArray", false]], "n (diofant.combinatorics.graycode.graycode property)": [[12, "diofant.combinatorics.graycode.GrayCode.n", false]], "n() (in module diofant.core.evalf)": [[27, "diofant.core.evalf.N", false]], "n_order() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.n_order", false]], "nan (class in diofant.core.numbers)": [[27, "diofant.core.numbers.NaN", false]], "nand (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.Nand", false]], "nargs (diofant.core.function.functionclass property)": [[27, "diofant.core.function.FunctionClass.nargs", false]], "naturals (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.Naturals", false]], "naturals0 (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.Naturals0", false]], "ne (in module diofant.core.relational)": [[27, "diofant.core.relational.Ne", false]], "negativeinfinity (class in diofant.core.numbers)": [[27, "diofant.core.numbers.NegativeInfinity", false]], "negativeone (class in diofant.core.numbers)": [[27, "diofant.core.numbers.NegativeOne", false]], "new() (diofant.polys.polytools.poly class method)": [[45, "diofant.polys.polytools.Poly.new", false]], "new() (diofant.polys.rootoftools.rootsum class method)": [[45, "diofant.polys.rootoftools.RootSum.new", false]], "next() (diofant.combinatorics.graycode.graycode method)": [[12, "diofant.combinatorics.graycode.GrayCode.next", false]], "next() (diofant.combinatorics.prufer.prufer method)": [[20, "diofant.combinatorics.prufer.Prufer.next", false]], "next() (diofant.printing.stringpict.stringpict static method)": [[46, "diofant.printing.stringpict.stringPict.next", false]], "next_binary() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.next_binary", false]], "next_gray() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.next_gray", false]], "next_lex() (diofant.combinatorics.partitions.integerpartition method)": [[16, "diofant.combinatorics.partitions.IntegerPartition.next_lex", false]], "next_lex() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.next_lex", false]], "next_lexicographic() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.next_lexicographic", false]], "next_nonlex() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.next_nonlex", false]], "next_trotterjohnson() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.next_trotterjohnson", false]], "nextprime() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.nextprime", false]], "nfloat() (in module diofant.core.function)": [[27, "diofant.core.function.nfloat", false]], "nnz() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.nnz", false]], "no_attrs_in_subclass (class in diofant.utilities.decorator)": [[63, "diofant.utilities.decorator.no_attrs_in_subclass", false]], "nodes (diofant.combinatorics.prufer.prufer property)": [[20, "diofant.combinatorics.prufer.Prufer.nodes", false]], "nonsquarematrixerror (class in diofant.matrices.matrices)": [[41, "diofant.matrices.matrices.NonSquareMatrixError", false]], "nor (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.Nor", false]], "norm() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.norm", false]], "normal() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.normal", false]], "normal_closure() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.normal_closure", false]], "normalized() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.normalized", false]], "not (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.Not", false]], "notalgebraicerror": [[10, "diofant.polys.polyerrors.NotAlgebraicError", false]], "notinvertibleerror": [[10, "diofant.polys.polyerrors.NotInvertibleError", false]], "notiterable (class in diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.NotIterable", false]], "notreversibleerror": [[10, "diofant.polys.polyerrors.NotReversibleError", false]], "npartitions() (in module diofant.ntheory.partitions_)": [[43, "diofant.ntheory.partitions_.npartitions", false]], "nroots() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.nroots", false]], "nroots() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.nroots", false]], "nseries() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.nseries", false]], "nsimplify() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.nsimplify", false]], "nsimplify() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.nsimplify", false]], "nthroot() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.nthroot", false]], "nthroot_mod() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.nthroot_mod", false]], "nu (diofant.functions.special.hyper.meijerg property)": [[32, "diofant.functions.special.hyper.meijerg.nu", false]], "nullspace() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.nullspace", false]], "number (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Number", false]], "numbered_symbols() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.numbered_symbols", false]], "numbersymbol (class in diofant.core.numbers)": [[27, "diofant.core.numbers.NumberSymbol", false]], "o (in module diofant.calculus.order)": [[11, "diofant.calculus.order.O", false]], "octavecodegen (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.OctaveCodeGen", false]], "ode_1st_exact() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_1st_exact", false]], "ode_1st_homogeneous_coeff_best() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_1st_homogeneous_coeff_best", false]], "ode_1st_homogeneous_coeff_subs_dep_div_indep() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_1st_homogeneous_coeff_subs_dep_div_indep", false]], "ode_1st_homogeneous_coeff_subs_indep_div_dep() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_1st_homogeneous_coeff_subs_indep_div_dep", false]], "ode_1st_linear() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_1st_linear", false]], "ode_1st_power_series() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_1st_power_series", false]], "ode_2nd_power_series_ordinary() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_2nd_power_series_ordinary", false]], "ode_2nd_power_series_regular() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_2nd_power_series_regular", false]], "ode_almost_linear() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_almost_linear", false]], "ode_bernoulli() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_Bernoulli", false]], "ode_lie_group() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_lie_group", false]], "ode_linear_coefficients() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_linear_coefficients", false]], "ode_liouville() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_Liouville", false]], "ode_nth_linear_constant_coeff_homogeneous() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_nth_linear_constant_coeff_homogeneous", false]], "ode_nth_linear_constant_coeff_undetermined_coefficients() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_nth_linear_constant_coeff_undetermined_coefficients", false]], "ode_nth_linear_constant_coeff_variation_of_parameters() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_nth_linear_constant_coeff_variation_of_parameters", false]], "ode_order() (in module diofant.solvers.deutils)": [[56, "diofant.solvers.deutils.ode_order", false]], "ode_riccati_special_minus2() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_Riccati_special_minus2", false]], "ode_separable() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_separable", false]], "ode_separable_reduced() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_separable_reduced", false]], "ode_sol_simplicity() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.ode_sol_simplicity", false]], "odesimp() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.odesimp", false]], "one (class in diofant.core.numbers)": [[27, "diofant.core.numbers.One", false]], "ones() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.ones", false]], "open() (diofant.sets.sets.interval class method)": [[47, "diofant.sets.sets.Interval.open", false]], "operationnotsupportederror": [[10, "diofant.polys.polyerrors.OperationNotSupportedError", false]], "opt_cse() (in module diofant.simplify.cse_main)": [[48, "diofant.simplify.cse_main.opt_cse", false]], "optionerror": [[10, "diofant.polys.polyerrors.OptionError", false]], "or (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.Or", false]], "orbit() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.orbit", false]], "orbit_rep() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.orbit_rep", false]], "orbit_transversal() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.orbit_transversal", false]], "orbits() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.orbits", false]], "order (class in diofant.calculus.order)": [[11, "diofant.calculus.order.Order", false]], "order (class in diofant.polys.polyoptions)": [[10, "diofant.polys.polyoptions.Order", false]], "order (diofant.functions.special.bessel.besselbase property)": [[32, "diofant.functions.special.bessel.BesselBase.order", false]], "order() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.order", false]], "order() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.order", false]], "ordered() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.ordered", false]], "ordered_partitions() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.ordered_partitions", false]], "outputargument (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.OutputArgument", false]], "parallel_poly_from_expr() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.parallel_poly_from_expr", false]], "parametrize_ternary_quadratic() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.parametrize_ternary_quadratic", false]], "parens() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.parens", false]], "parity() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.parity", false]], "parse_expr() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.parse_expr", false]], "parse_maxima() (in module diofant.parsing.maxima)": [[44, "diofant.parsing.maxima.parse_maxima", false]], "partition (class in diofant.combinatorics.partitions)": [[16, "diofant.combinatorics.partitions.Partition", false]], "partition (diofant.combinatorics.partitions.partition property)": [[16, "diofant.combinatorics.partitions.Partition.partition", false]], "partition() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.partition", false]], "partitions() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.partitions", false]], "pde_1st_linear_constant_coeff() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.pde_1st_linear_constant_coeff", false]], "pde_1st_linear_constant_coeff_homogeneous() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.pde_1st_linear_constant_coeff_homogeneous", false]], "pde_1st_linear_variable_coeff() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.pde_1st_linear_variable_coeff", false]], "pde_separate() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.pde_separate", false]], "pde_separate_add() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.pde_separate_add", false]], "pde_separate_mul() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.pde_separate_mul", false]], "pdsolve() (in module diofant.solvers.pde)": [[53, "diofant.solvers.pde.pdsolve", false]], "per() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.per", false]], "perfect_power() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.perfect_power", false]], "periodic_argument (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.periodic_argument", false]], "permutation (class in diofant.combinatorics.permutations)": [[18, "diofant.combinatorics.permutations.Permutation", false]], "permutationgroup (class in diofant.combinatorics.perm_groups)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup", false]], "permute_signs() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.permute_signs", false]], "permutebkwd() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.permuteBkwd", false]], "permutedims() (in module diofant.tensor.array)": [[57, "diofant.tensor.array.permutedims", false]], "permutefwd() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.permuteFwd", false]], "pgroup (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.pgroup", false]], "pi (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Pi", false]], "piecewise (class in diofant.functions.elementary.piecewise)": [[30, "diofant.functions.elementary.piecewise.Piecewise", false]], "piecewise_fold() (in module diofant.functions.elementary.piecewise)": [[30, "diofant.functions.elementary.piecewise.piecewise_fold", false]], "pinv() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.pinv", false]], "pinv_solve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.pinv_solve", false]], "point (diofant.core.function.subs property)": [[27, "diofant.core.function.Subs.point", false]], "pointwise_stabilizer() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.pointwise_stabilizer", false]], "polar_lift (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.polar_lift", false]], "poleerror (class in diofant.core.function)": [[27, "diofant.core.function.PoleError", false]], "polificationfailederror": [[10, "diofant.polys.polyerrors.PolificationFailedError", false]], "pollard_pm1() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.pollard_pm1", false]], "pollard_rho() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.pollard_rho", false]], "poly (class in diofant.polys.polytools)": [[45, "diofant.polys.polytools.Poly", false]], "poly_ring() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.poly_ring", false]], "polyelement (class in diofant.polys.rings)": [[10, "diofant.polys.rings.PolyElement", false]], "polygamma (class in diofant.functions.special.gamma_functions)": [[32, "diofant.functions.special.gamma_functions.polygamma", false]], "polyhedron (class in diofant.combinatorics.polyhedron)": [[19, "diofant.combinatorics.polyhedron.Polyhedron", false]], "polylog (class in diofant.functions.special.zeta_functions)": [[32, "diofant.functions.special.zeta_functions.polylog", false]], "polynomialdivisionfailederror": [[10, "diofant.polys.polyerrors.PolynomialDivisionFailedError", false]], "polynomialerror": [[10, "diofant.polys.polyerrors.PolynomialError", false]], "polynomialring (class in diofant.polys.rings)": [[28, "diofant.polys.rings.PolynomialRing", false]], "posify() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.posify", false]], "postorder_traversal() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.postorder_traversal", false]], "pow (class in diofant.core.power)": [[27, "diofant.core.power.Pow", false]], "powdenest() (in module diofant.simplify.powsimp)": [[48, "diofant.simplify.powsimp.powdenest", false]], "power_representation() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.power_representation", false]], "powerset() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.powerset", false]], "powsimp() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.powsimp", false]], "powsimp() (in module diofant.simplify.powsimp)": [[48, "diofant.simplify.powsimp.powsimp", false]], "pprint() (in module diofant.printing.pretty)": [[46, "diofant.printing.pretty.pprint", false]], "pqa() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.PQa", false]], "precisionexhausted (class in diofant.core.evalf)": [[27, "diofant.core.evalf.PrecisionExhausted", false]], "preferred_index (diofant.functions.special.tensor_functions.kroneckerdelta property)": [[32, "diofant.functions.special.tensor_functions.KroneckerDelta.preferred_index", false]], "prem() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.prem", false]], "preorder_traversal (class in diofant.core.basic)": [[27, "diofant.core.basic.preorder_traversal", false]], "pretty() (in module diofant.printing.pretty)": [[46, "diofant.printing.pretty.pretty", false]], "pretty_atom() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.pretty_atom", false]], "pretty_print() (in module diofant.printing.pretty)": [[46, "diofant.printing.pretty.pretty_print", false]], "pretty_symbol() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.pretty_symbol", false]], "prettyform (class in diofant.printing.stringpict)": [[46, "diofant.printing.stringpict.prettyForm", false]], "prettyprinter (class in diofant.printing.pretty)": [[46, "diofant.printing.pretty.PrettyPrinter", false]], "prev() (diofant.combinatorics.prufer.prufer method)": [[20, "diofant.combinatorics.prufer.Prufer.prev", false]], "prev_binary() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.prev_binary", false]], "prev_gray() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.prev_gray", false]], "prev_lex() (diofant.combinatorics.partitions.integerpartition method)": [[16, "diofant.combinatorics.partitions.IntegerPartition.prev_lex", false]], "prev_lexicographic() (diofant.combinatorics.subsets.subset method)": [[21, "diofant.combinatorics.subsets.Subset.prev_lexicographic", false]], "prevprime() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.prevprime", false]], "prime() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.prime", false]], "prime_as_sum_of_two_squares() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.prime_as_sum_of_two_squares", false]], "primefactors() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.primefactors", false]], "primepi() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.primepi", false]], "primerange() (diofant.ntheory.generate.sieve method)": [[43, "diofant.ntheory.generate.Sieve.primerange", false]], "primerange() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.primerange", false]], "primitive() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.primitive", false]], "primitive() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.primitive", false]], "primitive() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.primitive", false]], "primitive() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.primitive", false]], "primitive() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.primitive", false]], "primitive_element() (in module diofant.polys.numberfields)": [[45, "diofant.polys.numberfields.primitive_element", false]], "primitive_root() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.primitive_root", false]], "primorial() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.primorial", false]], "principal_branch (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.principal_branch", false]], "print_nonzero() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.print_nonzero", false]], "printer (class in diofant.printing.printer)": [[46, "diofant.printing.printer.Printer", false]], "printmethod (diofant.printing.ccode.ccodeprinter attribute)": [[46, "diofant.printing.ccode.CCodePrinter.printmethod", false]], "printmethod (diofant.printing.codeprinter.codeprinter attribute)": [[46, "diofant.printing.codeprinter.CodePrinter.printmethod", false]], "printmethod (diofant.printing.fcode.fcodeprinter attribute)": [[46, "diofant.printing.fcode.FCodePrinter.printmethod", false]], "printmethod (diofant.printing.lambdarepr.lambdaprinter attribute)": [[46, "diofant.printing.lambdarepr.LambdaPrinter.printmethod", false]], "printmethod (diofant.printing.latex.latexprinter attribute)": [[46, "diofant.printing.latex.LatexPrinter.printmethod", false]], "printmethod (diofant.printing.mathematica.mcodeprinter attribute)": [[46, "diofant.printing.mathematica.MCodePrinter.printmethod", false]], "printmethod (diofant.printing.mathml.mathmlprinter attribute)": [[46, "diofant.printing.mathml.MathMLPrinter.printmethod", false]], "printmethod (diofant.printing.printer.printer attribute)": [[46, "diofant.printing.printer.Printer.printmethod", false]], "printmethod (diofant.printing.repr.reprprinter attribute)": [[46, "diofant.printing.repr.ReprPrinter.printmethod", false]], "printmethod (diofant.printing.str.strprinter attribute)": [[46, "diofant.printing.str.StrPrinter.printmethod", false]], "product (class in diofant.concrete.products)": [[25, "diofant.concrete.products.Product", false]], "product() (in module diofant.concrete.products)": [[25, "diofant.concrete.products.product", false]], "productset (class in diofant.sets.sets)": [[47, "diofant.sets.sets.ProductSet", false]], "project() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.project", false]], "prufer (class in diofant.combinatorics.prufer)": [[20, "diofant.combinatorics.prufer.Prufer", false]], "prufer_rank() (diofant.combinatorics.prufer.prufer method)": [[20, "diofant.combinatorics.prufer.Prufer.prufer_rank", false]], "prufer_repr (diofant.combinatorics.prufer.prufer property)": [[20, "diofant.combinatorics.prufer.Prufer.prufer_repr", false]], "purepoly (class in diofant.polys.polytools)": [[45, "diofant.polys.polytools.PurePoly", false]], "python--m-diofant command line option": [[1, "cmdoption-python-m-diofant-V", false], [1, "cmdoption-python-m-diofant-a", false], [1, "cmdoption-python-m-diofant-h", false], [1, "cmdoption-python-m-diofant-no-ipython", false], [1, "cmdoption-python-m-diofant-no-wrap-division", false], [1, "cmdoption-python-m-diofant-unicode-identifiers", false], [1, "cmdoption-python-m-diofant-wrap-floats", false]], "pythonfinitefield (class in diofant.domains.finitefield)": [[28, "diofant.domains.finitefield.PythonFiniteField", false]], "pythonintegerring (class in diofant.domains.integerring)": [[28, "diofant.domains.integerring.PythonIntegerRing", false]], "pythonrationalfield (class in diofant.domains.rationalfield)": [[28, "diofant.domains.rationalfield.PythonRationalField", false]], "qrdecomposition() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.QRdecomposition", false]], "qrsolve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.QRsolve", false]], "quadratic_residues() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.quadratic_residues", false]], "quo() (diofant.domains.field.field method)": [[28, "diofant.domains.field.Field.quo", false]], "quo() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.quo", false]], "quo() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.quo", false]], "quo() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.quo", false]], "quo_ground() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.quo_ground", false]], "rad_rationalize() (in module diofant.simplify.radsimp)": [[48, "diofant.simplify.radsimp.rad_rationalize", false]], "radius_of_convergence (diofant.functions.special.hyper.hyper property)": [[32, "diofant.functions.special.hyper.hyper.radius_of_convergence", false]], "radsimp() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.radsimp", false]], "radsimp() (in module diofant.simplify.radsimp)": [[48, "diofant.simplify.radsimp.radsimp", false]], "randmatrix() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.randMatrix", false]], "random() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.random", false]], "random() (diofant.combinatorics.permutations.permutation class method)": [[18, "diofant.combinatorics.permutations.Permutation.random", false]], "random_bitstring() (diofant.combinatorics.graycode method)": [[12, "diofant.combinatorics.graycode.random_bitstring", false]], "random_complex_number() (in module diofant.utilities.randtest)": [[70, "diofant.utilities.randtest.random_complex_number", false]], "random_integer_partition() (in module diofant.combinatorics.partitions)": [[16, "diofant.combinatorics.partitions.random_integer_partition", false]], "random_poly() (in module diofant.polys.specialpolys)": [[45, "diofant.polys.specialpolys.random_poly", false]], "random_pr() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.random_pr", false]], "random_stab() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.random_stab", false]], "randprime() (in module diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.randprime", false]], "range (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.Range", false]], "ranges (diofant.tensor.indexed.indexed property)": [[60, "diofant.tensor.indexed.Indexed.ranges", false]], "rank (diofant.combinatorics.graycode.graycode property)": [[12, "diofant.combinatorics.graycode.GrayCode.rank", false]], "rank (diofant.combinatorics.partitions.partition property)": [[16, "diofant.combinatorics.partitions.Partition.rank", false]], "rank (diofant.combinatorics.prufer.prufer property)": [[20, "diofant.combinatorics.prufer.Prufer.rank", false]], "rank (diofant.tensor.indexed.indexed property)": [[60, "diofant.tensor.indexed.Indexed.rank", false]], "rank() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.rank", false]], "rank() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.rank", false]], "rank_binary (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.rank_binary", false]], "rank_gray (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.rank_gray", false]], "rank_lexicographic (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.rank_lexicographic", false]], "rank_nonlex() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.rank_nonlex", false]], "rank_trotterjohnson() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.rank_trotterjohnson", false]], "rat_clear_denoms() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.rat_clear_denoms", false]], "ratint() (in module diofant.integrals.rationaltools)": [[34, "diofant.integrals.rationaltools.ratint", false]], "ratint_logpart() (in module diofant.integrals.rationaltools)": [[34, "diofant.integrals.rationaltools.ratint_logpart", false]], "ratint_ratpart() (in module diofant.integrals.rationaltools)": [[34, "diofant.integrals.rationaltools.ratint_ratpart", false]], "rational (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Rational", false]], "rationalfield (class in diofant.domains)": [[28, "diofant.domains.RationalField", false]], "rationalize() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.rationalize", false]], "rationals (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.Rationals", false]], "ratsimp() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.ratsimp", false]], "ratsimp() (in module diofant.simplify.ratsimp)": [[48, "diofant.simplify.ratsimp.ratsimp", false]], "rcollect() (in module diofant.simplify.radsimp)": [[48, "diofant.simplify.radsimp.rcollect", false]], "re (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.re", false]], "real_root() (in module diofant.functions.elementary.miscellaneous)": [[30, "diofant.functions.elementary.miscellaneous.real_root", false]], "real_roots() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.real_roots", false]], "real_roots() (diofant.polys.rootoftools.rootof class method)": [[45, "diofant.polys.rootoftools.RootOf.real_roots", false]], "real_roots() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.real_roots", false]], "realalgebraicfield (class in diofant.domains)": [[28, "diofant.domains.RealAlgebraicField", false]], "realfield (class in diofant.domains)": [[28, "diofant.domains.RealField", false]], "realinterval (class in diofant.polys.rootisolation)": [[10, "diofant.polys.rootisolation.RealInterval", false]], "reals (class in diofant.sets.fancysets)": [[47, "diofant.sets.fancysets.Reals", false]], "reconstruct() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.reconstruct", false]], "recurrence_memo() (in module diofant.utilities.memoization)": [[68, "diofant.utilities.memoization.recurrence_memo", false]], "red_groebner() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.red_groebner", false]], "reduce() (diofant.polys.polytools.groebnerbasis method)": [[45, "diofant.polys.polytools.GroebnerBasis.reduce", false]], "reduce() (diofant.sets.sets.complement static method)": [[47, "diofant.sets.sets.Complement.reduce", false]], "reduce() (diofant.sets.sets.intersection static method)": [[47, "diofant.sets.sets.Intersection.reduce", false]], "reduce() (diofant.sets.sets.union static method)": [[47, "diofant.sets.sets.Union.reduce", false]], "reduce_inequalities() (in module diofant.solvers.inequalities)": [[51, "diofant.solvers.inequalities.reduce_inequalities", false]], "reduced() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.reduced", false]], "refine() (diofant.polys.rootisolation.complexinterval method)": [[10, "diofant.polys.rootisolation.ComplexInterval.refine", false]], "refine() (diofant.polys.rootisolation.realinterval method)": [[10, "diofant.polys.rootisolation.RealInterval.refine", false]], "refine() (diofant.polys.rootoftools.rootof method)": [[45, "diofant.polys.rootoftools.RootOf.refine", false]], "refinementfailederror": [[10, "diofant.polys.polyerrors.RefinementFailedError", false]], "rel (in module diofant.core.relational)": [[27, "diofant.core.relational.Rel", false]], "relational (class in diofant.core.relational)": [[27, "diofant.core.relational.Relational", false]], "rem() (diofant.domains.field.field method)": [[28, "diofant.domains.field.Field.rem", false]], "rem() (diofant.domains.ring.commutativering method)": [[28, "diofant.domains.ring.CommutativeRing.rem", false]], "rem() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.rem", false]], "rem() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.rem", false]], "removeo() (diofant.core.add.add method)": [[27, "diofant.core.add.Add.removeO", false]], "removeo() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.removeO", false]], "render() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.render", false]], "reorder() (diofant.concrete.expr_with_intlimits.exprwithintlimits method)": [[25, "diofant.concrete.expr_with_intlimits.ExprWithIntLimits.reorder", false]], "reorder() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.reorder", false]], "reorder_limit() (diofant.concrete.expr_with_intlimits.exprwithintlimits method)": [[25, "diofant.concrete.expr_with_intlimits.ExprWithIntLimits.reorder_limit", false]], "replace() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.replace", false]], "replace() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.replace", false]], "replace() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.replace", false]], "reprify() (diofant.printing.repr.reprprinter method)": [[46, "diofant.printing.repr.ReprPrinter.reprify", false]], "reprprinter (class in diofant.printing.repr)": [[46, "diofant.printing.repr.ReprPrinter", false]], "reset() (diofant.combinatorics.polyhedron.polyhedron method)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.reset", false]], "reshape() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.reshape", false]], "reshape() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.reshape", false]], "residue() (in module diofant.calculus.residues)": [[11, "diofant.calculus.residues.residue", false]], "result (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.Result", false]], "result_variables (diofant.utilities.codegen.routine property)": [[62, "diofant.utilities.codegen.Routine.result_variables", false]], "resultant() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.resultant", false]], "resultant() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.resultant", false]], "resultant() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.resultant", false]], "retract() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.retract", false]], "reverse_order() (diofant.concrete.products.product method)": [[25, "diofant.concrete.products.Product.reverse_order", false]], "reverse_order() (diofant.concrete.summations.sum method)": [[25, "diofant.concrete.summations.Sum.reverse_order", false]], "reversed (diofant.core.relational.relational property)": [[27, "diofant.core.relational.Relational.reversed", false]], "reversedgradedlexorder (class in diofant.polys.orderings)": [[45, "diofant.polys.orderings.ReversedGradedLexOrder", false]], "rewrite() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.rewrite", false]], "rewrite() (in module diofant.calculus.gruntz)": [[7, "diofant.calculus.gruntz.rewrite", false]], "rgs (diofant.combinatorics.partitions.partition property)": [[16, "diofant.combinatorics.partitions.Partition.RGS", false]], "rgs_enum() (in module diofant.combinatorics.partitions)": [[16, "diofant.combinatorics.partitions.RGS_enum", false]], "rgs_generalized() (in module diofant.combinatorics.partitions)": [[16, "diofant.combinatorics.partitions.RGS_generalized", false]], "rgs_rank() (in module diofant.combinatorics.partitions)": [[16, "diofant.combinatorics.partitions.RGS_rank", false]], "rgs_unrank() (in module diofant.combinatorics.partitions)": [[16, "diofant.combinatorics.partitions.RGS_unrank", false]], "rhs (diofant.core.relational.relational property)": [[27, "diofant.core.relational.Relational.rhs", false]], "right (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.right", false]], "right() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.right", false]], "right_open (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.right_open", false]], "ring (diofant.domains.ring.commutativering property)": [[28, "diofant.domains.ring.CommutativeRing.ring", false]], "ring() (in module diofant.polys.rings)": [[10, "diofant.polys.rings.ring", false]], "risingfactorial (class in diofant.functions.combinatorial.factorials)": [[29, "diofant.functions.combinatorial.factorials.RisingFactorial", false]], "rl (diofant.matrices.sparse.sparsematrixbase property)": [[42, "diofant.matrices.sparse.SparseMatrixBase.RL", false]], "rmul() (diofant.combinatorics.permutations.permutation static method)": [[18, "diofant.combinatorics.permutations.Permutation.rmul", false]], "rmul_with_af() (diofant.combinatorics.permutations.permutation static method)": [[18, "diofant.combinatorics.permutations.Permutation.rmul_with_af", false]], "root() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.root", false]], "root() (in module diofant.functions.elementary.miscellaneous)": [[30, "diofant.functions.elementary.miscellaneous.root", false]], "rootof (class in diofant.polys.rootoftools)": [[45, "diofant.polys.rootoftools.RootOf", false]], "roots() (in module diofant.polys.polyroots)": [[45, "diofant.polys.polyroots.roots", false]], "rootsum (class in diofant.polys.rootoftools)": [[45, "diofant.polys.rootoftools.RootSum", false]], "ropen() (diofant.sets.sets.interval class method)": [[47, "diofant.sets.sets.Interval.Ropen", false]], "rot_axis1() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.rot_axis1", false]], "rot_axis2() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.rot_axis2", false]], "rot_axis3() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.rot_axis3", false]], "rotate() (diofant.combinatorics.polyhedron.polyhedron method)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.rotate", false]], "rotate_left() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.rotate_left", false]], "rotate_right() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.rotate_right", false]], "round() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.round", false]], "roundfunction (class in diofant.functions.elementary.integers)": [[30, "diofant.functions.elementary.integers.RoundFunction", false]], "routine (class in diofant.utilities.codegen)": [[62, "diofant.utilities.codegen.Routine", false]], "routine() (diofant.utilities.codegen.codegen method)": [[62, "diofant.utilities.codegen.CodeGen.routine", false]], "routine() (diofant.utilities.codegen.octavecodegen method)": [[62, "diofant.utilities.codegen.OctaveCodeGen.routine", false]], "row_insert() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.row_insert", false]], "row_join() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.row_join", false]], "row_join() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.row_join", false]], "row_list() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.row_list", false]], "row_op() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.row_op", false]], "row_op() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.row_op", false]], "row_structure_symbolic_cholesky() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.row_structure_symbolic_cholesky", false]], "row_swap() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.row_swap", false]], "row_swap() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.row_swap", false]], "rref() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.rref", false]], "rsolve() (in module diofant.solvers.recurr)": [[54, "diofant.solvers.recurr.rsolve", false]], "rsolve_hyper() (in module diofant.solvers.recurr)": [[54, "diofant.solvers.recurr.rsolve_hyper", false]], "rsolve_poly() (in module diofant.solvers.recurr)": [[54, "diofant.solvers.recurr.rsolve_poly", false]], "rsolve_ratio() (in module diofant.solvers.recurr)": [[54, "diofant.solvers.recurr.rsolve_ratio", false]], "runs() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.runs", false]], "runs() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.runs", false]], "s (in module diofant.core.singleton)": [[27, "diofant.core.singleton.S", false]], "s_poly() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.s_poly", false]], "satisfiable() (in module diofant.logic.inference)": [[36, "diofant.logic.inference.satisfiable", false]], "scalar_multiply() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.scalar_multiply", false]], "schreier_sims() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.schreier_sims", false]], "schreier_sims_incremental() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.schreier_sims_incremental", false]], "schreier_sims_random() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.schreier_sims_random", false]], "schreier_vector() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.schreier_vector", false]], "search() (diofant.ntheory.generate.sieve method)": [[43, "diofant.ntheory.generate.Sieve.search", false]], "sec (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.sec", false]], "sech (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.sech", false]], "select() (diofant.simplify.epathtools.epath method)": [[48, "diofant.simplify.epathtools.EPath.select", false]], "selections (diofant.combinatorics.graycode.graycode property)": [[12, "diofant.combinatorics.graycode.GrayCode.selections", false]], "separatevars() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.separatevars", false]], "series() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.series", false]], "set (class in diofant.sets.sets)": [[47, "diofant.sets.sets.Set", false]], "set_domain() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.set_domain", false]], "set_global_settings() (diofant.printing.printer.printer class method)": [[46, "diofant.printing.printer.Printer.set_global_settings", false]], "set_modulus() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.set_modulus", false]], "set_order() (diofant.polys.polytools.groebnerbasis method)": [[45, "diofant.polys.polytools.GroebnerBasis.set_order", false]], "setup() (in module diofant.config)": [[26, "diofant.config.setup", false]], "shape (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.shape", false]], "shape (diofant.tensor.indexed.indexed property)": [[60, "diofant.tensor.indexed.Indexed.shape", false]], "shape (diofant.tensor.indexed.indexedbase property)": [[60, "diofant.tensor.indexed.IndexedBase.shape", false]], "shapeerror (class in diofant.matrices.matrices)": [[41, "diofant.matrices.matrices.ShapeError", false]], "shi (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.Shi", false]], "shift() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.shift", false]], "si (class in diofant.functions.special.error_functions)": [[32, "diofant.functions.special.error_functions.Si", false]], "sieve (class in diofant.ntheory.generate)": [[43, "diofant.ntheory.generate.Sieve", false]], "sift() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.sift", false]], "sig_cmp() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.sig_cmp", false]], "sig_key() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.sig_key", false]], "sig_mult() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.sig_mult", false]], "sign (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.sign", false]], "signature() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.signature", false]], "signed_permutations() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.signed_permutations", false]], "signinf() (in module diofant.calculus.gruntz)": [[7, "diofant.calculus.gruntz.signinf", false]], "simpledomain (class in diofant.domains.simpledomain)": [[28, "diofant.domains.simpledomain.SimpleDomain", false]], "simplify() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.simplify", false]], "simplify() (diofant.functions.special.delta_functions.diracdelta method)": [[32, "diofant.functions.special.delta_functions.DiracDelta.simplify", false]], "simplify() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.simplify", false]], "simplify() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.simplify", false]], "simplify() (in module diofant.simplify.simplify)": [[48, "diofant.simplify.simplify.simplify", false]], "simplify_logic() (in module diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.simplify_logic", false]], "sin (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.sin", false]], "sine_transform() (in module diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.sine_transform", false]], "sinetransform (class in diofant.integrals.transforms)": [[34, "diofant.integrals.transforms.SineTransform", false]], "singleton (class in diofant.core.singleton)": [[27, "diofant.core.singleton.Singleton", false]], "singletonregistry (class in diofant.core.singleton)": [[27, "diofant.core.singleton.SingletonRegistry", false]], "singletonwithmanagedproperties (class in diofant.core.singleton)": [[27, "diofant.core.singleton.SingletonWithManagedProperties", false]], "singular_values() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.singular_values", false]], "singularities() (in module diofant.calculus.singularities)": [[11, "diofant.calculus.singularities.singularities", false]], "sinh (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.sinh", false]], "size (diofant.combinatorics.permutations.permutation property)": [[18, "diofant.combinatorics.permutations.Permutation.size", false]], "size (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.size", false]], "size (diofant.combinatorics.prufer.prufer property)": [[20, "diofant.combinatorics.prufer.Prufer.size", false]], "size (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.size", false]], "skip() (diofant.combinatorics.graycode.graycode method)": [[12, "diofant.combinatorics.graycode.GrayCode.skip", false]], "skip() (diofant.core.basic.preorder_traversal method)": [[27, "diofant.core.basic.preorder_traversal.skip", false]], "smoothness() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.smoothness", false]], "smoothness_p() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.smoothness_p", false]], "solve() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.solve", false]], "solve() (in module diofant.solvers.solvers)": [[55, "diofant.solvers.solvers.solve", false]], "solve_congruence() (in module diofant.ntheory.modular)": [[43, "diofant.ntheory.modular.solve_congruence", false]], "solve_least_squares() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.solve_least_squares", false]], "solve_least_squares() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.solve_least_squares", false]], "solve_linear() (in module diofant.solvers.solvers)": [[55, "diofant.solvers.solvers.solve_linear", false]], "solve_linear_system() (in module diofant.solvers.polysys)": [[55, "diofant.solvers.polysys.solve_linear_system", false]], "solve_poly_system() (in module diofant.solvers.polysys)": [[55, "diofant.solvers.polysys.solve_poly_system", false]], "solve_surd_system() (in module diofant.solvers.polysys)": [[55, "diofant.solvers.polysys.solve_surd_system", false]], "sort_key() (diofant.combinatorics.partitions.partition method)": [[16, "diofant.combinatorics.partitions.Partition.sort_key", false]], "sort_key() (diofant.core.basic.atom method)": [[27, "diofant.core.basic.Atom.sort_key", false]], "sort_key() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.sort_key", false]], "sort_key() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.sort_key", false]], "sort_key() (diofant.core.numbers.number method)": [[27, "diofant.core.numbers.Number.sort_key", false]], "sort_key() (diofant.core.symbol.dummy method)": [[27, "diofant.core.symbol.Dummy.sort_key", false]], "sparsematrix (in module diofant.matrices.sparse)": [[42, "diofant.matrices.sparse.SparseMatrix", false]], "sparsematrixbase (class in diofant.matrices.sparse)": [[42, "diofant.matrices.sparse.SparseMatrixBase", false]], "spherical_bessel_fn() (in module diofant.polys.orthopolys)": [[45, "diofant.polys.orthopolys.spherical_bessel_fn", false]], "split_super_sub() (in module diofant.printing.conventions)": [[46, "diofant.printing.conventions.split_super_sub", false]], "split_symbols() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.split_symbols", false]], "split_symbols_custom() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.split_symbols_custom", false]], "spoly() (in module diofant.polys.groebnertools)": [[10, "diofant.polys.groebnertools.spoly", false]], "sqf() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.sqf", false]], "sqf_list() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.sqf_list", false]], "sqf_list() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.sqf_list", false]], "sqf_norm() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.sqf_norm", false]], "sqf_norm() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.sqf_norm", false]], "sqf_normal() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.sqf_normal", false]], "sqf_part() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.sqf_part", false]], "sqf_part() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.sqf_part", false]], "sqrt() (in module diofant.functions.elementary.miscellaneous)": [[30, "diofant.functions.elementary.miscellaneous.sqrt", false]], "sqrt_mod() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.sqrt_mod", false]], "sqrt_mod_iter() (in module diofant.ntheory.residue_ntheory)": [[43, "diofant.ntheory.residue_ntheory.sqrt_mod_iter", false]], "sqrtdenest() (in module diofant.simplify.sqrtdenest)": [[48, "diofant.simplify.sqrtdenest.sqrtdenest", false]], "square_factor() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.square_factor", false]], "square_factor() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.square_factor", false]], "srepr() (in module diofant.printing.repr)": [[46, "diofant.printing.repr.srepr", false]], "sstr() (in module diofant.printing.str)": [[46, "diofant.printing.str.sstr", false]], "stabilizer() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.stabilizer", false]], "stack() (diofant.printing.stringpict.stringpict static method)": [[46, "diofant.printing.stringpict.stringPict.stack", false]], "standard_transformations (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.standard_transformations", false]], "start (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.start", false]], "stdfactkb (class in diofant.core.assumptions)": [[27, "diofant.core.assumptions.StdFactKB", false]], "stirling() (in module diofant.functions.combinatorial.numbers)": [[29, "diofant.functions.combinatorial.numbers.stirling", false]], "strictgreaterthan (class in diofant.core.relational)": [[27, "diofant.core.relational.StrictGreaterThan", false]], "strictlessthan (class in diofant.core.relational)": [[27, "diofant.core.relational.StrictLessThan", false]], "stringify_expr() (in module diofant.parsing.sympy_parser)": [[44, "diofant.parsing.sympy_parser.stringify_expr", false]], "stringpict (class in diofant.printing.stringpict)": [[46, "diofant.printing.stringpict.stringPict", false]], "strong_gens (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.strong_gens", false]], "strprinter (class in diofant.printing.str)": [[46, "diofant.printing.str.StrPrinter", false]], "sturm() (diofant.polys.univar.univarpolyelement method)": [[10, "diofant.polys.univar.UnivarPolyElement.sturm", false]], "subfactorial (class in diofant.functions.combinatorial.factorials)": [[29, "diofant.functions.combinatorial.factorials.subfactorial", false]], "subgroup_search() (diofant.combinatorics.perm_groups.permutationgroup method)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.subgroup_search", false]], "subresultants() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.subresultants", false]], "subresultants() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.subresultants", false]], "subresultants() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.subresultants", false]], "subs (class in diofant.core.function)": [[27, "diofant.core.function.Subs", false]], "subs() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.subs", false]], "subs() (diofant.matrices.immutable.immutablesparsematrix method)": [[42, "diofant.matrices.immutable.ImmutableSparseMatrix.subs", false]], "subs() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.subs", false]], "subset (class in diofant.combinatorics.subsets)": [[21, "diofant.combinatorics.subsets.Subset", false]], "subset (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.subset", false]], "subset_from_bitlist() (diofant.combinatorics.subsets.subset class method)": [[21, "diofant.combinatorics.subsets.Subset.subset_from_bitlist", false]], "subset_indices() (diofant.combinatorics.subsets.subset class method)": [[21, "diofant.combinatorics.subsets.Subset.subset_indices", false]], "subsets() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.subsets", false]], "sum (class in diofant.concrete.summations)": [[25, "diofant.concrete.summations.Sum", false]], "sum_of_four_squares() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.sum_of_four_squares", false]], "sum_of_powers() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.sum_of_powers", false]], "sum_of_squares() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.sum_of_squares", false]], "sum_of_three_squares() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.sum_of_three_squares", false]], "summation() (in module diofant.concrete.summations)": [[25, "diofant.concrete.summations.summation", false]], "sup (diofant.sets.sets.interval property)": [[47, "diofant.sets.sets.Interval.sup", false]], "sup (diofant.sets.sets.set property)": [[47, "diofant.sets.sets.Set.sup", false]], "superset (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.superset", false]], "superset_size (diofant.combinatorics.subsets.subset property)": [[21, "diofant.combinatorics.subsets.Subset.superset_size", false]], "support() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.support", false]], "swinnerton_dyer_poly() (in module diofant.polys.specialpolys)": [[45, "diofant.polys.specialpolys.swinnerton_dyer_poly", false]], "symbol (class in diofant.core.symbol)": [[27, "diofant.core.symbol.Symbol", false]], "symbols() (in module diofant.core.symbol)": [[27, "diofant.core.symbol.symbols", false]], "symmetric() (diofant.combinatorics.generators method)": [[18, "diofant.combinatorics.generators.symmetric", false]], "symmetric_difference() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.symmetric_difference", false]], "symmetric_poly() (in module diofant.polys.specialpolys)": [[45, "diofant.polys.specialpolys.symmetric_poly", false]], "symmetric_residue() (in module diofant.ntheory.modular)": [[43, "diofant.ntheory.modular.symmetric_residue", false]], "symmetricgroup() (in module diofant.combinatorics.named_groups)": [[15, "diofant.combinatorics.named_groups.SymmetricGroup", false]], "symmetrize() (in module diofant.polys.polyfuncs)": [[45, "diofant.polys.polyfuncs.symmetrize", false]], "sympify() (in module diofant.core.sympify)": [[27, "diofant.core.sympify.sympify", false]], "sysode_linear_neq_order1() (in module diofant.solvers.ode)": [[52, "diofant.solvers.ode.sysode_linear_neq_order1", false]], "t (diofant.matrices.expressions.matrixexpr property)": [[38, "diofant.matrices.expressions.MatrixExpr.T", false]], "t (diofant.matrices.matrices.matrixbase property)": [[41, "diofant.matrices.matrices.MatrixBase.T", false]], "table() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.table", false]], "tail_degree() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.tail_degree", false]], "tan (class in diofant.functions.elementary.trigonometric)": [[30, "diofant.functions.elementary.trigonometric.tan", false]], "tanh (class in diofant.functions.elementary.hyperbolic)": [[30, "diofant.functions.elementary.hyperbolic.tanh", false]], "taylor_term() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.taylor_term", false]], "taylor_term() (diofant.functions.elementary.hyperbolic.csch static method)": [[30, "diofant.functions.elementary.hyperbolic.csch.taylor_term", false]], "taylor_term() (diofant.functions.elementary.hyperbolic.sinh static method)": [[30, "diofant.functions.elementary.hyperbolic.sinh.taylor_term", false]], "tc() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.TC", false]], "tensorcontraction() (in module diofant.tensor.array)": [[57, "diofant.tensor.array.tensorcontraction", false]], "tensorproduct() (in module diofant.tensor.array)": [[57, "diofant.tensor.array.tensorproduct", false]], "terminal_width() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.terminal_width", false]], "terms() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.terms", false]], "terms_gcd() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.terms_gcd", false]], "terms_gcd() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.terms_gcd", false]], "termwise() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.termwise", false]], "to_cnf() (in module diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.to_cnf", false]], "to_dnf() (in module diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.to_dnf", false]], "to_exact() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.to_exact", false]], "to_expr() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.to_expr", false]], "to_field() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.to_field", false]], "to_nnf() (in module diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.to_nnf", false]], "to_prufer() (diofant.combinatorics.prufer.prufer static method)": [[20, "diofant.combinatorics.prufer.Prufer.to_prufer", false]], "to_rational() (diofant.domains.realfield method)": [[28, "diofant.domains.RealField.to_rational", false]], "to_ring() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.to_ring", false]], "to_tree() (diofant.combinatorics.prufer.prufer static method)": [[20, "diofant.combinatorics.prufer.Prufer.to_tree", false]], "together() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.together", false]], "together() (in module diofant.polys.rationaltools)": [[45, "diofant.polys.rationaltools.together", false]], "tolist() (diofant.matrices.dense.densematrix method)": [[37, "diofant.matrices.dense.DenseMatrix.tolist", false]], "tolist() (diofant.matrices.sparse.sparsematrixbase method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.tolist", false]], "total_degree() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.total_degree", false]], "total_degree() (diofant.polys.rings.polyelement method)": [[10, "diofant.polys.rings.PolyElement.total_degree", false]], "totient (class in diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.totient", false]], "trace (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.Trace", false]], "trace() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.trace", false]], "trager() (in module diofant.polys.factorization_alg_field)": [[10, "diofant.polys.factorization_alg_field.trager", false]], "trailing() (in module diofant.ntheory.factor_)": [[43, "diofant.ntheory.factor_.trailing", false]], "transform() (diofant.integrals.integrals.integral method)": [[34, "diofant.integrals.integrals.Integral.transform", false]], "transform_variable (diofant.integrals.transforms.integraltransform property)": [[34, "diofant.integrals.transforms.IntegralTransform.transform_variable", false]], "transformation_to_dn() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.transformation_to_DN", false]], "transformation_to_normal() (in module diofant.solvers.diophantine)": [[49, "diofant.solvers.diophantine.transformation_to_normal", false]], "transitivity_degree (diofant.combinatorics.perm_groups.permutationgroup property)": [[17, "diofant.combinatorics.perm_groups.PermutationGroup.transitivity_degree", false]], "transpose (class in diofant.functions.elementary.complexes)": [[30, "diofant.functions.elementary.complexes.transpose", false]], "transpose (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.Transpose", false]], "transpose() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.transpose", false]], "transpose() (diofant.matrices.expressions.blockmatrix.blockmatrix method)": [[38, "diofant.matrices.expressions.blockmatrix.BlockMatrix.transpose", false]], "transpose() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.transpose", false]], "transpositions() (diofant.combinatorics.permutations.permutation method)": [[18, "diofant.combinatorics.permutations.Permutation.transpositions", false]], "tree_cse() (in module diofant.simplify.cse_main)": [[48, "diofant.simplify.cse_main.tree_cse", false]], "tree_repr (diofant.combinatorics.prufer.prufer property)": [[20, "diofant.combinatorics.prufer.Prufer.tree_repr", false]], "trial_division() (in module diofant.polys.modulargcd)": [[10, "diofant.polys.modulargcd.trial_division", false]], "trigamma() (in module diofant.functions.special.gamma_functions)": [[32, "diofant.functions.special.gamma_functions.trigamma", false]], "trigintegrate() (in module diofant.integrals.trigonometry)": [[34, "diofant.integrals.trigonometry.trigintegrate", false]], "trigsimp() (diofant.core.expr.expr method)": [[27, "diofant.core.expr.Expr.trigsimp", false]], "trigsimp() (in module diofant.simplify.trigsimp)": [[48, "diofant.simplify.trigsimp.trigsimp", false]], "trunc() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.trunc", false]], "trunc() (in module diofant.polys.polytools)": [[45, "diofant.polys.polytools.trunc", false]], "tuple (class in diofant.core.containers)": [[27, "diofant.core.containers.Tuple", false]], "tuple_count() (diofant.core.containers.tuple method)": [[27, "diofant.core.containers.Tuple.tuple_count", false]], "u() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.U", false]], "ufuncify() (in module diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.ufuncify", false]], "ufuncifycodewrapper (class in diofant.utilities.autowrap)": [[61, "diofant.utilities.autowrap.UfuncifyCodeWrapper", false]], "unequality (class in diofant.core.relational)": [[27, "diofant.core.relational.Unequality", false]], "unflatten() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.unflatten", false]], "unicode_identifiers() (in module diofant.interactive.session)": [[35, "diofant.interactive.session.unicode_identifiers", false]], "unificationfailederror": [[10, "diofant.polys.polyerrors.UnificationFailedError", false]], "unify() (diofant.domains.domain.domain method)": [[28, "diofant.domains.domain.Domain.unify", false]], "unify() (diofant.polys.polytools.poly method)": [[45, "diofant.polys.polytools.Poly.unify", false]], "union (class in diofant.sets.sets)": [[47, "diofant.sets.sets.Union", false]], "union() (diofant.sets.sets.set method)": [[47, "diofant.sets.sets.Set.union", false]], "uniq() (in module diofant.utilities.iterables)": [[66, "diofant.utilities.iterables.uniq", false]], "univariatepolynomialerror": [[10, "diofant.polys.polyerrors.UnivariatePolynomialError", false]], "univarpolyelement (class in diofant.polys.univar)": [[10, "diofant.polys.univar.UnivarPolyElement", false]], "univarpolynomialring (class in diofant.polys.univar)": [[28, "diofant.polys.univar.UnivarPolynomialRing", false]], "unluckyleadingcoefficienterror": [[10, "diofant.polys.polyerrors.UnluckyLeadingCoefficientError", false]], "unrad() (in module diofant.simplify.sqrtdenest)": [[48, "diofant.simplify.sqrtdenest.unrad", false]], "unrank() (diofant.combinatorics.graycode.graycode class method)": [[12, "diofant.combinatorics.graycode.GrayCode.unrank", false]], "unrank() (diofant.combinatorics.prufer.prufer class method)": [[20, "diofant.combinatorics.prufer.Prufer.unrank", false]], "unrank_binary() (diofant.combinatorics.subsets.subset class method)": [[21, "diofant.combinatorics.subsets.Subset.unrank_binary", false]], "unrank_gray() (diofant.combinatorics.subsets.subset class method)": [[21, "diofant.combinatorics.subsets.Subset.unrank_gray", false]], "unrank_lex() (diofant.combinatorics.permutations.permutation class method)": [[18, "diofant.combinatorics.permutations.Permutation.unrank_lex", false]], "unrank_nonlex() (diofant.combinatorics.permutations.permutation class method)": [[18, "diofant.combinatorics.permutations.Permutation.unrank_nonlex", false]], "unrank_trotterjohnson() (diofant.combinatorics.permutations.permutation class method)": [[18, "diofant.combinatorics.permutations.Permutation.unrank_trotterjohnson", false]], "upper (diofant.tensor.indexed.idx property)": [[60, "diofant.tensor.indexed.Idx.upper", false]], "upper_triangular_solve() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.upper_triangular_solve", false]], "uppergamma (class in diofant.functions.special.gamma_functions)": [[32, "diofant.functions.special.gamma_functions.uppergamma", false]], "use() (in module diofant.simplify.traversaltools)": [[48, "diofant.simplify.traversaltools.use", false]], "values() (diofant.core.containers.dict method)": [[27, "diofant.core.containers.Dict.values", false]], "values() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.values", false]], "var() (in module diofant.core.symbol)": [[27, "diofant.core.symbol.var", false]], "variables (diofant.concrete.expr_with_limits.exprwithlimits property)": [[25, "diofant.concrete.expr_with_limits.ExprWithLimits.variables", false]], "variables (diofant.core.function.derivative property)": [[27, "diofant.core.function.Derivative.variables", false]], "variables (diofant.core.function.lambda property)": [[27, "diofant.core.function.Lambda.variables", false]], "variables (diofant.core.function.subs property)": [[27, "diofant.core.function.Subs.variables", false]], "variables (diofant.utilities.codegen.routine property)": [[62, "diofant.utilities.codegen.Routine.variables", false]], "vec() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.vec", false]], "vech() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.vech", false]], "vectorize (class in diofant.core.multidimensional)": [[27, "diofant.core.multidimensional.vectorize", false]], "verify_derivative_numerically() (in module diofant.utilities.randtest)": [[70, "diofant.utilities.randtest.verify_derivative_numerically", false]], "verify_numerically() (in module diofant.utilities.randtest)": [[70, "diofant.utilities.randtest.verify_numerically", false]], "vertices (diofant.combinatorics.polyhedron.polyhedron property)": [[19, "diofant.combinatorics.polyhedron.Polyhedron.vertices", false]], "viete() (in module diofant.polys.polyfuncs)": [[45, "diofant.polys.polyfuncs.viete", false]], "vobj() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.vobj", false]], "vstack() (diofant.matrices.matrices.matrixbase class method)": [[41, "diofant.matrices.matrices.MatrixBase.vstack", false]], "width() (diofant.printing.stringpict.stringpict method)": [[46, "diofant.printing.stringpict.stringPict.width", false]], "wild (class in diofant.core.symbol)": [[27, "diofant.core.symbol.Wild", false]], "wildfunction (class in diofant.core.function)": [[27, "diofant.core.function.WildFunction", false]], "wrap_float_literals() (in module diofant.interactive.session)": [[35, "diofant.interactive.session.wrap_float_literals", false]], "write() (diofant.utilities.codegen.codegen method)": [[62, "diofant.utilities.codegen.CodeGen.write", false]], "wronskian() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.wronskian", false]], "xobj() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.xobj", false]], "xor (class in diofant.logic.boolalg)": [[36, "diofant.logic.boolalg.Xor", false]], "xreplace() (diofant.core.basic.basic method)": [[27, "diofant.core.basic.Basic.xreplace", false]], "xreplace() (diofant.matrices.immutable.immutablesparsematrix method)": [[42, "diofant.matrices.immutable.ImmutableSparseMatrix.xreplace", false]], "xreplace() (diofant.matrices.matrices.matrixbase method)": [[41, "diofant.matrices.matrices.MatrixBase.xreplace", false]], "xsym() (in module diofant.printing.pretty_symbology)": [[46, "diofant.printing.pretty_symbology.xsym", false]], "yn (class in diofant.functions.special.bessel)": [[32, "diofant.functions.special.bessel.yn", false]], "ynm (class in diofant.functions.special.spherical_harmonics)": [[32, "diofant.functions.special.spherical_harmonics.Ynm", false]], "ynm_c() (in module diofant.functions.special.spherical_harmonics)": [[32, "diofant.functions.special.spherical_harmonics.Ynm_c", false]], "zero (class in diofant.core.numbers)": [[27, "diofant.core.numbers.Zero", false]], "zeromatrix (class in diofant.matrices.expressions)": [[38, "diofant.matrices.expressions.ZeroMatrix", false]], "zeros() (diofant.matrices.dense.densematrix class method)": [[37, "diofant.matrices.dense.DenseMatrix.zeros", false]], "zeros() (diofant.matrices.sparse.sparsematrixbase class method)": [[42, "diofant.matrices.sparse.SparseMatrixBase.zeros", false]], "zeros() (in module diofant.matrices.dense)": [[41, "diofant.matrices.dense.zeros", false]], "zeta (class in diofant.functions.special.zeta_functions)": [[32, "diofant.functions.special.zeta_functions.zeta", false]], "zip_row_op() (diofant.matrices.dense.mutabledensematrix method)": [[37, "diofant.matrices.dense.MutableDenseMatrix.zip_row_op", false]], "zip_row_op() (diofant.matrices.sparse.mutablesparsematrix method)": [[42, "diofant.matrices.sparse.MutableSparseMatrix.zip_row_op", false]], "znm (class in diofant.functions.special.spherical_harmonics)": [[32, "diofant.functions.special.spherical_harmonics.Znm", false]]}, "objects": {"": [[33, 0, 0, "-", "diofant"]], "diofant": [[11, 0, 0, "-", "calculus"], [26, 0, 0, "-", "config"], [27, 0, 0, "-", "core"], [28, 0, 0, "-", "domains"], [31, 0, 0, "-", "functions"], [34, 0, 0, "-", "integrals"], [35, 0, 0, "-", "interactive"], [36, 0, 0, "-", "logic"], [40, 0, 0, "-", "matrices"], [44, 0, 0, "-", "parsing"], [45, 0, 0, "-", "polys"], [46, 0, 0, "-", "printing"], [50, 0, 0, "-", "solvers"], [58, 0, 0, "-", "tensor"], [65, 0, 0, "-", "utilities"]], "diofant.calculus": [[7, 0, 0, "-", "gruntz"], [11, 0, 0, "-", "limits"], [11, 0, 0, "-", "optimization"], [11, 0, 0, "-", "order"], [11, 0, 0, "-", "residues"], [11, 0, 0, "-", "singularities"]], "diofant.calculus.gruntz": [[7, 1, 1, "", "leadterm"], [7, 1, 1, "", "limitinf"], [7, 1, 1, "", "mrv"], [7, 1, 1, "", "mrv_max"], [7, 1, 1, "", "rewrite"], [7, 1, 1, "", "signinf"]], "diofant.calculus.limits": [[11, 2, 1, "", "Limit"], [11, 1, 1, "", "limit"]], "diofant.calculus.limits.Limit": [[11, 3, 1, "", "doit"]], "diofant.calculus.optimization": [[11, 1, 1, "", "maximize"], [11, 1, 1, "", "minimize"]], "diofant.calculus.order": [[11, 4, 1, "", "O"], [11, 2, 1, "", "Order"]], "diofant.calculus.order.Order": [[11, 3, 1, "", "contains"]], "diofant.calculus.residues": [[11, 1, 1, "", "residue"]], "diofant.calculus.singularities": [[11, 1, 1, "", "singularities"]], "diofant.combinatorics": [[18, 0, 0, "-", "generators"], [12, 0, 0, "-", "graycode"], [13, 0, 0, "-", "group_constructs"], [15, 0, 0, "-", "named_groups"], [16, 0, 0, "-", "partitions"], [17, 0, 0, "-", "perm_groups"], [18, 0, 0, "-", "permutations"], [19, 0, 0, "-", "polyhedron"], [20, 0, 0, "-", "prufer"], [21, 0, 0, "-", "subsets"], [22, 0, 0, "-", "tensor_can"], [23, 0, 0, "-", "testutil"], [24, 0, 0, "-", "util"]], "diofant.combinatorics.generators": [[18, 3, 1, "", "alternating"], [18, 3, 1, "", "cyclic"], [18, 3, 1, "", "dihedral"], [18, 3, 1, "", "symmetric"]], "diofant.combinatorics.graycode": [[12, 2, 1, "", "GrayCode"], [12, 3, 1, "", "bin_to_gray"], [12, 3, 1, "", "get_subset_from_bitstring"], [12, 3, 1, "", "gray_to_bin"], [12, 3, 1, "", "graycode_subsets"], [12, 3, 1, "", "random_bitstring"]], "diofant.combinatorics.graycode.GrayCode": [[12, 5, 1, "", "current"], [12, 3, 1, "", "generate_gray"], [12, 5, 1, "", "n"], [12, 3, 1, "", "next"], [12, 5, 1, "", "rank"], [12, 5, 1, "", "selections"], [12, 3, 1, "", "skip"], [12, 3, 1, "", "unrank"]], "diofant.combinatorics.group_constructs": [[13, 1, 1, "", "DirectProduct"]], "diofant.combinatorics.named_groups": [[15, 1, 1, "", "AbelianGroup"], [15, 1, 1, "", "AlternatingGroup"], [15, 1, 1, "", "CyclicGroup"], [15, 1, 1, "", "DihedralGroup"], [15, 1, 1, "", "SymmetricGroup"]], "diofant.combinatorics.partitions": [[16, 2, 1, "", "IntegerPartition"], [16, 2, 1, "", "Partition"], [16, 1, 1, "", "RGS_enum"], [16, 1, 1, "", "RGS_generalized"], [16, 1, 1, "", "RGS_rank"], [16, 1, 1, "", "RGS_unrank"], [16, 1, 1, "", "random_integer_partition"]], "diofant.combinatorics.partitions.IntegerPartition": [[16, 3, 1, "", "as_dict"], [16, 3, 1, "", "as_ferrers"], [16, 5, 1, "", "conjugate"], [16, 3, 1, "", "next_lex"], [16, 3, 1, "", "prev_lex"]], "diofant.combinatorics.partitions.Partition": [[16, 5, 1, "", "RGS"], [16, 3, 1, "", "from_rgs"], [16, 5, 1, "", "partition"], [16, 5, 1, "", "rank"], [16, 3, 1, "", "sort_key"]], "diofant.combinatorics.perm_groups": [[17, 2, 1, "", "PermutationGroup"]], "diofant.combinatorics.perm_groups.PermutationGroup": [[17, 3, 1, "", "__contains__"], [17, 3, 1, "", "__eq__"], [17, 3, 1, "", "__mul__"], [17, 3, 1, "", "__new__"], [17, 3, 1, "", "_union_find_merge"], [17, 3, 1, "", "_union_find_rep"], [17, 5, 1, "", "base"], [17, 3, 1, "", "baseswap"], [17, 5, 1, "", "basic_orbits"], [17, 5, 1, "", "basic_stabilizers"], [17, 5, 1, "", "basic_transversals"], [17, 3, 1, "", "center"], [17, 3, 1, "", "centralizer"], [17, 3, 1, "", "commutator"], [17, 3, 1, "", "contains"], [17, 3, 1, "", "coset_factor"], [17, 3, 1, "", "coset_rank"], [17, 3, 1, "", "coset_unrank"], [17, 5, 1, "", "degree"], [17, 3, 1, "", "derived_series"], [17, 3, 1, "", "derived_subgroup"], [17, 5, 1, "", "elements"], [17, 3, 1, "", "generate"], [17, 3, 1, "", "generate_dimino"], [17, 3, 1, "", "generate_schreier_sims"], [17, 5, 1, "", "generators"], [17, 5, 1, "", "is_abelian"], [17, 3, 1, "", "is_alt_sym"], [17, 5, 1, "", "is_nilpotent"], [17, 3, 1, "", "is_normal"], [17, 3, 1, "", "is_primitive"], [17, 5, 1, "", "is_solvable"], [17, 3, 1, "", "is_subgroup"], [17, 3, 1, "", "is_transitive"], [17, 5, 1, "", "is_trivial"], [17, 3, 1, "", "lower_central_series"], [17, 3, 1, "", "make_perm"], [17, 5, 1, "", "max_div"], [17, 3, 1, "", "minimal_block"], [17, 3, 1, "", "normal_closure"], [17, 3, 1, "", "orbit"], [17, 3, 1, "", "orbit_rep"], [17, 3, 1, "", "orbit_transversal"], [17, 3, 1, "", "orbits"], [17, 3, 1, "", "order"], [17, 3, 1, "", "pointwise_stabilizer"], [17, 3, 1, "", "random"], [17, 3, 1, "", "random_pr"], [17, 3, 1, "", "random_stab"], [17, 3, 1, "", "schreier_sims"], [17, 3, 1, "", "schreier_sims_incremental"], [17, 3, 1, "", "schreier_sims_random"], [17, 3, 1, "", "schreier_vector"], [17, 3, 1, "", "stabilizer"], [17, 5, 1, "", "strong_gens"], [17, 3, 1, "", "subgroup_search"], [17, 5, 1, "", "transitivity_degree"]], "diofant.combinatorics.permutations": [[18, 2, 1, "", "Cycle"], [18, 2, 1, "", "Permutation"], [18, 1, 1, "", "_af_parity"]], "diofant.combinatorics.permutations.Cycle": [[18, 3, 1, "", "list"]], "diofant.combinatorics.permutations.Permutation": [[18, 5, 1, "", "array_form"], [18, 3, 1, "", "ascents"], [18, 3, 1, "", "atoms"], [18, 5, 1, "", "cardinality"], [18, 3, 1, "", "commutator"], [18, 3, 1, "", "commutes_with"], [18, 5, 1, "", "cycle_structure"], [18, 5, 1, "", "cycles"], [18, 5, 1, "", "cyclic_form"], [18, 3, 1, "", "descents"], [18, 3, 1, "", "from_inversion_vector"], [18, 3, 1, "", "from_sequence"], [18, 5, 1, "", "full_cyclic_form"], [18, 3, 1, "", "get_adjacency_distance"], [18, 3, 1, "", "get_adjacency_matrix"], [18, 3, 1, "", "get_positional_distance"], [18, 3, 1, "", "get_precedence_distance"], [18, 3, 1, "", "get_precedence_matrix"], [18, 3, 1, "", "index"], [18, 3, 1, "", "inversion_vector"], [18, 3, 1, "", "inversions"], [18, 5, 1, "", "is_Empty"], [18, 5, 1, "", "is_Identity"], [18, 5, 1, "", "is_Singleton"], [18, 5, 1, "", "is_even"], [18, 5, 1, "", "is_odd"], [18, 3, 1, "", "josephus"], [18, 3, 1, "", "length"], [18, 3, 1, "", "list"], [18, 3, 1, "", "max"], [18, 3, 1, "", "min"], [18, 3, 1, "", "mul_inv"], [18, 3, 1, "", "next_lex"], [18, 3, 1, "", "next_nonlex"], [18, 3, 1, "", "next_trotterjohnson"], [18, 3, 1, "", "order"], [18, 3, 1, "", "parity"], [18, 3, 1, "", "random"], [18, 3, 1, "", "rank"], [18, 3, 1, "", "rank_nonlex"], [18, 3, 1, "", "rank_trotterjohnson"], [18, 3, 1, "", "rmul"], [18, 3, 1, "", "rmul_with_af"], [18, 3, 1, "", "runs"], [18, 3, 1, "", "signature"], [18, 5, 1, "", "size"], [18, 3, 1, "", "support"], [18, 3, 1, "", "transpositions"], [18, 3, 1, "", "unrank_lex"], [18, 3, 1, "", "unrank_nonlex"], [18, 3, 1, "", "unrank_trotterjohnson"]], "diofant.combinatorics.polyhedron": [[19, 2, 1, "", "Polyhedron"]], "diofant.combinatorics.polyhedron.Polyhedron": [[19, 5, 1, "", "array_form"], [19, 5, 1, "", "corners"], [19, 5, 1, "", "cyclic_form"], [19, 5, 1, "", "edges"], [19, 5, 1, "", "faces"], [19, 5, 1, "", "pgroup"], [19, 3, 1, "", "reset"], [19, 3, 1, "", "rotate"], [19, 5, 1, "", "size"], [19, 5, 1, "", "vertices"]], "diofant.combinatorics.prufer": [[20, 2, 1, "", "Prufer"]], "diofant.combinatorics.prufer.Prufer": [[20, 3, 1, "", "edges"], [20, 3, 1, "", "next"], [20, 5, 1, "", "nodes"], [20, 3, 1, "", "prev"], [20, 3, 1, "", "prufer_rank"], [20, 5, 1, "", "prufer_repr"], [20, 5, 1, "", "rank"], [20, 5, 1, "", "size"], [20, 3, 1, "", "to_prufer"], [20, 3, 1, "", "to_tree"], [20, 5, 1, "", "tree_repr"], [20, 3, 1, "", "unrank"]], "diofant.combinatorics.subsets": [[21, 2, 1, "", "Subset"], [21, 3, 1, "", "ksubsets"]], "diofant.combinatorics.subsets.Subset": [[21, 3, 1, "", "bitlist_from_subset"], [21, 5, 1, "", "cardinality"], [21, 3, 1, "", "iterate_binary"], [21, 3, 1, "", "iterate_graycode"], [21, 3, 1, "", "next_binary"], [21, 3, 1, "", "next_gray"], [21, 3, 1, "", "next_lexicographic"], [21, 3, 1, "", "prev_binary"], [21, 3, 1, "", "prev_gray"], [21, 3, 1, "", "prev_lexicographic"], [21, 5, 1, "", "rank_binary"], [21, 5, 1, "", "rank_gray"], [21, 5, 1, "", "rank_lexicographic"], [21, 5, 1, "", "size"], [21, 5, 1, "", "subset"], [21, 3, 1, "", "subset_from_bitlist"], [21, 3, 1, "", "subset_indices"], [21, 5, 1, "", "superset"], [21, 5, 1, "", "superset_size"], [21, 3, 1, "", "unrank_binary"], [21, 3, 1, "", "unrank_gray"]], "diofant.combinatorics.tensor_can": [[22, 1, 1, "", "bsgs_direct_product"], [22, 1, 1, "", "canonicalize"], [22, 1, 1, "", "double_coset_can_rep"], [22, 1, 1, "", "get_symmetric_group_sgs"]], "diofant.combinatorics.testutil": [[23, 1, 1, "", "_cmp_perm_lists"], [23, 1, 1, "", "_naive_list_centralizer"], [23, 1, 1, "", "_verify_bsgs"], [23, 1, 1, "", "_verify_centralizer"], [23, 1, 1, "", "_verify_normal_closure"]], "diofant.combinatorics.util": [[24, 1, 1, "", "_base_ordering"], [24, 1, 1, "", "_check_cycles_alt_sym"], [24, 1, 1, "", "_distribute_gens_by_base"], [24, 1, 1, "", "_handle_precomputed_bsgs"], [24, 1, 1, "", "_orbits_transversals_from_bsgs"], [24, 1, 1, "", "_remove_gens"], [24, 1, 1, "", "_strip"], [24, 1, 1, "", "_strong_gens_from_distr"]], "diofant.concrete.expr_with_intlimits": [[25, 2, 1, "", "ExprWithIntLimits"]], "diofant.concrete.expr_with_intlimits.ExprWithIntLimits": [[25, 3, 1, "", "change_index"], [25, 3, 1, "", "index"], [25, 3, 1, "", "reorder"], [25, 3, 1, "", "reorder_limit"]], "diofant.concrete.expr_with_limits": [[25, 2, 1, "", "ExprWithLimits"]], "diofant.concrete.expr_with_limits.ExprWithLimits": [[25, 3, 1, "", "as_dummy"], [25, 5, 1, "", "free_symbols"], [25, 5, 1, "", "function"], [25, 5, 1, "", "is_number"], [25, 5, 1, "", "limits"], [25, 5, 1, "", "variables"]], "diofant.concrete.gosper": [[25, 1, 1, "", "gosper_normal"], [25, 1, 1, "", "gosper_sum"], [25, 1, 1, "", "gosper_term"]], "diofant.concrete.products": [[25, 2, 1, "", "Product"], [25, 1, 1, "", "product"]], "diofant.concrete.products.Product": [[25, 3, 1, "", "reverse_order"]], "diofant.concrete.summations": [[25, 2, 1, "", "Sum"], [25, 1, 1, "", "summation"]], "diofant.concrete.summations.Sum": [[25, 3, 1, "", "euler_maclaurin"], [25, 3, 1, "", "findrecur"], [25, 3, 1, "", "reverse_order"]], "diofant.config": [[26, 1, 1, "", "setup"]], "diofant.core": [[27, 0, 0, "-", "add"], [27, 0, 0, "-", "assumptions"], [27, 0, 0, "-", "basic"], [27, 0, 0, "-", "cache"], [27, 0, 0, "-", "compatibility"], [27, 0, 0, "-", "containers"], [27, 0, 0, "-", "core"], [27, 0, 0, "-", "evalf"], [27, 0, 0, "-", "evaluate"], [27, 0, 0, "-", "expr"], [27, 0, 0, "-", "exprtools"], [27, 0, 0, "-", "function"], [27, 0, 0, "-", "mod"], [27, 0, 0, "-", "mul"], [27, 0, 0, "-", "multidimensional"], [27, 0, 0, "-", "numbers"], [27, 0, 0, "-", "power"], [27, 0, 0, "-", "relational"], [27, 0, 0, "-", "singleton"], [27, 0, 0, "-", "symbol"], [27, 0, 0, "-", "sympify"]], "diofant.core.add": [[27, 2, 1, "", "Add"]], "diofant.core.add.Add": [[27, 3, 1, "", "as_coeff_Add"], [27, 3, 1, "", "as_coeff_add"], [27, 3, 1, "", "as_coefficients_dict"], [27, 3, 1, "", "as_content_primitive"], [27, 3, 1, "", "as_real_imag"], [27, 3, 1, "", "as_two_terms"], [27, 3, 1, "", "class_key"], [27, 3, 1, "", "flatten"], [27, 3, 1, "", "getO"], [27, 3, 1, "", "primitive"], [27, 3, 1, "", "removeO"]], "diofant.core.assumptions": [[27, 2, 1, "", "ManagedProperties"], [27, 2, 1, "", "StdFactKB"], [27, 1, 1, "", "as_property"], [27, 1, 1, "", "check_assumptions"], [27, 1, 1, "", "make_property"]], "diofant.core.basic": [[27, 2, 1, "", "Atom"], [27, 2, 1, "", "Basic"], [27, 2, 1, "", "preorder_traversal"]], "diofant.core.basic.Atom": [[27, 3, 1, "", "class_key"], [27, 3, 1, "", "doit"], [27, 3, 1, "", "sort_key"]], "diofant.core.basic.Basic": [[27, 5, 1, "", "args"], [27, 3, 1, "", "atoms"], [27, 3, 1, "", "class_key"], [27, 3, 1, "", "copy"], [27, 3, 1, "", "count"], [27, 3, 1, "", "count_ops"], [27, 3, 1, "", "doit"], [27, 3, 1, "", "find"], [27, 5, 1, "", "free_symbols"], [27, 5, 1, "", "func"], [27, 3, 1, "", "has"], [27, 5, 1, "", "is_evaluated"], [27, 3, 1, "", "match"], [27, 3, 1, "", "replace"], [27, 3, 1, "", "rewrite"], [27, 3, 1, "", "sort_key"], [27, 3, 1, "", "subs"], [27, 3, 1, "", "xreplace"]], "diofant.core.basic.preorder_traversal": [[27, 3, 1, "", "skip"]], "diofant.core.cache": [[27, 1, 1, "", "cacheit"]], "diofant.core.compatibility": [[27, 1, 1, "", "as_int"]], "diofant.core.containers": [[27, 2, 1, "", "Dict"], [27, 2, 1, "", "Tuple"]], "diofant.core.containers.Dict": [[27, 5, 1, "", "args"], [27, 3, 1, "", "get"], [27, 3, 1, "", "items"], [27, 3, 1, "", "keys"], [27, 3, 1, "", "values"]], "diofant.core.containers.Tuple": [[27, 3, 1, "", "index"], [27, 3, 1, "", "tuple_count"]], "diofant.core.evalf": [[27, 2, 1, "", "EvalfMixin"], [27, 1, 1, "", "N"], [27, 2, 1, "", "PrecisionExhausted"]], "diofant.core.evalf.EvalfMixin": [[27, 3, 1, "", "evalf"]], "diofant.core.evaluate": [[27, 1, 1, "", "evaluate"]], "diofant.core.expr": [[27, 2, 1, "", "AtomicExpr"], [27, 2, 1, "", "Expr"]], "diofant.core.expr.Expr": [[27, 3, 1, "", "adjoint"], [27, 3, 1, "", "apart"], [27, 3, 1, "", "args_cnc"], [27, 3, 1, "", "as_base_exp"], [27, 3, 1, "", "as_coeff_Add"], [27, 3, 1, "", "as_coeff_Mul"], [27, 3, 1, "", "as_coeff_add"], [27, 3, 1, "", "as_coeff_exponent"], [27, 3, 1, "", "as_coeff_mul"], [27, 3, 1, "", "as_coefficient"], [27, 3, 1, "", "as_coefficients_dict"], [27, 3, 1, "", "as_content_primitive"], [27, 3, 1, "", "as_expr"], [27, 3, 1, "", "as_independent"], [27, 3, 1, "", "as_leading_term"], [27, 3, 1, "", "as_numer_denom"], [27, 3, 1, "", "as_ordered_factors"], [27, 3, 1, "", "as_ordered_terms"], [27, 3, 1, "", "as_poly"], [27, 3, 1, "", "as_powers_dict"], [27, 3, 1, "", "as_real_imag"], [27, 3, 1, "", "as_terms"], [27, 3, 1, "", "aseries"], [27, 3, 1, "", "cancel"], [27, 5, 1, "", "canonical_variables"], [27, 3, 1, "", "coeff"], [27, 3, 1, "", "collect"], [27, 3, 1, "", "combsimp"], [27, 3, 1, "", "compute_leading_term"], [27, 3, 1, "", "conjugate"], [27, 3, 1, "", "could_extract_minus_sign"], [27, 3, 1, "", "count_ops"], [27, 3, 1, "", "diff"], [27, 3, 1, "", "equals"], [27, 3, 1, "", "expand"], [27, 3, 1, "", "extract_additively"], [27, 3, 1, "", "extract_branch_factor"], [27, 3, 1, "", "extract_multiplicatively"], [27, 3, 1, "", "factor"], [27, 3, 1, "", "getO"], [27, 3, 1, "", "getn"], [27, 3, 1, "", "integrate"], [27, 3, 1, "", "invert"], [27, 5, 1, "", "is_algebraic"], [27, 3, 1, "", "is_algebraic_expr"], [27, 5, 1, "", "is_commutative"], [27, 5, 1, "", "is_comparable"], [27, 5, 1, "", "is_complex"], [27, 5, 1, "", "is_composite"], [27, 3, 1, "", "is_constant"], [27, 5, 1, "", "is_even"], [27, 5, 1, "", "is_extended_real"], [27, 5, 1, "", "is_finite"], [27, 3, 1, "", "is_hypergeometric"], [27, 5, 1, "", "is_imaginary"], [27, 5, 1, "", "is_infinite"], [27, 5, 1, "", "is_integer"], [27, 5, 1, "", "is_irrational"], [27, 5, 1, "", "is_negative"], [27, 5, 1, "", "is_noninteger"], [27, 5, 1, "", "is_nonnegative"], [27, 5, 1, "", "is_nonpositive"], [27, 5, 1, "", "is_nonzero"], [27, 5, 1, "", "is_number"], [27, 5, 1, "", "is_odd"], [27, 5, 1, "", "is_polar"], [27, 3, 1, "", "is_polynomial"], [27, 5, 1, "", "is_positive"], [27, 5, 1, "", "is_prime"], [27, 5, 1, "", "is_rational"], [27, 3, 1, "", "is_rational_function"], [27, 5, 1, "", "is_real"], [27, 5, 1, "", "is_transcendental"], [27, 5, 1, "", "is_zero"], [27, 3, 1, "", "limit"], [27, 3, 1, "", "normal"], [27, 3, 1, "", "nseries"], [27, 3, 1, "", "nsimplify"], [27, 3, 1, "", "powsimp"], [27, 3, 1, "", "primitive"], [27, 3, 1, "", "radsimp"], [27, 3, 1, "", "ratsimp"], [27, 3, 1, "", "removeO"], [27, 3, 1, "", "round"], [27, 3, 1, "", "series"], [27, 3, 1, "", "simplify"], [27, 3, 1, "", "sort_key"], [27, 3, 1, "", "taylor_term"], [27, 3, 1, "", "together"], [27, 3, 1, "", "transpose"], [27, 3, 1, "", "trigsimp"]], "diofant.core.exprtools": [[27, 1, 1, "", "factor_terms"], [27, 1, 1, "", "gcd_terms"]], "diofant.core.function": [[27, 2, 1, "", "Derivative"], [27, 2, 1, "", "Function"], [27, 2, 1, "", "FunctionClass"], [27, 2, 1, "", "Lambda"], [27, 2, 1, "", "PoleError"], [27, 2, 1, "", "Subs"], [27, 2, 1, "", "WildFunction"], [27, 1, 1, "", "count_ops"], [27, 1, 1, "", "diff"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "expand_complex"], [27, 1, 1, "", "expand_func"], [27, 1, 1, "", "expand_log"], [27, 1, 1, "", "expand_mul"], [27, 1, 1, "", "expand_multinomial"], [27, 1, 1, "", "expand_power_base"], [27, 1, 1, "", "expand_power_exp"], [27, 1, 1, "", "expand_trig"], [27, 1, 1, "", "nfloat"]], "diofant.core.function.Derivative": [[27, 3, 1, "", "doit"], [27, 3, 1, "", "doit_numerically"], [27, 5, 1, "", "expr"], [27, 5, 1, "", "free_symbols"], [27, 5, 1, "", "variables"]], "diofant.core.function.Function": [[27, 3, 1, "", "class_key"], [27, 3, 1, "", "fdiff"]], "diofant.core.function.FunctionClass": [[27, 5, 1, "", "nargs"]], "diofant.core.function.Lambda": [[27, 5, 1, "", "expr"], [27, 5, 1, "", "free_symbols"], [27, 5, 1, "", "variables"]], "diofant.core.function.Subs": [[27, 3, 1, "", "doit"], [27, 3, 1, "", "evalf"], [27, 5, 1, "", "expr"], [27, 5, 1, "", "free_symbols"], [27, 5, 1, "", "point"], [27, 5, 1, "", "variables"]], "diofant.core.mod": [[27, 2, 1, "", "Mod"]], "diofant.core.mul": [[27, 2, 1, "", "Mul"]], "diofant.core.mul.Mul": [[27, 3, 1, "", "as_base_exp"], [27, 3, 1, "", "as_coeff_Mul"], [27, 3, 1, "", "as_coeff_mul"], [27, 3, 1, "", "as_content_primitive"], [27, 3, 1, "", "as_ordered_factors"], [27, 3, 1, "", "as_powers_dict"], [27, 3, 1, "", "as_real_imag"], [27, 3, 1, "", "as_two_terms"], [27, 3, 1, "", "class_key"], [27, 3, 1, "", "flatten"]], "diofant.core.multidimensional": [[27, 2, 1, "", "vectorize"]], "diofant.core.numbers": [[27, 2, 1, "", "Catalan"], [27, 2, 1, "", "ComplexInfinity"], [27, 2, 1, "", "EulerGamma"], [27, 2, 1, "", "Exp1"], [27, 2, 1, "", "Float"], [27, 2, 1, "", "GoldenRatio"], [27, 2, 1, "", "Half"], [27, 2, 1, "", "ImaginaryUnit"], [27, 2, 1, "", "Infinity"], [27, 2, 1, "", "Integer"], [27, 2, 1, "", "NaN"], [27, 2, 1, "", "NegativeInfinity"], [27, 2, 1, "", "NegativeOne"], [27, 2, 1, "", "Number"], [27, 2, 1, "", "NumberSymbol"], [27, 2, 1, "", "One"], [27, 2, 1, "", "Pi"], [27, 2, 1, "", "Rational"], [27, 2, 1, "", "Zero"], [27, 1, 1, "", "integer_digits"], [27, 1, 1, "", "mod_inverse"]], "diofant.core.numbers.Float": [[27, 3, 1, "", "ceiling"], [27, 3, 1, "", "epsilon_eq"], [27, 3, 1, "", "floor"]], "diofant.core.numbers.Integer": [[27, 5, 1, "", "is_composite"], [27, 5, 1, "", "is_even"], [27, 5, 1, "", "is_imaginary"], [27, 5, 1, "", "is_nonzero"], [27, 5, 1, "", "is_odd"], [27, 5, 1, "", "is_prime"], [27, 5, 1, "", "is_zero"]], "diofant.core.numbers.Number": [[27, 3, 1, "", "as_coeff_Add"], [27, 3, 1, "", "as_coeff_Mul"], [27, 3, 1, "", "as_coeff_add"], [27, 3, 1, "", "as_coeff_mul"], [27, 3, 1, "", "class_key"], [27, 3, 1, "", "cofactors"], [27, 3, 1, "", "gcd"], [27, 3, 1, "", "lcm"], [27, 3, 1, "", "sort_key"]], "diofant.core.numbers.NumberSymbol": [[27, 3, 1, "", "approximation_interval"]], "diofant.core.numbers.Rational": [[27, 3, 1, "", "as_content_primitive"], [27, 3, 1, "", "factors"], [27, 3, 1, "", "gcd"], [27, 3, 1, "", "lcm"], [27, 3, 1, "", "limit_denominator"]], "diofant.core.power": [[27, 2, 1, "", "Pow"], [27, 1, 1, "", "exp"], [27, 1, 1, "", "integer_nthroot"], [27, 2, 1, "", "log"]], "diofant.core.power.Pow": [[27, 3, 1, "", "as_base_exp"], [27, 3, 1, "", "as_content_primitive"], [27, 3, 1, "", "as_real_imag"], [27, 5, 1, "", "base"], [27, 3, 1, "", "class_key"], [27, 5, 1, "", "exp"]], "diofant.core.power.log": [[27, 3, 1, "", "as_real_imag"], [27, 3, 1, "", "fdiff"], [27, 3, 1, "", "inverse"]], "diofant.core.relational": [[27, 4, 1, "", "Eq"], [27, 2, 1, "", "Equality"], [27, 4, 1, "", "Ge"], [27, 2, 1, "", "GreaterThan"], [27, 4, 1, "", "Gt"], [27, 4, 1, "", "Le"], [27, 2, 1, "", "LessThan"], [27, 4, 1, "", "Lt"], [27, 4, 1, "", "Ne"], [27, 4, 1, "", "Rel"], [27, 2, 1, "", "Relational"], [27, 2, 1, "", "StrictGreaterThan"], [27, 2, 1, "", "StrictLessThan"], [27, 2, 1, "", "Unequality"]], "diofant.core.relational.Relational": [[27, 3, 1, "", "as_set"], [27, 5, 1, "", "canonical"], [27, 3, 1, "", "equals"], [27, 5, 1, "", "lhs"], [27, 5, 1, "", "reversed"], [27, 5, 1, "", "rhs"]], "diofant.core.singleton": [[27, 6, 1, "", "S"], [27, 2, 1, "", "Singleton"], [27, 2, 1, "", "SingletonRegistry"], [27, 2, 1, "", "SingletonWithManagedProperties"]], "diofant.core.symbol": [[27, 2, 1, "", "Dummy"], [27, 2, 1, "", "Symbol"], [27, 2, 1, "", "Wild"], [27, 1, 1, "", "symbols"], [27, 1, 1, "", "var"]], "diofant.core.symbol.Dummy": [[27, 3, 1, "", "class_key"], [27, 3, 1, "", "sort_key"]], "diofant.core.sympify": [[27, 1, 1, "", "sympify"]], "diofant.domains": [[28, 2, 1, "", "AlgebraicField"], [28, 2, 1, "", "ComplexAlgebraicField"], [28, 2, 1, "", "ComplexField"], [28, 2, 1, "", "ExpressionDomain"], [28, 2, 1, "", "FiniteField"], [28, 2, 1, "", "IntegerModRing"], [28, 2, 1, "", "IntegerRing"], [28, 2, 1, "", "RationalField"], [28, 2, 1, "", "RealAlgebraicField"], [28, 2, 1, "", "RealField"]], "diofant.domains.AlgebraicField": [[28, 3, 1, "", "algebraic_field"]], "diofant.domains.ComplexField": [[28, 3, 1, "", "almosteq"]], "diofant.domains.ExpressionDomain": [[28, 2, 1, "", "Expression"], [28, 4, 1, "", "dtype"]], "diofant.domains.IntegerRing": [[28, 5, 1, "", "field"], [28, 3, 1, "", "finite_field"], [28, 3, 1, "", "finite_ring"]], "diofant.domains.RationalField": [[28, 3, 1, "", "algebraic_field"]], "diofant.domains.RealField": [[28, 3, 1, "", "almosteq"], [28, 3, 1, "", "to_rational"]], "diofant.domains.characteristiczero": [[28, 2, 1, "", "CharacteristicZero"]], "diofant.domains.compositedomain": [[28, 2, 1, "", "CompositeDomain"]], "diofant.domains.compositedomain.CompositeDomain": [[28, 3, 1, "", "inject"]], "diofant.domains.domain": [[28, 2, 1, "", "Domain"]], "diofant.domains.domain.Domain": [[28, 3, 1, "", "convert"], [28, 3, 1, "", "convert_from"], [28, 3, 1, "", "frac_field"], [28, 3, 1, "", "from_expr"], [28, 3, 1, "", "get_exact"], [28, 3, 1, "", "poly_ring"], [28, 3, 1, "", "to_expr"], [28, 3, 1, "", "unify"]], "diofant.domains.field": [[28, 2, 1, "", "Field"]], "diofant.domains.field.Field": [[28, 3, 1, "", "div"], [28, 3, 1, "", "exquo"], [28, 5, 1, "", "field"], [28, 3, 1, "", "gcd"], [28, 3, 1, "", "quo"], [28, 3, 1, "", "rem"]], "diofant.domains.finitefield": [[28, 2, 1, "", "GMPYFiniteField"], [28, 2, 1, "", "GaloisFieldElement"], [28, 2, 1, "", "ModularInteger"], [28, 2, 1, "", "PythonFiniteField"]], "diofant.domains.finitefield.ModularInteger": [[28, 5, 1, "", "is_primitive"]], "diofant.domains.integerring": [[28, 2, 1, "", "GMPYIntegerRing"], [28, 2, 1, "", "PythonIntegerRing"]], "diofant.domains.rationalfield": [[28, 2, 1, "", "GMPYRationalField"], [28, 2, 1, "", "PythonRationalField"]], "diofant.domains.ring": [[28, 2, 1, "", "CommutativeRing"]], "diofant.domains.ring.CommutativeRing": [[28, 5, 1, "", "characteristic"], [28, 3, 1, "", "cofactors"], [28, 3, 1, "", "div"], [28, 3, 1, "", "exquo"], [28, 3, 1, "", "half_gcdex"], [28, 3, 1, "", "invert"], [28, 3, 1, "", "is_normal"], [28, 3, 1, "", "lcm"], [28, 3, 1, "", "quo"], [28, 3, 1, "", "rem"], [28, 5, 1, "", "ring"]], "diofant.domains.simpledomain": [[28, 2, 1, "", "SimpleDomain"]], "diofant.domains.simpledomain.SimpleDomain": [[28, 3, 1, "", "inject"]], "diofant.functions.combinatorial.factorials": [[29, 2, 1, "", "FallingFactorial"], [29, 2, 1, "", "RisingFactorial"], [29, 2, 1, "", "binomial"], [29, 2, 1, "", "factorial"], [29, 2, 1, "", "factorial2"], [29, 2, 1, "", "subfactorial"]], "diofant.functions.combinatorial.numbers": [[29, 2, 1, "", "bell"], [29, 2, 1, "", "bernoulli"], [29, 2, 1, "", "catalan"], [29, 2, 1, "", "euler"], [29, 2, 1, "", "fibonacci"], [29, 2, 1, "", "harmonic"], [29, 2, 1, "", "lucas"], [29, 1, 1, "", "stirling"]], "diofant.functions.elementary.complexes": [[30, 2, 1, "", "Abs"], [30, 2, 1, "", "adjoint"], [30, 2, 1, "", "arg"], [30, 2, 1, "", "conjugate"], [30, 2, 1, "", "im"], [30, 2, 1, "", "periodic_argument"], [30, 2, 1, "", "polar_lift"], [30, 2, 1, "", "principal_branch"], [30, 2, 1, "", "re"], [30, 2, 1, "", "sign"], [30, 2, 1, "", "transpose"]], "diofant.functions.elementary.complexes.Abs": [[30, 3, 1, "", "fdiff"]], "diofant.functions.elementary.complexes.im": [[30, 3, 1, "", "as_real_imag"]], "diofant.functions.elementary.complexes.re": [[30, 3, 1, "", "as_real_imag"]], "diofant.functions.elementary.exponential": [[30, 2, 1, "", "LambertW"], [30, 2, 1, "", "exp_polar"]], "diofant.functions.elementary.exponential.LambertW": [[30, 3, 1, "", "fdiff"]], "diofant.functions.elementary.exponential.exp_polar": [[30, 5, 1, "", "exp"]], "diofant.functions.elementary.hyperbolic": [[30, 2, 1, "", "HyperbolicFunction"], [30, 2, 1, "", "acosh"], [30, 2, 1, "", "acoth"], [30, 2, 1, "", "asinh"], [30, 2, 1, "", "atanh"], [30, 2, 1, "", "cosh"], [30, 2, 1, "", "coth"], [30, 2, 1, "", "csch"], [30, 2, 1, "", "sech"], [30, 2, 1, "", "sinh"], [30, 2, 1, "", "tanh"]], "diofant.functions.elementary.hyperbolic.acosh": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.hyperbolic.acoth": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.hyperbolic.asinh": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.hyperbolic.atanh": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.hyperbolic.coth": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.hyperbolic.csch": [[30, 3, 1, "", "fdiff"], [30, 3, 1, "", "taylor_term"]], "diofant.functions.elementary.hyperbolic.sinh": [[30, 3, 1, "", "as_real_imag"], [30, 3, 1, "", "fdiff"], [30, 3, 1, "", "inverse"], [30, 3, 1, "", "taylor_term"]], "diofant.functions.elementary.hyperbolic.tanh": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.integers": [[30, 2, 1, "", "RoundFunction"], [30, 2, 1, "", "ceiling"], [30, 2, 1, "", "floor"]], "diofant.functions.elementary.miscellaneous": [[30, 2, 1, "", "IdentityFunction"], [30, 2, 1, "", "Max"], [30, 2, 1, "", "Min"], [30, 1, 1, "", "real_root"], [30, 1, 1, "", "root"], [30, 1, 1, "", "sqrt"]], "diofant.functions.elementary.piecewise": [[30, 2, 1, "", "ExprCondPair"], [30, 2, 1, "", "Piecewise"], [30, 1, 1, "", "piecewise_fold"]], "diofant.functions.elementary.piecewise.ExprCondPair": [[30, 5, 1, "", "cond"], [30, 5, 1, "", "expr"]], "diofant.functions.elementary.piecewise.Piecewise": [[30, 3, 1, "", "doit"]], "diofant.functions.elementary.trigonometric": [[30, 2, 1, "", "acos"], [30, 2, 1, "", "acot"], [30, 2, 1, "", "acsc"], [30, 2, 1, "", "asec"], [30, 2, 1, "", "asin"], [30, 2, 1, "", "atan"], [30, 2, 1, "", "atan2"], [30, 2, 1, "", "cos"], [30, 2, 1, "", "cot"], [30, 2, 1, "", "csc"], [30, 2, 1, "", "sec"], [30, 2, 1, "", "sin"], [30, 2, 1, "", "tan"]], "diofant.functions.elementary.trigonometric.acos": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.trigonometric.acot": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.trigonometric.acsc": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.trigonometric.asec": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.trigonometric.asin": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.trigonometric.atan": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.trigonometric.cot": [[30, 3, 1, "", "inverse"]], "diofant.functions.elementary.trigonometric.tan": [[30, 3, 1, "", "inverse"]], "diofant.functions.special": [[32, 0, 0, "-", "bessel"], [32, 0, 0, "-", "beta_functions"], [32, 0, 0, "-", "elliptic_integrals"], [32, 0, 0, "-", "error_functions"], [32, 0, 0, "-", "gamma_functions"], [32, 0, 0, "-", "polynomials"], [32, 0, 0, "-", "zeta_functions"]], "diofant.functions.special.bessel": [[32, 2, 1, "", "AiryBase"], [32, 2, 1, "", "BesselBase"], [32, 2, 1, "", "airyai"], [32, 2, 1, "", "airyaiprime"], [32, 2, 1, "", "airybi"], [32, 2, 1, "", "airybiprime"], [32, 2, 1, "", "besseli"], [32, 2, 1, "", "besselj"], [32, 2, 1, "", "besselk"], [32, 2, 1, "", "bessely"], [32, 2, 1, "", "hankel1"], [32, 2, 1, "", "hankel2"], [32, 2, 1, "", "jn"], [32, 1, 1, "", "jn_zeros"], [32, 2, 1, "", "yn"]], "diofant.functions.special.bessel.BesselBase": [[32, 5, 1, "", "argument"], [32, 5, 1, "", "order"]], "diofant.functions.special.beta_functions": [[32, 2, 1, "", "beta"]], "diofant.functions.special.bsplines": [[32, 1, 1, "", "bspline_basis"], [32, 1, 1, "", "bspline_basis_set"]], "diofant.functions.special.delta_functions": [[32, 2, 1, "", "DiracDelta"], [32, 2, 1, "", "Heaviside"]], "diofant.functions.special.delta_functions.DiracDelta": [[32, 3, 1, "", "is_simple"], [32, 3, 1, "", "simplify"]], "diofant.functions.special.elliptic_integrals": [[32, 2, 1, "", "elliptic_e"], [32, 2, 1, "", "elliptic_f"], [32, 2, 1, "", "elliptic_k"], [32, 2, 1, "", "elliptic_pi"]], "diofant.functions.special.error_functions": [[32, 2, 1, "", "Chi"], [32, 2, 1, "", "Ci"], [32, 1, 1, "", "E1"], [32, 2, 1, "", "Ei"], [32, 2, 1, "", "FresnelIntegral"], [32, 2, 1, "", "Li"], [32, 2, 1, "", "Shi"], [32, 2, 1, "", "Si"], [32, 2, 1, "", "erf"], [32, 2, 1, "", "erf2"], [32, 2, 1, "", "erf2inv"], [32, 2, 1, "", "erfc"], [32, 2, 1, "", "erfcinv"], [32, 2, 1, "", "erfi"], [32, 2, 1, "", "erfinv"], [32, 2, 1, "", "expint"], [32, 2, 1, "", "fresnelc"], [32, 2, 1, "", "fresnels"], [32, 2, 1, "", "li"]], "diofant.functions.special.gamma_functions": [[32, 1, 1, "", "digamma"], [32, 2, 1, "", "gamma"], [32, 2, 1, "", "loggamma"], [32, 2, 1, "", "lowergamma"], [32, 2, 1, "", "polygamma"], [32, 1, 1, "", "trigamma"], [32, 2, 1, "", "uppergamma"]], "diofant.functions.special.hyper": [[32, 2, 1, "", "hyper"], [32, 2, 1, "", "meijerg"]], "diofant.functions.special.hyper.hyper": [[32, 5, 1, "", "ap"], [32, 5, 1, "", "argument"], [32, 5, 1, "", "bq"], [32, 5, 1, "", "convergence_statement"], [32, 5, 1, "", "eta"], [32, 5, 1, "", "radius_of_convergence"]], "diofant.functions.special.hyper.meijerg": [[32, 5, 1, "", "an"], [32, 5, 1, "", "aother"], [32, 5, 1, "", "ap"], [32, 5, 1, "", "argument"], [32, 5, 1, "", "bm"], [32, 5, 1, "", "bother"], [32, 5, 1, "", "bq"], [32, 5, 1, "", "delta"], [32, 3, 1, "", "get_period"], [32, 3, 1, "", "integrand"], [32, 5, 1, "", "nu"]], "diofant.functions.special.polynomials": [[32, 2, 1, "", "assoc_laguerre"], [32, 2, 1, "", "assoc_legendre"], [32, 2, 1, "", "chebyshevt"], [32, 2, 1, "", "chebyshevt_root"], [32, 2, 1, "", "chebyshevu"], [32, 2, 1, "", "chebyshevu_root"], [32, 2, 1, "", "gegenbauer"], [32, 2, 1, "", "hermite"], [32, 2, 1, "", "jacobi"], [32, 1, 1, "", "jacobi_normalized"], [32, 2, 1, "", "laguerre"], [32, 2, 1, "", "legendre"]], "diofant.functions.special.spherical_harmonics": [[32, 2, 1, "", "Ynm"], [32, 1, 1, "", "Ynm_c"], [32, 2, 1, "", "Znm"]], "diofant.functions.special.tensor_functions": [[32, 1, 1, "", "Eijk"], [32, 2, 1, "", "KroneckerDelta"], [32, 2, 1, "", "LeviCivita"], [32, 1, 1, "", "eval_levicivita"]], "diofant.functions.special.tensor_functions.KroneckerDelta": [[32, 3, 1, "", "eval"], [32, 5, 1, "", "indices_contain_equal_information"], [32, 5, 1, "", "is_above_fermi"], [32, 5, 1, "", "is_below_fermi"], [32, 5, 1, "", "is_only_above_fermi"], [32, 5, 1, "", "is_only_below_fermi"], [32, 5, 1, "", "killable_index"], [32, 5, 1, "", "preferred_index"]], "diofant.functions.special.zeta_functions": [[32, 2, 1, "", "dirichlet_eta"], [32, 2, 1, "", "lerchphi"], [32, 2, 1, "", "polylog"], [32, 2, 1, "", "zeta"]], "diofant.integrals": [[6, 0, 0, "-", "meijerint_doc"], [34, 0, 0, "-", "quadrature"], [34, 0, 0, "-", "transforms"]], "diofant.integrals.deltafunctions": [[34, 1, 1, "", "deltaintegrate"]], "diofant.integrals.heurisch": [[34, 1, 1, "", "components"], [34, 1, 1, "", "heurisch"], [34, 1, 1, "", "heurisch_wrapper"]], "diofant.integrals.integrals": [[34, 2, 1, "", "Integral"], [34, 1, 1, "", "integrate"]], "diofant.integrals.integrals.Integral": [[34, 3, 1, "", "as_sum"], [34, 3, 1, "", "doit"], [34, 5, 1, "", "free_symbols"], [34, 6, 1, "", "is_commutative"], [34, 3, 1, "", "transform"]], "diofant.integrals.quadrature": [[34, 1, 1, "", "gauss_chebyshev_t"], [34, 1, 1, "", "gauss_chebyshev_u"], [34, 1, 1, "", "gauss_gen_laguerre"], [34, 1, 1, "", "gauss_hermite"], [34, 1, 1, "", "gauss_jacobi"], [34, 1, 1, "", "gauss_laguerre"], [34, 1, 1, "", "gauss_legendre"]], "diofant.integrals.rationaltools": [[34, 1, 1, "", "ratint"], [34, 1, 1, "", "ratint_logpart"], [34, 1, 1, "", "ratint_ratpart"]], "diofant.integrals.transforms": [[34, 2, 1, "", "CosineTransform"], [34, 2, 1, "", "FourierTransform"], [34, 2, 1, "", "HankelTransform"], [34, 2, 1, "", "IntegralTransform"], [34, 2, 1, "", "InverseCosineTransform"], [34, 2, 1, "", "InverseFourierTransform"], [34, 2, 1, "", "InverseHankelTransform"], [34, 2, 1, "", "InverseLaplaceTransform"], [34, 2, 1, "", "InverseMellinTransform"], [34, 2, 1, "", "InverseSineTransform"], [34, 2, 1, "", "LaplaceTransform"], [34, 2, 1, "", "MellinTransform"], [34, 2, 1, "", "SineTransform"], [34, 1, 1, "", "cosine_transform"], [34, 1, 1, "", "fourier_transform"], [34, 1, 1, "", "hankel_transform"], [34, 1, 1, "", "inverse_cosine_transform"], [34, 1, 1, "", "inverse_fourier_transform"], [34, 1, 1, "", "inverse_hankel_transform"], [34, 1, 1, "", "inverse_laplace_transform"], [34, 1, 1, "", "inverse_mellin_transform"], [34, 1, 1, "", "inverse_sine_transform"], [34, 1, 1, "", "laplace_transform"], [34, 1, 1, "", "mellin_transform"], [34, 1, 1, "", "sine_transform"]], "diofant.integrals.transforms.IntegralTransform": [[34, 3, 1, "", "doit"], [34, 5, 1, "", "free_symbols"], [34, 5, 1, "", "function"], [34, 5, 1, "", "function_variable"], [34, 5, 1, "", "transform_variable"]], "diofant.integrals.trigonometry": [[34, 1, 1, "", "trigintegrate"]], "diofant.interactive": [[35, 0, 0, "-", "printing"], [35, 0, 0, "-", "session"]], "diofant.interactive.printing": [[35, 1, 1, "", "init_printing"]], "diofant.interactive.session": [[35, 2, 1, "", "AutomaticSymbols"], [35, 2, 1, "", "FloatRationalizer"], [35, 2, 1, "", "IntegerDivisionWrapper"], [35, 1, 1, "", "unicode_identifiers"], [35, 1, 1, "", "wrap_float_literals"]], "diofant.logic.boolalg": [[36, 2, 1, "", "And"], [36, 2, 1, "", "BooleanFalse"], [36, 2, 1, "", "BooleanTrue"], [36, 2, 1, "", "Equivalent"], [36, 2, 1, "", "ITE"], [36, 2, 1, "", "Implies"], [36, 2, 1, "", "Nand"], [36, 2, 1, "", "Nor"], [36, 2, 1, "", "Not"], [36, 2, 1, "", "Or"], [36, 2, 1, "", "Xor"], [36, 1, 1, "", "is_cnf"], [36, 1, 1, "", "is_dnf"], [36, 1, 1, "", "is_nnf"], [36, 1, 1, "", "simplify_logic"], [36, 1, 1, "", "to_cnf"], [36, 1, 1, "", "to_dnf"], [36, 1, 1, "", "to_nnf"]], "diofant.logic.inference": [[36, 1, 1, "", "satisfiable"]], "diofant.matrices": [[40, 2, 1, "", "Matrix"], [37, 0, 0, "-", "dense"], [38, 0, 0, "-", "expressions"], [39, 0, 0, "-", "immutable"], [41, 0, 0, "-", "matrices"], [42, 0, 0, "-", "sparse"]], "diofant.matrices.dense": [[37, 2, 1, "", "DenseMatrix"], [41, 1, 1, "", "GramSchmidt"], [37, 2, 1, "", "MutableDenseMatrix"], [37, 4, 1, "", "MutableMatrix"], [41, 1, 1, "", "casoratian"], [41, 1, 1, "", "diag"], [41, 1, 1, "", "eye"], [41, 1, 1, "", "hessian"], [41, 1, 1, "", "jordan_cell"], [41, 1, 1, "", "list2numpy"], [41, 1, 1, "", "matrix2numpy"], [41, 1, 1, "", "matrix_multiply_elementwise"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "randMatrix"], [41, 1, 1, "", "rot_axis1"], [41, 1, 1, "", "rot_axis2"], [41, 1, 1, "", "rot_axis3"], [41, 1, 1, "", "wronskian"], [41, 1, 1, "", "zeros"]], "diofant.matrices.dense.DenseMatrix": [[37, 3, 1, "", "__getitem__"], [37, 3, 1, "", "__mul__"], [37, 3, 1, "", "applyfunc"], [37, 3, 1, "", "as_immutable"], [37, 3, 1, "", "as_mutable"], [37, 3, 1, "", "equals"], [37, 3, 1, "", "eye"], [37, 3, 1, "", "reshape"], [37, 3, 1, "", "tolist"], [37, 3, 1, "", "zeros"]], "diofant.matrices.dense.MutableDenseMatrix": [[37, 3, 1, "", "col_op"], [37, 3, 1, "", "col_swap"], [37, 3, 1, "", "copyin_list"], [37, 3, 1, "", "copyin_matrix"], [37, 3, 1, "", "fill"], [37, 3, 1, "", "row_op"], [37, 3, 1, "", "row_swap"], [37, 3, 1, "", "simplify"], [37, 3, 1, "", "zip_row_op"]], "diofant.matrices.expressions": [[38, 2, 1, "", "FunctionMatrix"], [38, 2, 1, "", "Identity"], [38, 2, 1, "", "Inverse"], [38, 2, 1, "", "MatAdd"], [38, 2, 1, "", "MatMul"], [38, 2, 1, "", "MatPow"], [38, 2, 1, "", "MatrixExpr"], [38, 2, 1, "", "MatrixSymbol"], [38, 2, 1, "", "Trace"], [38, 2, 1, "", "Transpose"], [38, 2, 1, "", "ZeroMatrix"], [38, 0, 0, "-", "blockmatrix"]], "diofant.matrices.expressions.MatrixExpr": [[38, 5, 1, "", "T"], [38, 3, 1, "", "as_explicit"], [38, 3, 1, "", "as_mutable"], [38, 3, 1, "", "equals"]], "diofant.matrices.expressions.blockmatrix": [[38, 2, 1, "", "BlockDiagMatrix"], [38, 2, 1, "", "BlockMatrix"], [38, 1, 1, "", "block_collapse"]], "diofant.matrices.expressions.blockmatrix.BlockMatrix": [[38, 3, 1, "", "transpose"]], "diofant.matrices.immutable": [[39, 2, 1, "", "ImmutableMatrix"], [42, 2, 1, "", "ImmutableSparseMatrix"]], "diofant.matrices.immutable.ImmutableMatrix": [[39, 5, 1, "", "C"], [39, 3, 1, "", "adjoint"], [39, 3, 1, "", "as_mutable"], [39, 3, 1, "", "conjugate"], [39, 3, 1, "", "diff"], [39, 3, 1, "", "equals"], [39, 3, 1, "", "integrate"], [39, 3, 1, "", "limit"]], "diofant.matrices.immutable.ImmutableSparseMatrix": [[42, 3, 1, "", "subs"], [42, 3, 1, "", "xreplace"]], "diofant.matrices.matrices": [[41, 2, 1, "", "MatrixBase"], [41, 2, 1, "", "MatrixError"], [41, 2, 1, "", "NonSquareMatrixError"], [41, 2, 1, "", "ShapeError"], [41, 1, 1, "", "a2idx"], [41, 1, 1, "", "classof"]], "diofant.matrices.matrices.MatrixBase": [[41, 5, 1, "", "C"], [41, 5, 1, "", "D"], [41, 5, 1, "", "H"], [41, 3, 1, "", "LDLdecomposition"], [41, 3, 1, "", "LDLsolve"], [41, 3, 1, "", "LUdecomposition"], [41, 3, 1, "", "LUdecompositionFF"], [41, 3, 1, "", "LUdecomposition_Simple"], [41, 3, 1, "", "LUsolve"], [41, 3, 1, "", "QRdecomposition"], [41, 3, 1, "", "QRsolve"], [41, 5, 1, "", "T"], [41, 3, 1, "", "add"], [41, 3, 1, "", "adjoint"], [41, 3, 1, "", "adjugate"], [41, 3, 1, "", "atoms"], [41, 3, 1, "", "berkowitz"], [41, 3, 1, "", "berkowitz_charpoly"], [41, 3, 1, "", "berkowitz_det"], [41, 3, 1, "", "berkowitz_eigenvals"], [41, 3, 1, "", "berkowitz_minors"], [41, 3, 1, "", "charpoly"], [41, 3, 1, "", "cholesky"], [41, 3, 1, "", "cholesky_solve"], [41, 3, 1, "", "cofactor"], [41, 3, 1, "", "cofactorMatrix"], [41, 3, 1, "", "col_insert"], [41, 3, 1, "", "col_join"], [41, 3, 1, "", "condition_number"], [41, 3, 1, "", "conjugate"], [41, 3, 1, "", "copy"], [41, 3, 1, "", "cross"], [41, 3, 1, "", "det"], [41, 3, 1, "", "det_LU_decomposition"], [41, 3, 1, "", "det_bareiss"], [41, 3, 1, "", "diagonal_solve"], [41, 3, 1, "", "diagonalize"], [41, 3, 1, "", "diff"], [41, 3, 1, "", "dot"], [41, 3, 1, "", "dual"], [41, 3, 1, "", "eigenvals"], [41, 3, 1, "", "eigenvects"], [41, 3, 1, "", "evalf"], [41, 3, 1, "", "exp"], [41, 3, 1, "", "expand"], [41, 3, 1, "", "extract"], [41, 5, 1, "", "free_symbols"], [41, 3, 1, "", "get_diag_blocks"], [41, 3, 1, "", "has"], [41, 3, 1, "", "hstack"], [41, 3, 1, "", "integrate"], [41, 3, 1, "", "inv"], [41, 3, 1, "", "inv_mod"], [41, 3, 1, "", "inverse_ADJ"], [41, 3, 1, "", "inverse_GE"], [41, 3, 1, "", "inverse_LU"], [41, 3, 1, "", "is_anti_symmetric"], [41, 3, 1, "", "is_diagonal"], [41, 3, 1, "", "is_diagonalizable"], [41, 5, 1, "", "is_hermitian"], [41, 5, 1, "", "is_lower"], [41, 5, 1, "", "is_lower_hessenberg"], [41, 3, 1, "", "is_nilpotent"], [41, 5, 1, "", "is_square"], [41, 3, 1, "", "is_symbolic"], [41, 3, 1, "", "is_symmetric"], [41, 5, 1, "", "is_upper"], [41, 5, 1, "", "is_upper_hessenberg"], [41, 5, 1, "", "is_zero"], [41, 3, 1, "", "jacobian"], [41, 3, 1, "", "jordan_cells"], [41, 3, 1, "", "jordan_form"], [41, 3, 1, "", "key2bounds"], [41, 3, 1, "", "key2ij"], [41, 3, 1, "", "limit"], [41, 3, 1, "", "lower_triangular_solve"], [41, 3, 1, "", "minorEntry"], [41, 3, 1, "", "minorMatrix"], [41, 3, 1, "", "multiply"], [41, 3, 1, "", "multiply_elementwise"], [41, 3, 1, "", "norm"], [41, 3, 1, "", "normalized"], [41, 3, 1, "", "nullspace"], [41, 3, 1, "", "permuteBkwd"], [41, 3, 1, "", "permuteFwd"], [41, 3, 1, "", "pinv"], [41, 3, 1, "", "pinv_solve"], [41, 3, 1, "", "print_nonzero"], [41, 3, 1, "", "project"], [41, 3, 1, "", "rank"], [41, 3, 1, "", "replace"], [41, 3, 1, "", "row_insert"], [41, 3, 1, "", "row_join"], [41, 3, 1, "", "rref"], [41, 5, 1, "", "shape"], [41, 3, 1, "", "simplify"], [41, 3, 1, "", "singular_values"], [41, 3, 1, "", "solve_least_squares"], [41, 3, 1, "", "subs"], [41, 3, 1, "", "table"], [41, 3, 1, "", "trace"], [41, 3, 1, "", "transpose"], [41, 3, 1, "", "upper_triangular_solve"], [41, 3, 1, "", "values"], [41, 3, 1, "", "vec"], [41, 3, 1, "", "vech"], [41, 3, 1, "", "vstack"], [41, 3, 1, "", "xreplace"]], "diofant.matrices.sparse": [[42, 2, 1, "", "MutableSparseMatrix"], [42, 4, 1, "", "SparseMatrix"], [42, 2, 1, "", "SparseMatrixBase"]], "diofant.matrices.sparse.MutableSparseMatrix": [[42, 3, 1, "", "col_join"], [42, 3, 1, "", "col_op"], [42, 3, 1, "", "col_swap"], [42, 3, 1, "", "fill"], [42, 3, 1, "", "row_join"], [42, 3, 1, "", "row_op"], [42, 3, 1, "", "row_swap"], [42, 3, 1, "", "zip_row_op"]], "diofant.matrices.sparse.SparseMatrixBase": [[42, 5, 1, "", "CL"], [42, 3, 1, "", "LDLdecomposition"], [42, 5, 1, "", "RL"], [42, 3, 1, "", "add"], [42, 3, 1, "", "applyfunc"], [42, 3, 1, "", "as_immutable"], [42, 3, 1, "", "as_mutable"], [42, 3, 1, "", "cholesky"], [42, 3, 1, "", "col_list"], [42, 3, 1, "", "extract"], [42, 3, 1, "", "eye"], [42, 3, 1, "", "has"], [42, 5, 1, "", "is_hermitian"], [42, 3, 1, "", "is_symmetric"], [42, 3, 1, "", "liupc"], [42, 3, 1, "", "multiply"], [42, 3, 1, "", "nnz"], [42, 3, 1, "", "reshape"], [42, 3, 1, "", "row_list"], [42, 3, 1, "", "row_structure_symbolic_cholesky"], [42, 3, 1, "", "scalar_multiply"], [42, 3, 1, "", "solve"], [42, 3, 1, "", "solve_least_squares"], [42, 3, 1, "", "tolist"], [42, 3, 1, "", "zeros"]], "diofant.ntheory": [[43, 0, 0, "-", "continued_fraction"], [43, 0, 0, "-", "egyptian_fraction"], [43, 0, 0, "-", "factor_"], [43, 0, 0, "-", "generate"], [43, 0, 0, "-", "modular"], [43, 0, 0, "-", "multinomial"], [43, 0, 0, "-", "partitions_"], [43, 0, 0, "-", "primetest"], [43, 0, 0, "-", "residue_ntheory"]], "diofant.ntheory.continued_fraction": [[43, 1, 1, "", "continued_fraction_convergents"], [43, 1, 1, "", "continued_fraction_iterator"], [43, 1, 1, "", "continued_fraction_periodic"], [43, 1, 1, "", "continued_fraction_reduce"]], "diofant.ntheory.egyptian_fraction": [[43, 1, 1, "", "egyptian_fraction"]], "diofant.ntheory.factor_": [[43, 1, 1, "", "antidivisor_count"], [43, 1, 1, "", "antidivisors"], [43, 1, 1, "", "core"], [43, 1, 1, "", "divisor_count"], [43, 2, 1, "", "divisor_sigma"], [43, 1, 1, "", "divisors"], [43, 1, 1, "", "factorint"], [43, 1, 1, "", "factorrat"], [43, 1, 1, "", "multiplicity"], [43, 1, 1, "", "perfect_power"], [43, 1, 1, "", "pollard_pm1"], [43, 1, 1, "", "pollard_rho"], [43, 1, 1, "", "primefactors"], [43, 1, 1, "", "smoothness"], [43, 1, 1, "", "smoothness_p"], [43, 1, 1, "", "square_factor"], [43, 2, 1, "", "totient"], [43, 1, 1, "", "trailing"]], "diofant.ntheory.generate": [[43, 2, 1, "", "Sieve"], [43, 1, 1, "", "cycle_length"], [43, 1, 1, "", "nextprime"], [43, 1, 1, "", "prevprime"], [43, 1, 1, "", "prime"], [43, 1, 1, "", "primepi"], [43, 1, 1, "", "primerange"], [43, 1, 1, "", "primorial"], [43, 1, 1, "", "randprime"]], "diofant.ntheory.generate.Sieve": [[43, 3, 1, "", "extend"], [43, 3, 1, "", "extend_to_no"], [43, 3, 1, "", "primerange"], [43, 3, 1, "", "search"]], "diofant.ntheory.modular": [[43, 1, 1, "", "crt"], [43, 1, 1, "", "crt1"], [43, 1, 1, "", "crt2"], [43, 1, 1, "", "integer_rational_reconstruction"], [43, 1, 1, "", "solve_congruence"], [43, 1, 1, "", "symmetric_residue"]], "diofant.ntheory.multinomial": [[43, 1, 1, "", "binomial_coefficients"], [43, 1, 1, "", "binomial_coefficients_list"], [43, 1, 1, "", "multinomial_coefficients"], [43, 1, 1, "", "multinomial_coefficients_iterator"]], "diofant.ntheory.partitions_": [[43, 1, 1, "", "npartitions"]], "diofant.ntheory.primetest": [[43, 1, 1, "", "is_square"], [43, 1, 1, "", "isprime"], [43, 1, 1, "", "mr"]], "diofant.ntheory.residue_ntheory": [[43, 1, 1, "", "discrete_log"], [43, 1, 1, "", "is_nthpow_residue"], [43, 1, 1, "", "is_primitive_root"], [43, 1, 1, "", "is_quad_residue"], [43, 1, 1, "", "jacobi_symbol"], [43, 1, 1, "", "legendre_symbol"], [43, 2, 1, "", "mobius"], [43, 1, 1, "", "n_order"], [43, 1, 1, "", "nthroot_mod"], [43, 1, 1, "", "primitive_root"], [43, 1, 1, "", "quadratic_residues"], [43, 1, 1, "", "sqrt_mod"], [43, 1, 1, "", "sqrt_mod_iter"]], "diofant.parsing.mathematica": [[44, 1, 1, "", "mathematica"]], "diofant.parsing.maxima": [[44, 1, 1, "", "parse_maxima"]], "diofant.parsing.sympy_parser": [[44, 1, 1, "", "auto_number"], [44, 1, 1, "", "auto_symbol"], [44, 1, 1, "", "convert_xor"], [44, 1, 1, "", "eval_expr"], [44, 1, 1, "", "function_exponentiation"], [44, 1, 1, "", "implicit_application"], [44, 1, 1, "", "implicit_multiplication"], [44, 1, 1, "", "implicit_multiplication_application"], [44, 1, 1, "", "parse_expr"], [44, 1, 1, "", "rationalize"], [44, 1, 1, "", "split_symbols"], [44, 1, 1, "", "split_symbols_custom"], [44, 6, 1, "", "standard_transformations"], [44, 1, 1, "", "stringify_expr"]], "diofant.polys": [[45, 0, 0, "-", "constructor"], [10, 0, 0, "-", "euclidtools"], [10, 0, 0, "-", "factorization_alg_field"], [10, 0, 0, "-", "factortools"], [10, 0, 0, "-", "groebnertools"], [10, 0, 0, "-", "modulargcd"], [45, 0, 0, "-", "monomials"], [45, 0, 0, "-", "numberfields"], [45, 0, 0, "-", "orderings"], [45, 0, 0, "-", "orthopolys"], [45, 0, 0, "-", "partfrac"], [10, 0, 0, "-", "polyerrors"], [45, 0, 0, "-", "polyfuncs"], [10, 0, 0, "-", "polyoptions"], [45, 0, 0, "-", "polyroots"], [45, 0, 0, "-", "polytools"], [45, 0, 0, "-", "rationaltools"], [10, 0, 0, "-", "rootisolation"], [45, 0, 0, "-", "rootoftools"], [45, 0, 0, "-", "specialpolys"], [10, 0, 0, "-", "sqfreetools"]], "diofant.polys.constructor": [[45, 1, 1, "", "construct_domain"]], "diofant.polys.euclidtools._GCD": [[10, 3, 1, "", "_zz_heu_gcd"]], "diofant.polys.factorization_alg_field": [[10, 1, 1, "", "_alpha_to_z"], [10, 1, 1, "", "_denominator"], [10, 1, 1, "", "_diophantine"], [10, 1, 1, "", "_diophantine_univariate"], [10, 1, 1, "", "_distinct_prime_divisors"], [10, 1, 1, "", "_extended_euclidean_algorithm"], [10, 1, 1, "", "_factor"], [10, 1, 1, "", "_hensel_lift"], [10, 1, 1, "", "_leading_coeffs"], [10, 1, 1, "", "_monic_associate"], [10, 1, 1, "", "_padic_lift"], [10, 1, 1, "", "_sqf_p"], [10, 1, 1, "", "_subs_ground"], [10, 1, 1, "", "_test_evaluation_points"], [10, 1, 1, "", "_test_prime"], [10, 1, 1, "", "_z_to_alpha"], [10, 1, 1, "", "efactor"], [10, 1, 1, "", "trager"]], "diofant.polys.fields": [[10, 2, 1, "", "FracElement"], [28, 2, 1, "", "FractionField"]], "diofant.polys.fields.FracElement": [[10, 3, 1, "", "compose"], [10, 3, 1, "", "diff"]], "diofant.polys.groebnertools": [[10, 1, 1, "", "buchberger"], [10, 1, 1, "", "cp_key"], [10, 1, 1, "", "critical_pair"], [10, 1, 1, "", "f5_reduce"], [10, 1, 1, "", "f5b"], [10, 1, 1, "", "groebner"], [10, 1, 1, "", "groebner_gcd"], [10, 1, 1, "", "groebner_lcm"], [10, 1, 1, "", "is_groebner"], [10, 1, 1, "", "is_minimal"], [10, 1, 1, "", "is_rewritable_or_comparable"], [10, 1, 1, "", "lbp_cmp"], [10, 1, 1, "", "lbp_key"], [10, 1, 1, "", "lbp_mul_term"], [10, 1, 1, "", "lbp_sub"], [10, 1, 1, "", "matrix_fglm"], [10, 1, 1, "", "red_groebner"], [10, 1, 1, "", "s_poly"], [10, 1, 1, "", "sig_cmp"], [10, 1, 1, "", "sig_key"], [10, 1, 1, "", "sig_mult"], [10, 1, 1, "", "spoly"]], "diofant.polys.modulargcd": [[10, 1, 1, "", "_chinese_remainder_reconstruction"], [10, 1, 1, "", "_div"], [10, 1, 1, "", "_euclidean_algorithm"], [10, 1, 1, "", "_evaluate_ground"], [10, 1, 1, "", "_func_field_modgcd_m"], [10, 1, 1, "", "_func_field_modgcd_p"], [10, 1, 1, "", "_gf_gcdex"], [10, 1, 1, "", "_interpolate"], [10, 1, 1, "", "_minpoly_from_dense"], [10, 1, 1, "", "_modgcd_p"], [10, 1, 1, "", "_primitive_in_x0"], [10, 1, 1, "", "_rational_function_reconstruction"], [10, 1, 1, "", "_rational_reconstruction_func_coeffs"], [10, 1, 1, "", "_rational_reconstruction_int_coeffs"], [10, 1, 1, "", "_to_ANP_poly"], [10, 1, 1, "", "_to_ZZ_poly"], [10, 1, 1, "", "_trunc"], [10, 1, 1, "", "func_field_modgcd"], [10, 1, 1, "", "modgcd"], [10, 1, 1, "", "trial_division"]], "diofant.polys.monomials": [[45, 2, 1, "", "Monomial"]], "diofant.polys.monomials.Monomial": [[45, 3, 1, "", "as_expr"], [45, 3, 1, "", "divides"], [45, 3, 1, "", "gcd"], [45, 3, 1, "", "lcm"]], "diofant.polys.numberfields": [[45, 1, 1, "", "field_isomorphism"], [45, 1, 1, "", "minimal_polynomial"], [10, 1, 1, "", "minpoly_groebner"], [45, 1, 1, "", "primitive_element"]], "diofant.polys.orderings": [[45, 2, 1, "", "GradedLexOrder"], [45, 2, 1, "", "LexOrder"], [45, 2, 1, "", "ReversedGradedLexOrder"]], "diofant.polys.orthopolys": [[45, 1, 1, "", "chebyshevt_poly"], [45, 1, 1, "", "chebyshevu_poly"], [45, 1, 1, "", "gegenbauer_poly"], [45, 1, 1, "", "hermite_poly"], [45, 1, 1, "", "jacobi_poly"], [45, 1, 1, "", "laguerre_poly"], [45, 1, 1, "", "legendre_poly"], [45, 1, 1, "", "spherical_bessel_fn"]], "diofant.polys.partfrac": [[45, 1, 1, "", "apart"], [45, 1, 1, "", "apart_list"], [45, 1, 1, "", "assemble_partfrac_list"]], "diofant.polys.polyerrors": [[10, 7, 1, "", "BasePolynomialError"], [10, 7, 1, "", "CoercionFailedError"], [10, 7, 1, "", "ComputationFailedError"], [10, 7, 1, "", "DomainError"], [10, 7, 1, "", "EvaluationFailedError"], [10, 7, 1, "", "ExactQuotientFailedError"], [10, 7, 1, "", "ExtraneousFactorsError"], [10, 7, 1, "", "FlagError"], [10, 7, 1, "", "GeneratorsError"], [10, 7, 1, "", "GeneratorsNeededError"], [10, 7, 1, "", "HeuristicGCDFailedError"], [10, 7, 1, "", "HomomorphismFailedError"], [10, 7, 1, "", "IsomorphismFailedError"], [10, 7, 1, "", "ModularGCDFailedError"], [10, 7, 1, "", "MultivariatePolynomialError"], [10, 7, 1, "", "NotAlgebraicError"], [10, 7, 1, "", "NotInvertibleError"], [10, 7, 1, "", "NotReversibleError"], [10, 7, 1, "", "OperationNotSupportedError"], [10, 7, 1, "", "OptionError"], [10, 7, 1, "", "PolificationFailedError"], [10, 7, 1, "", "PolynomialDivisionFailedError"], [10, 7, 1, "", "PolynomialError"], [10, 7, 1, "", "RefinementFailedError"], [10, 7, 1, "", "UnificationFailedError"], [10, 7, 1, "", "UnivariatePolynomialError"], [10, 7, 1, "", "UnluckyLeadingCoefficientError"]], "diofant.polys.polyfuncs": [[45, 1, 1, "", "horner"], [45, 1, 1, "", "interpolate"], [45, 1, 1, "", "symmetrize"], [45, 1, 1, "", "viete"]], "diofant.polys.polyoptions": [[10, 2, 1, "", "Order"]], "diofant.polys.polyroots": [[45, 1, 1, "", "roots"]], "diofant.polys.polytools": [[45, 2, 1, "", "GroebnerBasis"], [45, 1, 1, "", "LC"], [45, 1, 1, "", "LM"], [45, 1, 1, "", "LT"], [45, 2, 1, "", "Poly"], [45, 2, 1, "", "PurePoly"], [45, 1, 1, "", "cancel"], [45, 1, 1, "", "cofactors"], [45, 1, 1, "", "compose"], [45, 1, 1, "", "content"], [45, 1, 1, "", "count_roots"], [45, 1, 1, "", "decompose"], [45, 1, 1, "", "degree"], [45, 1, 1, "", "discriminant"], [45, 1, 1, "", "div"], [45, 1, 1, "", "eliminate"], [45, 1, 1, "", "exquo"], [45, 1, 1, "", "factor"], [45, 1, 1, "", "factor_list"], [45, 1, 1, "", "gcd"], [45, 1, 1, "", "gcdex"], [45, 1, 1, "", "groebner"], [45, 1, 1, "", "half_gcdex"], [45, 1, 1, "", "invert"], [45, 1, 1, "", "lcm"], [45, 1, 1, "", "monic"], [45, 1, 1, "", "nroots"], [45, 1, 1, "", "parallel_poly_from_expr"], [45, 1, 1, "", "primitive"], [45, 1, 1, "", "quo"], [45, 1, 1, "", "real_roots"], [45, 1, 1, "", "reduced"], [45, 1, 1, "", "rem"], [45, 1, 1, "", "resultant"], [45, 1, 1, "", "sqf"], [45, 1, 1, "", "sqf_list"], [45, 1, 1, "", "sqf_norm"], [45, 1, 1, "", "sqf_part"], [45, 1, 1, "", "subresultants"], [45, 1, 1, "", "terms_gcd"], [45, 1, 1, "", "trunc"]], "diofant.polys.polytools.GroebnerBasis": [[45, 3, 1, "", "contains"], [45, 5, 1, "", "dimension"], [45, 5, 1, "", "independent_sets"], [45, 3, 1, "", "reduce"], [45, 3, 1, "", "set_order"]], "diofant.polys.polytools.Poly": [[45, 3, 1, "", "EC"], [45, 3, 1, "", "EM"], [45, 3, 1, "", "ET"], [45, 3, 1, "", "LC"], [45, 3, 1, "", "LM"], [45, 3, 1, "", "LT"], [45, 3, 1, "", "TC"], [45, 3, 1, "", "all_coeffs"], [45, 3, 1, "", "all_roots"], [45, 5, 1, "", "args"], [45, 3, 1, "", "as_dict"], [45, 3, 1, "", "as_expr"], [45, 3, 1, "", "cancel"], [45, 3, 1, "", "clear_denoms"], [45, 3, 1, "", "coeff_monomial"], [45, 3, 1, "", "coeffs"], [45, 3, 1, "", "cofactors"], [45, 3, 1, "", "compose"], [45, 3, 1, "", "content"], [45, 3, 1, "", "count_roots"], [45, 3, 1, "", "decompose"], [45, 3, 1, "", "degree"], [45, 3, 1, "", "discriminant"], [45, 3, 1, "", "dispersionset"], [45, 3, 1, "", "div"], [45, 5, 1, "", "domain"], [45, 3, 1, "", "drop"], [45, 3, 1, "", "eject"], [45, 3, 1, "", "eval"], [45, 3, 1, "", "exclude"], [45, 3, 1, "", "exquo"], [45, 3, 1, "", "exquo_ground"], [45, 3, 1, "", "factor_list"], [45, 5, 1, "", "free_symbols"], [45, 5, 1, "", "free_symbols_in_domain"], [45, 3, 1, "", "from_dict"], [45, 3, 1, "", "from_expr"], [45, 3, 1, "", "from_list"], [45, 3, 1, "", "from_poly"], [45, 3, 1, "", "gcd"], [45, 3, 1, "", "gcdex"], [45, 5, 1, "", "gen"], [45, 3, 1, "", "get_modulus"], [45, 3, 1, "", "half_gcdex"], [45, 3, 1, "", "has_only_gens"], [45, 3, 1, "", "inject"], [45, 3, 1, "", "integrate"], [45, 3, 1, "", "invert"], [45, 5, 1, "", "is_cyclotomic"], [45, 5, 1, "", "is_ground"], [45, 5, 1, "", "is_homogeneous"], [45, 5, 1, "", "is_irreducible"], [45, 5, 1, "", "is_linear"], [45, 5, 1, "", "is_multivariate"], [45, 5, 1, "", "is_one"], [45, 5, 1, "", "is_quadratic"], [45, 5, 1, "", "is_squarefree"], [45, 5, 1, "", "is_term"], [45, 5, 1, "", "is_univariate"], [45, 5, 1, "", "is_zero"], [45, 3, 1, "", "lcm"], [45, 3, 1, "", "length"], [45, 3, 1, "", "monic"], [45, 3, 1, "", "monoms"], [45, 3, 1, "", "new"], [45, 3, 1, "", "nroots"], [45, 3, 1, "", "per"], [45, 3, 1, "", "primitive"], [45, 3, 1, "", "quo"], [45, 3, 1, "", "quo_ground"], [45, 3, 1, "", "rat_clear_denoms"], [45, 3, 1, "", "real_roots"], [45, 3, 1, "", "rem"], [45, 3, 1, "", "reorder"], [45, 3, 1, "", "replace"], [45, 3, 1, "", "resultant"], [45, 3, 1, "", "retract"], [45, 3, 1, "", "root"], [45, 3, 1, "", "set_domain"], [45, 3, 1, "", "set_modulus"], [45, 3, 1, "", "shift"], [45, 3, 1, "", "sqf_list"], [45, 3, 1, "", "sqf_norm"], [45, 3, 1, "", "sqf_part"], [45, 3, 1, "", "subresultants"], [45, 3, 1, "", "terms"], [45, 3, 1, "", "terms_gcd"], [45, 3, 1, "", "termwise"], [45, 3, 1, "", "to_exact"], [45, 3, 1, "", "to_field"], [45, 3, 1, "", "to_ring"], [45, 3, 1, "", "total_degree"], [45, 3, 1, "", "trunc"], [45, 3, 1, "", "unify"]], "diofant.polys.polytools.PurePoly": [[45, 5, 1, "", "free_symbols"]], "diofant.polys.rationaltools": [[45, 1, 1, "", "together"]], "diofant.polys.rings": [[10, 2, 1, "", "PolyElement"], [28, 2, 1, "", "PolynomialRing"], [10, 1, 1, "", "ring"]], "diofant.polys.rings.PolyElement": [[10, 3, 1, "", "__add__"], [10, 3, 1, "", "__eq__"], [10, 3, 1, "", "__getitem__"], [10, 3, 1, "", "__mul__"], [10, 3, 1, "", "__pow__"], [10, 3, 1, "", "__radd__"], [10, 3, 1, "", "__rmul__"], [10, 3, 1, "", "__rsub__"], [10, 3, 1, "", "__setitem__"], [10, 3, 1, "", "__sub__"], [10, 4, 1, "", "__weakref__"], [10, 3, 1, "", "cancel"], [10, 3, 1, "", "compose"], [10, 3, 1, "", "content"], [10, 3, 1, "", "copy"], [10, 3, 1, "", "degree"], [10, 3, 1, "", "diff"], [10, 3, 1, "", "discriminant"], [10, 3, 1, "", "div"], [10, 3, 1, "", "gcdex"], [10, 3, 1, "", "half_gcdex"], [10, 3, 1, "", "integrate"], [10, 3, 1, "", "leading_expv"], [10, 3, 1, "", "leading_term"], [10, 3, 1, "", "monic"], [10, 3, 1, "", "prem"], [10, 3, 1, "", "primitive"], [10, 3, 1, "", "resultant"], [10, 3, 1, "", "subresultants"], [10, 3, 1, "", "tail_degree"], [10, 3, 1, "", "total_degree"]], "diofant.polys.rings.PolynomialRing": [[28, 3, 1, "", "drop"], [28, 3, 1, "", "eject"], [28, 5, 1, "", "field"], [28, 3, 1, "", "gcdex"], [28, 3, 1, "", "half_gcdex"], [28, 3, 1, "", "index"]], "diofant.polys.rootisolation": [[10, 2, 1, "", "ComplexInterval"], [10, 2, 1, "", "RealInterval"]], "diofant.polys.rootisolation.ComplexInterval": [[10, 3, 1, "", "as_tuple"], [10, 5, 1, "", "ax"], [10, 5, 1, "", "ay"], [10, 5, 1, "", "bx"], [10, 5, 1, "", "by"], [10, 5, 1, "", "center"], [10, 3, 1, "", "conjugate"], [10, 3, 1, "", "is_disjoint"], [10, 3, 1, "", "refine"]], "diofant.polys.rootisolation.RealInterval": [[10, 5, 1, "", "a"], [10, 3, 1, "", "as_tuple"], [10, 5, 1, "", "b"], [10, 5, 1, "", "center"], [10, 3, 1, "", "is_disjoint"], [10, 3, 1, "", "refine"]], "diofant.polys.rootoftools": [[45, 2, 1, "", "RootOf"], [45, 2, 1, "", "RootSum"]], "diofant.polys.rootoftools.RootOf": [[45, 3, 1, "", "all_roots"], [45, 3, 1, "", "eval_rational"], [45, 5, 1, "", "interval"], [45, 3, 1, "", "real_roots"], [45, 3, 1, "", "refine"]], "diofant.polys.rootoftools.RootSum": [[45, 3, 1, "", "new"]], "diofant.polys.specialpolys": [[45, 1, 1, "", "cyclotomic_poly"], [45, 1, 1, "", "interpolating_poly"], [45, 1, 1, "", "random_poly"], [45, 1, 1, "", "swinnerton_dyer_poly"], [45, 1, 1, "", "symmetric_poly"]], "diofant.polys.univar": [[10, 2, 1, "", "UnivarPolyElement"], [28, 2, 1, "", "UnivarPolynomialRing"]], "diofant.polys.univar.UnivarPolyElement": [[10, 3, 1, "", "decompose"], [10, 3, 1, "", "sturm"]], "diofant.polys.univar.UnivarPolynomialRing": [[28, 3, 1, "", "dispersionset"]], "diofant.printing": [[46, 0, 0, "-", "ccode"], [46, 0, 0, "-", "codeprinter"], [46, 0, 0, "-", "conventions"], [46, 0, 0, "-", "fcode"], [46, 0, 0, "-", "lambdarepr"], [46, 0, 0, "-", "latex"], [46, 0, 0, "-", "mathematica"], [46, 0, 0, "-", "mathml"], [46, 0, 0, "-", "precedence"], [46, 0, 0, "-", "pretty"], [46, 0, 0, "-", "pretty_symbology"], [46, 0, 0, "-", "printer"], [46, 0, 0, "-", "python"], [46, 0, 0, "-", "repr"], [46, 0, 0, "-", "str"], [46, 0, 0, "-", "stringpict"]], "diofant.printing.ccode": [[46, 2, 1, "", "CCodePrinter"], [46, 1, 1, "", "ccode"]], "diofant.printing.ccode.CCodePrinter": [[46, 3, 1, "", "indent_code"], [46, 4, 1, "", "printmethod"]], "diofant.printing.codeprinter": [[46, 7, 1, "", "AssignmentError"], [46, 2, 1, "", "CodePrinter"]], "diofant.printing.codeprinter.CodePrinter": [[46, 4, 1, "", "printmethod"]], "diofant.printing.conventions": [[46, 1, 1, "", "split_super_sub"]], "diofant.printing.dot": [[46, 1, 1, "", "dotprint"]], "diofant.printing.fcode": [[46, 2, 1, "", "FCodePrinter"], [46, 1, 1, "", "fcode"]], "diofant.printing.fcode.FCodePrinter": [[46, 3, 1, "", "indent_code"], [46, 4, 1, "", "printmethod"]], "diofant.printing.lambdarepr": [[46, 2, 1, "", "LambdaPrinter"], [46, 1, 1, "", "lambdarepr"]], "diofant.printing.lambdarepr.LambdaPrinter": [[46, 4, 1, "", "printmethod"]], "diofant.printing.latex": [[46, 2, 1, "", "LatexPrinter"], [46, 6, 1, "", "accepted_latex_functions"], [46, 1, 1, "", "latex"]], "diofant.printing.latex.LatexPrinter": [[46, 4, 1, "", "printmethod"]], "diofant.printing.mathematica": [[46, 2, 1, "", "MCodePrinter"], [46, 1, 1, "", "mathematica_code"]], "diofant.printing.mathematica.MCodePrinter": [[46, 3, 1, "", "doprint"], [46, 4, 1, "", "printmethod"]], "diofant.printing.mathml": [[46, 2, 1, "", "MathMLPrinter"], [46, 1, 1, "", "mathml"]], "diofant.printing.mathml.MathMLPrinter": [[46, 3, 1, "", "doprint"], [46, 3, 1, "", "mathml_tag"], [46, 4, 1, "", "printmethod"]], "diofant.printing.pretty": [[46, 2, 1, "", "PrettyPrinter"], [46, 1, 1, "", "pprint"], [46, 1, 1, "", "pretty"], [46, 1, 1, "", "pretty_print"]], "diofant.printing.pretty_symbology": [[46, 1, 1, "", "G"], [46, 1, 1, "", "U"], [46, 1, 1, "", "annotated"], [46, 1, 1, "", "g"], [46, 6, 1, "", "greek_letters"], [46, 1, 1, "", "hobj"], [46, 1, 1, "", "pretty_atom"], [46, 1, 1, "", "pretty_symbol"], [46, 1, 1, "", "vobj"], [46, 1, 1, "", "xobj"], [46, 1, 1, "", "xsym"]], "diofant.printing.printer": [[46, 2, 1, "", "Printer"]], "diofant.printing.printer.Printer": [[46, 3, 1, "", "_print"], [46, 3, 1, "", "doprint"], [46, 4, 1, "", "printmethod"], [46, 3, 1, "", "set_global_settings"]], "diofant.printing.repr": [[46, 2, 1, "", "ReprPrinter"], [46, 1, 1, "", "srepr"]], "diofant.printing.repr.ReprPrinter": [[46, 3, 1, "", "emptyPrinter"], [46, 4, 1, "", "printmethod"], [46, 3, 1, "", "reprify"]], "diofant.printing.str": [[46, 2, 1, "", "StrPrinter"], [46, 1, 1, "", "sstr"]], "diofant.printing.str.StrPrinter": [[46, 4, 1, "", "printmethod"]], "diofant.printing.stringpict": [[46, 2, 1, "", "prettyForm"], [46, 2, 1, "", "stringPict"]], "diofant.printing.stringpict.stringPict": [[46, 3, 1, "", "above"], [46, 3, 1, "", "below"], [46, 3, 1, "", "height"], [46, 3, 1, "", "left"], [46, 3, 1, "", "next"], [46, 3, 1, "", "parens"], [46, 3, 1, "", "render"], [46, 3, 1, "", "right"], [46, 3, 1, "", "stack"], [46, 3, 1, "", "terminal_width"], [46, 3, 1, "", "width"]], "diofant.sets": [[47, 0, 0, "-", "fancysets"], [47, 0, 0, "-", "sets"]], "diofant.sets.fancysets": [[47, 2, 1, "", "ExtendedReals"], [47, 2, 1, "", "ImageSet"], [47, 2, 1, "", "Integers"], [47, 2, 1, "", "Naturals"], [47, 2, 1, "", "Naturals0"], [47, 2, 1, "", "Range"], [47, 2, 1, "", "Rationals"], [47, 2, 1, "", "Reals"]], "diofant.sets.sets": [[47, 2, 1, "", "Complement"], [47, 2, 1, "", "EmptySet"], [47, 2, 1, "", "FiniteSet"], [47, 2, 1, "", "Intersection"], [47, 2, 1, "", "Interval"], [47, 2, 1, "", "ProductSet"], [47, 2, 1, "", "Set"], [47, 2, 1, "", "Union"], [47, 1, 1, "", "imageset"]], "diofant.sets.sets.Complement": [[47, 3, 1, "", "reduce"]], "diofant.sets.sets.FiniteSet": [[47, 3, 1, "", "as_relational"]], "diofant.sets.sets.Intersection": [[47, 3, 1, "", "as_relational"], [47, 3, 1, "", "reduce"]], "diofant.sets.sets.Interval": [[47, 3, 1, "", "Lopen"], [47, 3, 1, "", "Ropen"], [47, 3, 1, "", "as_relational"], [47, 5, 1, "", "end"], [47, 5, 1, "", "inf"], [47, 5, 1, "", "is_left_unbounded"], [47, 5, 1, "", "is_right_unbounded"], [47, 5, 1, "", "left"], [47, 5, 1, "", "left_open"], [47, 3, 1, "", "open"], [47, 5, 1, "", "right"], [47, 5, 1, "", "right_open"], [47, 5, 1, "", "start"], [47, 5, 1, "", "sup"]], "diofant.sets.sets.Set": [[47, 5, 1, "", "boundary"], [47, 5, 1, "", "closure"], [47, 3, 1, "", "complement"], [47, 3, 1, "", "contains"], [47, 5, 1, "", "inf"], [47, 5, 1, "", "interior"], [47, 3, 1, "", "intersection"], [47, 5, 1, "", "is_closed"], [47, 3, 1, "", "is_disjoint"], [47, 5, 1, "", "is_open"], [47, 3, 1, "", "is_proper_subset"], [47, 3, 1, "", "is_proper_superset"], [47, 3, 1, "", "is_subset"], [47, 3, 1, "", "is_superset"], [47, 3, 1, "", "isdisjoint"], [47, 3, 1, "", "issubset"], [47, 3, 1, "", "issuperset"], [47, 5, 1, "", "measure"], [47, 3, 1, "", "powerset"], [47, 5, 1, "", "sup"], [47, 3, 1, "", "symmetric_difference"], [47, 3, 1, "", "union"]], "diofant.sets.sets.Union": [[47, 3, 1, "", "as_relational"], [47, 3, 1, "", "reduce"]], "diofant.simplify": [[48, 0, 0, "-", "combsimp"], [48, 0, 0, "-", "cse_main"], [48, 0, 0, "-", "epathtools"], [48, 0, 0, "-", "fu"], [48, 0, 0, "-", "hyperexpand"], [8, 0, 0, "-", "hyperexpand_doc"], [48, 0, 0, "-", "powsimp"], [48, 0, 0, "-", "radsimp"], [48, 0, 0, "-", "ratsimp"], [48, 0, 0, "-", "sqrtdenest"], [48, 0, 0, "-", "traversaltools"], [48, 0, 0, "-", "trigsimp"]], "diofant.simplify.combsimp": [[48, 1, 1, "", "combsimp"]], "diofant.simplify.cse_main": [[48, 1, 1, "", "cse"], [48, 1, 1, "", "opt_cse"], [48, 1, 1, "", "tree_cse"]], "diofant.simplify.epathtools": [[48, 2, 1, "", "EPath"], [48, 1, 1, "", "epath"]], "diofant.simplify.epathtools.EPath": [[48, 3, 1, "", "apply"], [48, 3, 1, "", "select"]], "diofant.simplify.fu": [[48, 1, 1, "", "fu"]], "diofant.simplify.hyperexpand": [[8, 1, 1, "", "add_formulae"], [48, 1, 1, "", "hyperexpand"]], "diofant.simplify.powsimp": [[48, 1, 1, "", "powdenest"], [48, 1, 1, "", "powsimp"]], "diofant.simplify.radsimp": [[48, 1, 1, "", "collect"], [48, 1, 1, "", "collect_const"], [48, 1, 1, "", "collect_sqrt"], [48, 1, 1, "", "fraction"], [48, 1, 1, "", "rad_rationalize"], [48, 1, 1, "", "radsimp"], [48, 1, 1, "", "rcollect"]], "diofant.simplify.ratsimp": [[48, 1, 1, "", "ratsimp"]], "diofant.simplify.simplify": [[48, 1, 1, "", "besselsimp"], [48, 1, 1, "", "hypersimilar"], [48, 1, 1, "", "hypersimp"], [48, 1, 1, "", "logcombine"], [48, 1, 1, "", "nsimplify"], [48, 1, 1, "", "nthroot"], [48, 1, 1, "", "posify"], [48, 1, 1, "", "separatevars"], [48, 1, 1, "", "simplify"]], "diofant.simplify.sqrtdenest": [[48, 1, 1, "", "sqrtdenest"], [48, 1, 1, "", "unrad"]], "diofant.simplify.traversaltools": [[48, 1, 1, "", "use"]], "diofant.simplify.trigsimp": [[48, 1, 1, "", "futrig"], [48, 1, 1, "", "trigsimp"]], "diofant.solvers": [[56, 0, 0, "-", "deutils"], [49, 0, 0, "-", "diophantine"], [51, 0, 0, "-", "inequalities"], [52, 0, 0, "-", "ode"], [53, 0, 0, "-", "pde"], [55, 0, 0, "-", "polysys"], [54, 0, 0, "-", "recurr"], [55, 0, 0, "-", "solvers"], [56, 0, 0, "-", "utils"]], "diofant.solvers.deutils": [[56, 1, 1, "", "ode_order"]], "diofant.solvers.diophantine": [[49, 1, 1, "", "PQa"], [49, 1, 1, "", "base_solution_linear"], [49, 1, 1, "", "classify_diop"], [49, 1, 1, "", "cornacchia"], [49, 1, 1, "", "descent"], [49, 1, 1, "", "diop_DN"], [49, 1, 1, "", "diop_bf_DN"], [49, 1, 1, "", "diop_general_pythagorean"], [49, 1, 1, "", "diop_general_sum_of_even_powers"], [49, 1, 1, "", "diop_general_sum_of_squares"], [49, 1, 1, "", "diop_linear"], [49, 1, 1, "", "diop_quadratic"], [49, 1, 1, "", "diop_solve"], [49, 1, 1, "", "diop_ternary_quadratic"], [49, 1, 1, "", "diop_ternary_quadratic_normal"], [49, 1, 1, "", "diophantine"], [49, 1, 1, "", "divisible"], [49, 1, 1, "", "equivalent"], [49, 1, 1, "", "find_DN"], [49, 1, 1, "", "gaussian_reduce"], [49, 1, 1, "", "holzer"], [49, 1, 1, "", "ldescent"], [49, 1, 1, "", "merge_solution"], [49, 1, 1, "", "parametrize_ternary_quadratic"], [49, 1, 1, "", "partition"], [49, 1, 1, "", "power_representation"], [49, 1, 1, "", "prime_as_sum_of_two_squares"], [49, 1, 1, "", "reconstruct"], [49, 1, 1, "", "sqf_normal"], [49, 1, 1, "", "square_factor"], [49, 1, 1, "", "sum_of_four_squares"], [49, 1, 1, "", "sum_of_powers"], [49, 1, 1, "", "sum_of_squares"], [49, 1, 1, "", "sum_of_three_squares"], [49, 1, 1, "", "transformation_to_DN"], [49, 1, 1, "", "transformation_to_normal"]], "diofant.solvers.inequalities": [[51, 1, 1, "", "reduce_inequalities"]], "diofant.solvers.ode": [[52, 1, 1, "", "_handle_Integral"], [52, 1, 1, "", "_linear_2eq_order1_type3"], [52, 1, 1, "", "_linear_2eq_order1_type4"], [52, 1, 1, "", "_linear_2eq_order1_type5"], [52, 1, 1, "", "_linear_2eq_order1_type6"], [52, 1, 1, "", "_linear_2eq_order1_type7"], [52, 1, 1, "", "_linear_2eq_order2_type1"], [52, 1, 1, "", "_linear_2eq_order2_type11"], [52, 1, 1, "", "_linear_2eq_order2_type2"], [52, 1, 1, "", "_linear_2eq_order2_type3"], [52, 1, 1, "", "_linear_2eq_order2_type5"], [52, 1, 1, "", "_linear_2eq_order2_type6"], [52, 1, 1, "", "_linear_2eq_order2_type7"], [52, 1, 1, "", "_linear_2eq_order2_type8"], [52, 1, 1, "", "_linear_2eq_order2_type9"], [52, 1, 1, "", "_linear_3eq_order1_type4"], [52, 1, 1, "", "_nonlinear_2eq_order1_type1"], [52, 1, 1, "", "_nonlinear_2eq_order1_type2"], [52, 1, 1, "", "_nonlinear_2eq_order1_type3"], [52, 1, 1, "", "_nonlinear_2eq_order1_type4"], [52, 1, 1, "", "_nonlinear_2eq_order1_type5"], [52, 1, 1, "", "_nonlinear_3eq_order1_type1"], [52, 1, 1, "", "_nonlinear_3eq_order1_type2"], [52, 1, 1, "", "_undetermined_coefficients_match"], [52, 6, 1, "", "allhints"], [52, 1, 1, "", "checkinfsol"], [52, 1, 1, "", "checkodesol"], [52, 1, 1, "", "classify_ode"], [52, 1, 1, "", "constant_renumber"], [52, 1, 1, "", "constantsimp"], [52, 1, 1, "", "dsolve"], [52, 1, 1, "", "homogeneous_order"], [52, 1, 1, "", "infinitesimals"], [52, 1, 1, "", "lie_heuristic_abaco1_product"], [52, 1, 1, "", "lie_heuristic_abaco1_simple"], [52, 1, 1, "", "lie_heuristic_abaco2_similar"], [52, 1, 1, "", "lie_heuristic_abaco2_unique_unknown"], [52, 1, 1, "", "lie_heuristic_bivariate"], [52, 1, 1, "", "lie_heuristic_chi"], [52, 1, 1, "", "lie_heuristic_function_sum"], [52, 1, 1, "", "lie_heuristic_linear"], [52, 1, 1, "", "ode_1st_exact"], [52, 1, 1, "", "ode_1st_homogeneous_coeff_best"], [52, 1, 1, "", "ode_1st_homogeneous_coeff_subs_dep_div_indep"], [52, 1, 1, "", "ode_1st_homogeneous_coeff_subs_indep_div_dep"], [52, 1, 1, "", "ode_1st_linear"], [52, 1, 1, "", "ode_1st_power_series"], [52, 1, 1, "", "ode_2nd_power_series_ordinary"], [52, 1, 1, "", "ode_2nd_power_series_regular"], [52, 1, 1, "", "ode_Bernoulli"], [52, 1, 1, "", "ode_Liouville"], [52, 1, 1, "", "ode_Riccati_special_minus2"], [52, 1, 1, "", "ode_almost_linear"], [52, 1, 1, "", "ode_lie_group"], [52, 1, 1, "", "ode_linear_coefficients"], [52, 1, 1, "", "ode_nth_linear_constant_coeff_homogeneous"], [52, 1, 1, "", "ode_nth_linear_constant_coeff_undetermined_coefficients"], [52, 1, 1, "", "ode_nth_linear_constant_coeff_variation_of_parameters"], [52, 1, 1, "", "ode_separable"], [52, 1, 1, "", "ode_separable_reduced"], [52, 1, 1, "", "ode_sol_simplicity"], [52, 1, 1, "", "odesimp"], [52, 1, 1, "", "sysode_linear_neq_order1"]], "diofant.solvers.pde": [[53, 1, 1, "", "checkpdesol"], [53, 1, 1, "", "classify_pde"], [53, 1, 1, "", "pde_1st_linear_constant_coeff"], [53, 1, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [53, 1, 1, "", "pde_1st_linear_variable_coeff"], [53, 1, 1, "", "pde_separate"], [53, 1, 1, "", "pde_separate_add"], [53, 1, 1, "", "pde_separate_mul"], [53, 1, 1, "", "pdsolve"]], "diofant.solvers.polysys": [[55, 1, 1, "", "solve_linear_system"], [55, 1, 1, "", "solve_poly_system"], [55, 1, 1, "", "solve_surd_system"]], "diofant.solvers.recurr": [[54, 1, 1, "", "rsolve"], [54, 1, 1, "", "rsolve_hyper"], [54, 1, 1, "", "rsolve_poly"], [54, 1, 1, "", "rsolve_ratio"]], "diofant.solvers.solvers": [[55, 1, 1, "", "minsolve_linear_system"], [55, 1, 1, "", "solve"], [55, 1, 1, "", "solve_linear"]], "diofant.solvers.utils": [[56, 1, 1, "", "checksol"]], "diofant.tensor": [[57, 0, 0, "-", "array"], [59, 0, 0, "-", "index_methods"], [60, 0, 0, "-", "indexed"]], "diofant.tensor.array": [[57, 2, 1, "", "Array"], [57, 2, 1, "", "ImmutableDenseNDimArray"], [57, 2, 1, "", "ImmutableSparseNDimArray"], [57, 2, 1, "", "MutableDenseNDimArray"], [57, 2, 1, "", "MutableSparseNDimArray"], [57, 1, 1, "", "derive_by_array"], [57, 1, 1, "", "permutedims"], [57, 1, 1, "", "tensorcontraction"], [57, 1, 1, "", "tensorproduct"]], "diofant.tensor.index_methods": [[59, 7, 1, "", "IndexConformanceExceptionError"], [59, 1, 1, "", "get_contraction_structure"], [59, 1, 1, "", "get_indices"]], "diofant.tensor.indexed": [[60, 2, 1, "", "Idx"], [60, 7, 1, "", "IndexExceptionError"], [60, 2, 1, "", "Indexed"], [60, 2, 1, "", "IndexedBase"]], "diofant.tensor.indexed.Idx": [[60, 5, 1, "", "label"], [60, 5, 1, "", "lower"], [60, 5, 1, "", "upper"]], "diofant.tensor.indexed.Indexed": [[60, 5, 1, "", "base"], [60, 5, 1, "", "indices"], [60, 5, 1, "", "ranges"], [60, 5, 1, "", "rank"], [60, 5, 1, "", "shape"]], "diofant.tensor.indexed.IndexedBase": [[60, 5, 1, "", "args"], [60, 5, 1, "", "label"], [60, 5, 1, "", "shape"]], "diofant.utilities": [[61, 0, 0, "-", "autowrap"], [62, 0, 0, "-", "codegen"], [63, 0, 0, "-", "decorator"], [64, 0, 0, "-", "enumerative"], [66, 0, 0, "-", "iterables"], [67, 0, 0, "-", "lambdify"], [68, 0, 0, "-", "memoization"], [69, 0, 0, "-", "misc"], [70, 0, 0, "-", "randtest"]], "diofant.utilities.autowrap": [[61, 7, 1, "", "CodeWrapError"], [61, 2, 1, "", "CodeWrapper"], [61, 2, 1, "", "CythonCodeWrapper"], [61, 2, 1, "", "DummyWrapper"], [61, 2, 1, "", "F2PyCodeWrapper"], [61, 2, 1, "", "UfuncifyCodeWrapper"], [61, 1, 1, "", "autowrap"], [61, 1, 1, "", "binary_function"], [61, 1, 1, "", "ufuncify"]], "diofant.utilities.autowrap.CythonCodeWrapper": [[61, 3, 1, "", "dump_pyx"]], "diofant.utilities.autowrap.UfuncifyCodeWrapper": [[61, 3, 1, "", "dump_c"]], "diofant.utilities.codegen": [[62, 2, 1, "", "Argument"], [62, 2, 1, "", "CCodeGen"], [62, 2, 1, "", "CodeGen"], [62, 2, 1, "", "DataType"], [62, 2, 1, "", "FCodeGen"], [62, 2, 1, "", "InputArgument"], [62, 2, 1, "", "OctaveCodeGen"], [62, 2, 1, "", "OutputArgument"], [62, 2, 1, "", "Result"], [62, 2, 1, "", "Routine"], [62, 1, 1, "", "codegen"], [62, 1, 1, "", "get_default_datatype"], [62, 1, 1, "", "make_routine"]], "diofant.utilities.codegen.CCodeGen": [[62, 3, 1, "", "dump_c"], [62, 3, 1, "", "dump_h"], [62, 3, 1, "", "get_prototype"]], "diofant.utilities.codegen.CodeGen": [[62, 3, 1, "", "dump_code"], [62, 3, 1, "", "routine"], [62, 3, 1, "", "write"]], "diofant.utilities.codegen.FCodeGen": [[62, 3, 1, "", "dump_f95"], [62, 3, 1, "", "dump_h"], [62, 3, 1, "", "get_interface"]], "diofant.utilities.codegen.OctaveCodeGen": [[62, 3, 1, "", "dump_m"], [62, 3, 1, "", "routine"]], "diofant.utilities.codegen.Routine": [[62, 5, 1, "", "result_variables"], [62, 5, 1, "", "variables"]], "diofant.utilities.decorator": [[63, 1, 1, "", "conserve_mpmath_dps"], [63, 1, 1, "", "doctest_depends_on"], [63, 2, 1, "", "no_attrs_in_subclass"]], "diofant.utilities.enumerative": [[64, 2, 1, "", "MultisetPartitionTraverser"], [64, 1, 1, "", "factoring_visitor"], [64, 1, 1, "", "list_visitor"], [64, 1, 1, "", "multiset_partitions_taocp"]], "diofant.utilities.enumerative.MultisetPartitionTraverser": [[64, 3, 1, "", "count_partitions"], [64, 3, 1, "", "enum_all"], [64, 3, 1, "", "enum_large"], [64, 3, 1, "", "enum_range"], [64, 3, 1, "", "enum_small"]], "diofant.utilities.iterables": [[66, 2, 1, "", "NotIterable"], [66, 1, 1, "", "cantor_product"], [66, 1, 1, "", "common_prefix"], [66, 1, 1, "", "common_suffix"], [66, 1, 1, "", "default_sort_key"], [66, 1, 1, "", "flatten"], [66, 1, 1, "", "group"], [66, 1, 1, "", "is_iterable"], [66, 1, 1, "", "is_sequence"], [66, 1, 1, "", "minlex"], [66, 1, 1, "", "multiset"], [66, 1, 1, "", "multiset_combinations"], [66, 1, 1, "", "multiset_partitions"], [66, 1, 1, "", "multiset_permutations"], [66, 1, 1, "", "numbered_symbols"], [66, 1, 1, "", "ordered"], [66, 1, 1, "", "ordered_partitions"], [66, 1, 1, "", "partitions"], [66, 1, 1, "", "permute_signs"], [66, 1, 1, "", "postorder_traversal"], [66, 1, 1, "", "rotate_left"], [66, 1, 1, "", "rotate_right"], [66, 1, 1, "", "runs"], [66, 1, 1, "", "sift"], [66, 1, 1, "", "signed_permutations"], [66, 1, 1, "", "subsets"], [66, 1, 1, "", "unflatten"], [66, 1, 1, "", "uniq"]], "diofant.utilities.lambdify": [[67, 1, 1, "", "implemented_function"], [67, 1, 1, "", "lambdastr"], [67, 1, 1, "", "lambdify"]], "diofant.utilities.memoization": [[68, 1, 1, "", "recurrence_memo"]], "diofant.utilities.misc": [[69, 1, 1, "", "filldedent"]], "diofant.utilities.randtest": [[70, 1, 1, "", "random_complex_number"], [70, 1, 1, "", "verify_derivative_numerically"], [70, 1, 1, "", "verify_numerically"]], "python--m-diofant": [[1, 8, 1, "cmdoption-python-m-diofant-a", "--auto-symbols"], [1, 8, 1, "cmdoption-python-m-diofant-h", "--help"], [1, 8, 1, "cmdoption-python-m-diofant-no-ipython", "--no-ipython"], [1, 8, 1, "cmdoption-python-m-diofant-no-wrap-division", "--no-wrap-division"], [1, 8, 1, "cmdoption-python-m-diofant-unicode-identifiers", "--unicode-identifiers"], [1, 8, 1, "cmdoption-python-m-diofant-V", "--version"], [1, 8, 1, "cmdoption-python-m-diofant-wrap-floats", "--wrap-floats"], [1, 8, 1, "cmdoption-python-m-diofant-V", "-V"], [1, 8, 1, "cmdoption-python-m-diofant-a", "-a"], [1, 8, 1, "cmdoption-python-m-diofant-h", "-h"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"], "8": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:data", "7": "py:exception", "8": "std:cmdoption"}, "terms": {"": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 61, 62, 64, 66, 67, 69, 72, 73, 74, 75, 76, 77, 83, 89, 95, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123], "0": [3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 66, 67, 71, 111, 112, 113, 114, 117, 119, 120, 123], "00": [27, 49, 112], "000": [5, 12, 34, 95], "0000": 12, "00000000000000": 5, "00000000000000e": 27, "0000000154172579002800188521596734869": 32, "0001": [5, 12], "00010": 12, "00011001011": 66, "00011010011": 66, "00026102": 34, "0005": 48, "001": [5, 12], "0010": 12, "00100": 27, "0011": [12, 21], "00141": 18, "0023152": 34, "003": 5, "0041": 112, "0041555371900280": 112, "00453": 34, "0049": 112, "006": 41, "0084": 112, "00906": 34, "01": [5, 18, 27, 48], "010": 12, "0100": 12, "0101": 12, "010389": 34, "010399": 34, "011": 12, "0110": 12, "0111": 12, "012": 27, "012297": 5, "012345": 18, "0175000000000000": 25, "0190": 18, "02": [48, 112], "020884341620842555705": 29, "02671848900111377452242355235388489324562": 32, "03822": 112, "04": 112, "04516378011749278484458888919": 32, "04704": 113, "0472": 34, "04ea41a220": 76, "05": 17, "050584": 34, "053a045": 102, "06": [20, 70], "0652795784357498247001125598": 32, "0747": [41, 112], "08346052231061726610939702133": 32, "084489": 34, "08482bf": 102, "08b4932": 102, "09": [27, 112], "0909": 66, "0919996683503752": 113, "095": 32, "0973": 34, "099609": 27, "0_": 27, "0beta2": 92, "0d0": 46, "0d8d748": 102, "0d98945": 102, "0e": 27, "0f187e5": 102, "0l": 46, "0th": 32, "0x0": 107, "1": [4, 5, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 70, 72, 73, 75, 76, 77, 82, 83, 84, 85, 87, 92, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "10": [3, 5, 6, 10, 16, 17, 18, 22, 24, 27, 29, 30, 32, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 57, 67, 71, 75, 76, 77, 103, 109, 110, 111, 112, 119, 120, 122], "100": [5, 12, 16, 27, 41, 43, 72, 73, 74, 75, 110], "1000": [5, 12, 38, 83], "10000": [5, 43, 76], "1000000": [27, 94], "10000000": [5, 45], "100000000": [73, 74], "1000000000": 5, "100000000000000": 5, "100000000000000000000": 27, "100000000000000000000000000000": 5, "100000000000000005551115123126": 5, "10000000001": 43, "1000001": 29, "10003": 109, "1001": 12, "10020": 109, "10024": 109, "1004": 112, "10044": 110, "10052": 109, "1005285": 112, "1005328": 112, "1006": 112, "10063": 109, "10075": 109, "1009": [43, 74], "10092": 109, "10095": 109, "100x": [78, 83], "101": [12, 43], "1010": 12, "1010381": 43, "1011": 12, "10113": 109, "10134": 109, "1015": 74, "10156": 109, "10157": 110, "1016": [18, 74, 112], "10161": 109, "1018": 74, "1019": 74, "10195": 109, "10196": 109, "10198": 109, "102": [17, 41, 109], "1020": 74, "10201": 109, "1021": 74, "10210": 109, "10211": 73, "10220": 109, "10237": 109, "1024": [46, 74], "10240": 109, "10243": 109, "10255": 109, "10258": 109, "10268": 109, "10274": 109, "1027408": 102, "10290": 109, "10292": 109, "103": [17, 109], "1030": 74, "10304": 109, "10305": 110, "1031": 74, "1032": 74, "10323": 109, "10326": 109, "1033": 75, "10336": 110, "10337": 110, "1035": 74, "1036": 74, "1037": 74, "10375": 110, "10379": 110, "10382": 109, "10383": 109, "10388": 109, "1039": 74, "10391": 109, "10395": 110, "103993": 43, "103b928": 102, "10413": 110, "10414": 110, "10431": 43, "10433": 110, "104348": 43, "10445": 110, "1046": 74, "1047": 76, "10472": 73, "10488": 110, "10489": 110, "10497": 109, "105": [43, 45, 49], "10503": 109, "1051": [74, 112], "1053": [74, 112], "10567": 109, "1057": 74, "10592": 110, "106": [43, 95], "1060": 75, "10610": 109, "1063": 74, "10633": 110, "10641": 110, "10666": 74, "1067": 74, "10680": 110, "10681": 73, "10701": 110, "10710": 110, "10719": 110, "10728": 109, "1074": 74, "10740": 110, "10761": 109, "10770": 110, "10773": 110, "10782": 110, "10784": 110, "108": [24, 43, 109], "10801": 109, "10803": 109, "10804": 109, "10806": 109, "10810": 110, "10816": 110, "10821": 110, "10829": 110, "10836": 109, "1086": 74, "10867": 110, "10886": 110, "10897": 110, "108fb41": 102, "109": [43, 49, 112], "1092": 74, "10925": 110, "10931": 110, "10961": 109, "10963": 110, "10972": 110, "10974": 109, "10976": 109, "10995": 109, "10996": 73, "10999": 110, "10sin": 44, "10x": [78, 92], "11": [3, 4, 6, 17, 20, 22, 24, 27, 29, 32, 34, 41, 42, 43, 45, 47, 49, 52, 54, 57, 61, 71, 103, 111, 112, 119], "110": [12, 27], "1100": [12, 74], "11000": 110, "1101": [12, 74], "11010011000": 66, "11011": 109, "11016": 110, "11021": 110, "11026": 110, "1103": [5, 74], "11045": 110, "11049": 110, "1105": 74, "11050": 110, "11062": 109, "11063": 109, "11078": 73, "1108": 74, "11081": 109, "110896": 43, "11090": 110, "11099": 110, "111": 12, "1110": 12, "1111": 12, "11122": 110, "1114": 75, "1115": 75, "11159": 109, "1118": [43, 75], "11198": 110, "11207": 110, "1123": 75, "1124": 75, "1125": 75, "11261": 109, "11270": 109, "11275": 73, "11290": 109, "113": [5, 43, 49, 109], "11306": 110, "1131": 75, "11313": 109, "1132": 75, "11337": 34, "11351": 110, "1137796": 49, "11378": 110, "1138": 75, "113820": 43, "114": [17, 109], "1140": 75, "11407": 109, "11413": 109, "11418": 110, "11434": 109, "11435": 73, "1145": 112, "1146": 75, "11461": 110, "11496": 76, "115": 109, "11502": 73, "11525": 110, "11526": 109, "11530": 110, "11538": 110, "11547": 110, "11553": 109, "11559": 110, "11581": 73, "1159": 75, "11590": 43, "115975": 29, "116": 112, "11600": 73, "11602": 109, "1162": 75, "11623": 109, "11642": 73, "11667": 75, "11668": 72, "11672": 109, "11678": 109, "11691": 110, "117": 17, "11722": 109, "11726": 73, "11732": 73, "11746": 109, "1175": 75, "11775": 72, "1178": 43, "11799": 110, "11801": 110, "11806": 73, "11833": 75, "11841": 73, "11855": 73, "11877": 73, "11879": 110, "11881": 110, "11884": 110, "11895": 34, "1191": 76, "11911": 110, "1192": 76, "11926": 73, "1194": 76, "11944": 73, "11955": 73, "11959": 73, "11976": 73, "11981": 73, "11986": 73, "12": [3, 6, 10, 15, 16, 17, 18, 19, 22, 24, 25, 27, 29, 30, 32, 34, 41, 42, 43, 45, 46, 47, 49, 52, 57, 61, 64, 71, 72, 76, 77, 78, 79, 111, 112, 119, 120, 122], "120": [25, 27, 29, 43, 46, 52, 109, 114], "12005": 110, "12018": 110, "120694": 112, "120701": 112, "12081": 110, "1209": 76, "12092": 73, "121": [27, 43], "12114": 110, "12115": 110, "1214": 76, "1215": 76, "12163": 73, "12177": 73, "12178": 73, "1218": 76, "12180": 110, "122": 109, "12200": 73, "12221": 110, "12238": 110, "1224": 43, "1226": 76, "123": [2, 27, 29], "12303": 73, "1231026625769": 43, "1232": 76, "12325": 73, "1234": [43, 49, 76], "12345": [5, 110], "123456": 43, "12345678910111213141516": 43, "1235": 76, "12361": 73, "12369": 73, "12375": 110, "12386": 73, "12398": 110, "124": 49, "12400": 110, "12452": 73, "124a": 53, "125": [5, 27, 43, 49], "12500": 27, "12500000000000000000": 27, "125000000000000000000000000000": 5, "12506": 110, "12522": 110, "12531": 76, "12555": 110, "12569": 110, "12578": 110, "12582": 110, "126": [5, 41, 43], "12602": 72, "1268": 76, "12695": 72, "1271": 76, "1274": 76, "12747": 110, "1276": 76, "12769": 110, "127750": 64, "12792": 110, "128": [32, 43, 46, 112], "1281": 76, "1282": 76, "1283": 76, "1284": 76, "1290": 76, "1292": 76, "12942": 110, "1294585930293": 49, "1296": [20, 76], "1296959": 32, "12e": 27, "13": [3, 6, 16, 17, 22, 27, 29, 32, 41, 42, 43, 47, 49, 53, 54, 55, 57, 61, 71, 105, 111], "130": 96, "130198866629986772369127970337": 5, "13029": 75, "13071": 110, "13078": 110, "1308": 76, "13081": 110, "13098": 110, "13111": 110, "13115": 110, "1314": 76, "13149": 110, "1318": 76, "132": [24, 29], "1321": 77, "1322": 77, "1323": 77, "1325": 77, "1327": 77, "1331": 77, "13312": 110, "13332": 110, "1336": 5, "13382": 110, "13403": 110, "13416": 110, "1344": 77, "1346": 77, "13460": 110, "13462": 110, "135": 43, "13501": 110, "1352": 77, "13536": 110, "13545": 110, "13575": 110, "136": 27, "1362": 77, "13629": 110, "13645": 110, "1369": 77, "137": 29, "1373651": 43, "13750": 76, "138": 43, "1380": 77, "1383": 77, "13849": 110, "1385": 29, "13853": 110, "13886": 72, "13914": 110, "13y": 49, "14": [3, 6, 16, 17, 21, 22, 24, 27, 29, 30, 32, 41, 42, 43, 45, 46, 47, 48, 49, 52, 55, 57, 71, 101, 111, 112, 114], "140": [43, 109], "14000": 110, "14069": 77, "1407": 77, "1407633717262338957430697921446883": 43, "141": [109, 112], "1410": [49, 77], "14117": 110, "1415": 5, "14159": 110, "14159265358979": [32, 113], "141592653589793": [27, 113], "141592653589793238462643383279502884197169399375105820974944592307": 5, "141592653589793238462643383279502884197169399375105820974944592307816": 113, "14159265358979323846264338328": 5, "141592653589793238462643d0": 46, "14159265358979d0": 46, "141592654": 27, "142": 112, "14220": 72, "14289": 110, "14291": 72, "14293": 72, "14294": 72, "1430": 29, "14312": 73, "14337": 72, "14380": 72, "14384": 72, "14387": 76, "14389": 72, "14393": 72, "144": 29, "14414": 72, "14433": 76, "14442": 72, "14476": 72, "14494": 72, "14502": 76, "14590": 72, "146": 113, "14645": 72, "147": [41, 109], "14721": 72, "14738": 72, "14759": 72, "14779": 73, "14782": 72, "14791": 72, "14793": 72, "147c142": 102, "14806": 73, "14811": 72, "1482": 43, "14820": 72, "14822": 72, "14831": 72, "14874": 74, "14885": 72, "149": 43, "1497": 105, "15": [3, 5, 6, 10, 16, 17, 22, 24, 27, 29, 32, 34, 41, 42, 43, 45, 46, 47, 48, 49, 53, 55, 57, 66, 70, 71, 109, 110, 111, 113, 119], "150": [41, 49, 119], "15055": 72, "15056": 72, "151": 16, "1510": 105, "15146": 72, "152": 109, "15282": 73, "153": 120, "15311": 72, "15323": 72, "15344": 72, "15407": 72, "15413": 73, "15458": 49, "15474": 72, "15494982830181068512": 32, "15502": 72, "1551": 41, "15520": 72, "15539": 72, "15553": 73, "15561": 72, "15574": 72, "156": 109, "15673": 73, "157": [43, 112], "1570": 49, "15707": 34, "1576702": 112, "1576731": 112, "15798": 72, "158": 41, "15810": 72, "15943": 73, "15946": 73, "15984": 73, "16": [6, 8, 10, 17, 18, 21, 27, 29, 32, 34, 41, 43, 45, 46, 47, 48, 49, 57, 102, 104, 109, 112, 120], "160": [109, 112], "16038": 73, "16222": 73, "164": 109, "164081": 112, "164114": 112, "16431": 73, "16432": 73, "1644": 105, "165": 66, "16530": 73, "16562": 73, "16589": 73, "16620": 73, "16635": 73, "167": [41, 109], "16714": 73, "16720": 112, "16722": 73, "16774": 73, "16843009": 43, "1692": 41, "16951": 77, "16971": 73, "17": [5, 6, 16, 17, 18, 30, 41, 43, 48, 49, 52, 57, 64, 72, 91, 96, 99, 101, 103, 117], "1700": 105, "1703": 105, "17034": 73, "17044": 73, "1708": 105, "1712": 105, "1729": 49, "17380": 73, "17431": 73, "17453": 73, "17492": 73, "175": [41, 112], "17555": 73, "17556": 73, "176": 52, "1764": 43, "17719": 73, "17789": 73, "17792": 73, "17805383034794561964694160130": 32, "17841": 73, "17847": 73, "1786": 43, "1787": 43, "179143454621292": 32, "17982": 73, "17e8f1f": 102, "18": [17, 18, 29, 32, 41, 42, 43, 46, 47, 48, 49, 52, 54, 57, 74, 107, 112, 120], "180": 112, "18008": 73, "18014398509481984": 27, "18118": 73, "1816": 34, "18176": 73, "1823": 105, "18306": 73, "18378": 73, "18384": 73, "18399": 73, "184": 52, "18452": 73, "18470": 73, "18482": 73, "18492": 76, "18499": 73, "18501": 73, "18503986": 67, "18503986326": 67, "18507": 73, "18508": 73, "18531": 73, "1864": 105, "187": 109, "18707": 73, "18749": 73, "18751": 73, "1883": 105, "18874": 73, "1889": 34, "18894": 73, "18895": 73, "18920062": 113, "18992": 73, "18997": 73, "19": [17, 27, 32, 41, 43, 61, 97, 112], "190": 61, "19016": 34, "19026": 73, "190347": 112, "190413": 112, "19070": 73, "19076": 74, "19093197": 32, "19161": 74, "19196": 74, "1921": 43, "1940": 105, "19442": 75, "19453": 75, "1947": 105, "195": 112, "1953": 32, "1955": 105, "1958": 43, "19590": 75, "1962": 43, "1963": 112, "19630": 74, "19639": 76, "1965": 32, "1967": 112, "19670": 74, "1969": [32, 112], "1970": 105, "1971": [52, 112], "1972": 43, "1973": 112, "19745": 75, "19755": 74, "1976": 112, "19760": 74, "19766": 74, "19770": 74, "19774": 74, "1978": [12, 112], "1981": 112, "19813": 77, "1983": 64, "1984": 41, "1985": 112, "1988": 112, "1989": [54, 112], "199": 112, "1990": [18, 112], "1991": 112, "1992": [43, 112], "1993": 112, "1994": [18, 112], "1995": [41, 48, 112], "199502": 112, "1996": 112, "1997": 112, "1998": [49, 112], "19988": 74, "1999": [18, 42], "19991": 74, "1_": 27, "1c23792": 102, "1d": 102, "1e": [5, 27, 45, 70], "1e20": 27, "1ea5be8": 102, "1st": [18, 43, 52, 53, 108], "1st_exact_integr": [52, 109], "1st_homogeneous_coeff": 52, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 52, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 52, "1st_linear_constant_coeff_homogen": 53, "1st_linear_constant_coeff_integr": 53, "1st_linear_integr": 52, "2": [5, 7, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 66, 67, 70, 72, 73, 75, 76, 77, 79, 80, 82, 83, 85, 87, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "20": [5, 16, 17, 18, 25, 27, 29, 32, 43, 45, 46, 47, 48, 49, 86, 89, 100, 109, 117], "200": [41, 43, 77, 98], "2000": [43, 102, 112], "20000000": [5, 45], "2001": [18, 112], "2002": 112, "2003": [46, 49, 112], "2004": [49, 112], "2005": [43, 112], "2006": [0, 41], "2007": [0, 43, 64, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93], "2008": [41, 46, 80, 81, 82, 83, 84, 85, 94, 95, 96, 97], "2009": [43, 98, 99, 100, 112], "201": [109, 112], "2010": [20, 53, 101, 105, 112], "2011": [12, 18, 43, 102, 103], "2012": 104, "2013": [0, 105, 106], "20130629014824": 43, "2014": [2, 107, 108, 112], "2015": [0, 112], "20150716201437": 43, "2016": [109, 112], "20163": 74, "20170105021515": 17, "20170830055619": 43, "2018": 110, "20180831180321": 49, "20180831180333": 49, "20181231080858": 49, "2019": 72, "2020": 73, "20205690315959": 32, "2021": [74, 75], "2022": 0, "2023": 76, "2024": 0, "202916782076162456022877024859": 43, "203": [10, 16, 29], "20327": 77, "20360": 74, "20365": 74, "2038": 105, "20389": 74, "20391": 74, "20397": 74, "204230": 112, "20427": 77, "20444": 75, "20461": 75, "2048": [43, 46], "20484": 74, "20485": 74, "20487": 74, "20490": 74, "20491": 74, "205": [29, 109, 112], "20578": 75, "206": 112, "20610": 74, "20617": 74, "20640": 74, "20697": 75, "207": 49, "20704": 74, "2079": 10, "208": 5, "208341": 43, "20861": 75, "20874": 75, "209": 109, "20902": 75, "20913": 76, "2093": 34, "20941": 75, "20973": 75, "20985": 75, "21": [17, 27, 29, 41, 43, 46, 52, 55, 57, 108, 122], "210": [5, 43, 49], "21024": 75, "21029": 75, "21031": 75, "21034": 75, "21038": 75, "21041": 75, "21063": 75, "21075": 75, "2109": 105, "21091": 75, "211": [43, 52, 112], "21107": 75, "21121": 75, "2112723729365330143": 32, "21132": 75, "21147": 29, "21166": 75, "21167": 75, "21176": 75, "21177": 75, "21180": 75, "212": [109, 112], "21202": 75, "21227": 75, "21245": 75, "21263": 75, "21319": 75, "21334": 75, "21341": 75, "21342": 75, "21396": 75, "214": 109, "21409": 76, "21410": 75, "21430": 75, "21437": 75, "21460": 75, "21466": 75, "21477639576571": 43, "2148": 105, "21486": 75, "21493": 112, "21530": 75, "21549": 75, "21550": 75, "21557": 75, "216": 10, "21606": 75, "2161": 49, "21641": 75, "21651": 75, "217": [109, 112], "21711": 75, "21716": 75, "21721": 75, "21741": 75, "21756": 75, "2176": 105, "21760": 75, "21761": 75, "21766": 75, "21773": 75, "21785": 75, "21812": 75, "21814": 75, "218332": 66, "21852": 75, "21859": 75, "21882": 75, "21888": 75, "21890": 75, "219": [109, 112], "21905": 75, "21938": 75, "21938393439552": 32, "219383934395520": 32, "21984": 75, "21999": 75, "22": [0, 5, 17, 27, 32, 43, 48, 49, 54, 73, 93, 95, 107], "22020": 75, "220346": 112, "220376": 112, "220383": 112, "220384": 112, "22051": 75, "22058": 75, "22073": 75, "22093": 75, "221": 52, "22155": 75, "22169": 34, "22220": 75, "22248": 75, "22252": 34, "22285": 34, "22294": 75, "22322": 75, "22334": 75, "22400": 75, "22435": 75, "22450": 77, "2247": 34, "22487": 76, "22493": 76, "225": [29, 43, 112], "22558": 76, "22583": 76, "226": [17, 112], "22605": 76, "22673": 76, "227": 17, "22740742820168557599192443603787379946077222541710": 32, "22788": 76, "22827": 29, "22836": 76, "22837": 76, "22862": 76, "22863": 76, "22878": 76, "22893": 76, "229": 43, "22943": 76, "22982": 76, "22986": 76, "22c4061": 102, "23": [10, 17, 18, 27, 30, 32, 41, 43, 45, 66, 109, 110], "23069": 76, "23086": 76, "231": [43, 112], "23156": 76, "23174": 76, "232": 10, "23202": 76, "23223": 76, "23224": 76, "23231": 76, "23266": 76, "23287": 76, "23299": 76, "233": [43, 52, 112], "23319": 76, "2331v2": 66, "23399": 77, "234": 43, "23425": 76, "23432": 76, "2345": 49, "23456789123456789": 27, "23456789123457": 27, "23479": 76, "23497": 76, "23562": 76, "23585": 76, "23596": 76, "236": 43, "23605": 76, "23637": 76, "23677": 76, "236869": 112, "237": 112, "23702": 76, "23707": 76, "237088": 112, "23766": 76, "238": 43, "23836": 76, "23843": 77, "23845": 76, "23855": 76, "24": [15, 18, 19, 27, 32, 41, 43, 45, 49, 52, 64, 85, 114, 119], "240": 112, "24067": 76, "24127": 76, "24210": 76, "24225": 76, "24266": 76, "2427": 108, "243": 112, "2431": 107, "24331": 76, "24346": 76, "2434931": 43, "24360": 76, "24386": 76, "24390": 76, "24461": 76, "24477": 76, "24543": 76, "24684": 76, "247": 112, "2489": 43, "249": 112, "24928": 76, "24948": 76, "24955": 76, "24957": 76, "25": [10, 17, 18, 29, 32, 41, 42, 43, 45, 46, 49, 52, 53, 61, 83, 84], "250": [43, 49], "2507191691": 43, "2510": 106, "25142": 77, "25165": 77, "25197": 77, "252": 43, "253": [18, 109], "2531": 18, "25314": 18, "253140": 18, "25341": 77, "25399": 77, "25406": 77, "25451": 77, "25496": 77, "255": [43, 109], "25520": 77, "25521": 77, "25572": 77, "25582": 77, "25590": 77, "25592": 77, "256": [43, 46], "25603": 77, "25612": 77, "25624": 77, "25627": 77, "25679": 77, "25681": 77, "25682": 77, "25697": 77, "25698": 77, "257": [2, 43], "25701": 77, "25723": 77, "25738": 77, "25786": 77, "2580": 43, "25806": 77, "25833": 77, "258726": 112, "258784": 112, "25882": [34, 77], "25885": 77, "25886": 77, "25896": 77, "25899": 77, "25931": 77, "25965": 77, "25983": 77, "25991": 77, "26": [16, 27, 43, 49, 84, 109], "2606": 107, "26071": 77, "26119": 77, "26178": 77, "26250": 77, "2628": 108, "26313": 77, "26343": 77, "26390": 5, "264": 112, "26477": 77, "26497": 77, "26501": 77, "26502": 77, "26503": 77, "26504": 77, "26506": 77, "26513": 77, "26566": 77, "26571": 77, "26577": 77, "26629073187415": 25, "26682": 77, "26787": 77, "2683": 107, "2686": 107, "2687": 107, "27": [10, 17, 21, 43, 48, 72, 82], "2700": 49, "2720": 77, "2723": 107, "2728": 107, "2732": 107, "2734": 107, "273f450": 102, "274": 29, "27433": 34, "2744": 107, "275": 109, "276": 109, "2772": 107, "27720": 29, "278": 109, "27852": 34, "27879516692116952268509756941098324140300059345163": 32, "2788": 43, "279": 109, "2799": 110, "27s_constant": 27, "28": [5, 17, 41, 43, 49, 52, 102, 112], "280": [29, 109], "281": 18, "2813": 107, "2823": 107, "283": 110, "28333333333333": 25, "2839": 109, "284": 18, "285": [43, 112], "286": 109, "2862": 107, "2865": 109, "2866": 110, "287": 43, "288037795340032417959588909060233922890": 32, "288716": 64, "289": 112, "289025482222236": 113, "2894": 107, "2899": 34, "28complex_analysi": 11, "28group_theori": 17, "28mathemat": [18, 27, 47], "28mathematical_const": 27, "28number": 27, "28number_theori": 16, "28order": 30, "28permutation_group_theori": 17, "28set_theori": 47, "29": [11, 16, 17, 18, 27, 29, 30, 41, 43, 47, 103, 119], "290": 112, "290764986058437": 32, "291": 27, "29100619": 67, "29128599706266": 5, "2912859970626635404072825905956005414986193682745": 5, "29136443417283": 32, "292": [43, 109, 112], "2929": 109, "2943": 34, "29541": 34, "296": 112, "297": 112, "298": 109, "29999999999999998890": 27, "2b": 52, "2bk": 52, "2c99999": 102, "2d": [46, 49, 80, 82, 91, 104, 116, 117], "2d96329": 102, "2e": 27, "2f17684": 102, "2j": 10, "2j_2": 29, "2k": [6, 27, 43, 49, 52], "2l": 10, "2n": [8, 18, 25, 29, 32, 34], "2nd": [18, 43, 52, 57, 66, 104, 108], "2x": [6, 7, 44, 48, 49, 76, 83, 115], "2x2": 17, "2x_": 49, "2xy": 117, "2y": [49, 52, 117], "2z": 32, "3": [4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 83, 85, 88, 95, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 122, 123], "30": [5, 27, 29, 32, 41, 43, 45, 48, 49, 54, 57, 90, 109], "300": [41, 43, 103], "30000000000000000000": 27, "3004db8": 102, "301": [49, 112], "302": 112, "30247": 29, "304": 112, "305": 112, "307": [27, 109], "308": [109, 112], "30916": 49, "3099": 2, "31": [5, 15, 27, 43, 45, 49], "310a585": 102, "311": [27, 43, 110], "3112": 109, "31413": 34, "31417": 5, "315": 109, "316": 109, "319": 112, "3192": 43, "3193": 34, "31c9aa4": 102, "31ed8d7": 102, "32": [8, 30, 32, 41, 43, 49], "321": 110, "321371": 112, "321381": 112, "321662": 112, "321665": 112, "3222": 2, "322248": 112, "322255": 112, "323": [32, 109], "324": 112, "32555634906645": 32, "327": 52, "32767": 43, "32768": 46, "328eaba": 102, "329": [52, 112], "33": [41, 46], "330": 112, "33062": 43, "33102": 43, "33215": 43, "333": 43, "3333": 106, "33333": 5, "333333333333333": [27, 113], "333333333333333333333": 27, "334": 109, "3358": 34, "337": 109, "33795": 34, "3383aa3": 102, "33998": [34, 45], "33d8cdb": 102, "34": [18, 29, 48, 49], "34105": 29, "342923500": 38, "343415678363698242195300815958": 32, "344": 112, "345": 18, "345542": 112, "3456": 49, "345639": 112, "34635637913639": 5, "3466557686937455e": 5, "34747534407696": 30, "34785": 34, "3496": 109, "35": [20, 29, 34, 41, 43, 49, 52, 119], "350": 112, "3506": 34, "3527b64": 102, "353": 41, "3539": 109, "354": 109, "3542041": 102, "355": [5, 43, 112], "355791": 112, "355795": 112, "356": 109, "36": [20, 29, 34, 41, 43, 45, 49, 52, 109], "3600": 29, "3602879701896397": 27, "363": 43, "363263": 49, "3663": 76, "3674160": 17, "37": [16, 43, 49], "376": 112, "379": [43, 45], "379238": 43, "37a58f1": 102, "38": [41, 43, 49, 109], "380": 110, "381": 43, "382": 110, "384": 110, "387": [110, 112], "389": 110, "38e1683": 102, "39": [43, 109], "390": 110, "3904": 109, "391": 110, "3927": 34, "393": [41, 49], "39439": 34, "395": 110, "396": [5, 110], "39764993382373624267": 29, "399": 48, "3acac67": 102, "3d": [12, 43, 74, 82, 102, 104, 108], "3e763a8": 102, "3j_2": 29, "3rd": [18, 43, 57, 72], "3x": 76, "3x3": 41, "3xy": 49, "3xyz": 44, "3y": [49, 76], "4": [5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 64, 66, 67, 72, 73, 75, 76, 77, 78, 79, 80, 84, 87, 96, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 119, 120, 122], "40": [29, 32, 41, 43], "400": [45, 84, 110], "402": 41, "4029": 102, "403": 110, "404": 110, "407": 10, "408": 110, "41": [41, 43, 49, 119], "411": 110, "41230258795639848808323405461146104203453483447240": 32, "413": 110, "414": 110, "4140": 29, "415": 110, "41502d7": 102, "41577": 34, "41624341514535": 30, "417": [34, 48], "4173": 109, "4187": 109, "42": [7, 16, 27, 29, 37, 39, 41, 42, 43, 49, 109], "420": [43, 49, 110], "4200": 43, "421": 110, "423": 41, "4231": 109, "42525": 29, "425e225": 102, "426": 110, "42658": 34, "4269": 110, "4279": 106, "428": 110, "429": [29, 46], "43": [21, 43], "430": 110, "4315": 110, "433": 110, "43608": 34, "438": 110, "4381": 99, "44": [29, 43, 109], "440": 2, "4410317": 43, "445": 112, "44542": 49, "4475": 102, "448": 110, "4493": 34, "45": [27, 29, 43, 45, 49, 75, 109], "4511": 72, "45136923488338": 32, "4536": 43, "45464871": 113, "4555": 109, "456": 112, "45896": 34, "4596": 27, "45c9b22": 102, "46": 43, "461": 110, "4678": 110, "47": [29, 41, 43], "4720": 109, "473": [18, 110], "478": 72, "479": 110, "479001599": 43, "48": [49, 109, 114], "4820": 106, "4826": 102, "485": 110, "4855": 106, "4856": 109, "4862": 29, "4869863": 43, "487": 110, "4871": 102, "4877": 102, "488253406075340754500223503357": 32, "4898": 109, "49": [5, 29, 41, 43, 49, 112], "490": 18, "4915": 27, "49299": 49, "4949": 109, "496f08f": 102, "49801566811835604271": 32, "4a": [64, 103], "4ac": 49, "4b": 52, "4b75dae": 102, "4bc": 52, "4c269fe": 102, "4c88be6": 102, "4d": 43, "4ec9dc5": 102, "4th": [29, 43], "4x": 49, "5": [5, 6, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 60, 61, 66, 67, 72, 73, 77, 94, 96, 97, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 119, 120, 122, 123], "50": [5, 17, 32, 41, 43, 45, 48, 95, 96, 109], "500": [5, 108], "5000": 5, "50000000000000": [5, 27], "50000000000000000000000000000": 5, "5018": 106, "50232379629182": 32, "504": 5, "5040": 29, "504067061906928": 5, "50406706190692837199": 5, "505": 112, "5062": 102, "5079": 102, "508": 110, "5086": 102, "5091": 102, "50923695405127": 32, "5098": 102, "51": [41, 43], "510": 110, "5102": 102, "511": 29, "512": 32, "514": 112, "515": 32, "5169": 110, "5172": 109, "5173168": 32, "519": 110, "52": [7, 16, 29, 49, 52, 66, 114], "520": 110, "5221": 102, "5223": 102, "5236": 34, "5252": 102, "5253": 34, "5269": 29, "529": 110, "5295": 109, "53": [28, 41], "53087": 34, "532": 72, "534": 110, "537": 110, "538": 110, "5383": 109, "53f0e1a": 102, "54": [10, 27, 31, 66, 112], "540": 112, "5400": 49, "5404319552844595": 27, "5412": 110, "5415": 109, "5428": 72, "543": 110, "547": 110, "548120b": 102, "5484": 109, "549": 110, "55": [17, 29, 41, 49], "551": 110, "5514": 110, "55203744279187": 32, "553": [110, 112], "5539": 76, "554": 110, "5553": 112, "5555": 72, "55556": 34, "557": 110, "558": 52, "5595": 72, "56": [43, 45], "5602": 72, "5615": 103, "563": 110, "5641": 109, "5648024145755525987042919132": 32, "5649": 110, "5662": 109, "567": [30, 110], "57": [17, 43, 112], "5706": 27, "571": 110, "5728": 27, "573": 110, "574": 43, "5769": 106, "577": 110, "57721566490153286060651209008240243104215933593992": 5, "577215664901533": 5, "5772157": 27, "5773": 109, "578": 110, "5786": 110, "58": [41, 42], "580": 112, "5822": 75, "585": 110, "5850": 72, "586": 110, "5880": 29, "5888024": 102, "58c1dad": 102, "59": [41, 52], "5907": 109, "5917": 34, "5931": 106, "5934": 72, "5952": 109, "596": 110, "597": 110, "5cae972": 75, "5da0884": 102, "5df77f5": 102, "5m": [64, 107], "5th": 72, "5x": [49, 95], "5y": 49, "6": [5, 6, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 34, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 61, 64, 66, 72, 73, 75, 83, 92, 102, 103, 109, 111, 112, 114, 119, 120, 122, 123], "60": [7, 17, 19, 27, 29, 41, 43, 49, 52, 66, 109], "6000": [27, 110], "6000002": 77, "600e": 27, "60123853010113e": 5, "605": 110, "606": 110, "608": 110, "609": 110, "60fbff4": 102, "61": [29, 43], "617": 43, "6171": 109, "6179": 109, "61825902074169104140626429133247528291577794512415": 32, "619": 72, "62": 41, "620": 72, "621": 72, "622": 72, "623": 72, "62349": 34, "624": 72, "6249": 110, "625": 72, "625146415202697": 32, "627": 72, "628": 72, "63": [41, 43], "630": 72, "631": 72, "6322": 76, "6326": 76, "633": 72, "635": [5, 72], "635564016364870": 30, "635d89c": 102, "636": 72, "637": 72, "639985": 43, "64": [10, 13, 48], "6426": 110, "643": [43, 72], "6435": 29, "64493406684823": 5, "6460": 43, "64613129282185e": 5, "647": 72, "6476": 105, "6477": 105, "648": 72, "64a12a4": 102, "65": [41, 43], "65092319930185633889": 32, "65215": 34, "653": 72, "654": 72, "655": 72, "65536": 46, "65537": 43, "6572": 109, "658": 72, "659": 72, "6599": 73, "66": [29, 41, 46], "661": 72, "66317": 43, "666": 72, "667": 72, "668": 72, "669": 72, "67": [41, 109], "670": 72, "6707": 41, "673": 72, "6751": 106, "676": 49, "67721": 34, "6783": 109, "679": 72, "68": [41, 43, 49, 109], "6807": 110, "681": 72, "6822": 76, "684": 72, "686": 64, "688": 72, "69": [41, 64], "691": 72, "693147255559946": 5, "6938": 72, "694": 72, "695610": 49, "696139d": 102, "697": 72, "6a26941": 102, "6aecdb7": 102, "6ccf20c": 102, "6d560f3": 102, "6f68fa1": 2, "6th": [12, 43], "7": [5, 6, 8, 10, 12, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 32, 34, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 55, 57, 60, 61, 64, 66, 67, 72, 75, 81, 94, 109, 111, 112, 114, 119, 120, 123], "70": [27, 34, 41, 49, 69, 113], "701": 72, "7013": 105, "7018": 105, "7022": 106, "7023": 106, "70353e9": 102, "704": 72, "7047": 72, "7055": 109, "706": 41, "7063": 34, "7067": 110, "707106781186548": 30, "70711": 34, "7083": 106, "7086": 106, "7098": 109, "71": 112, "71109": 34, "712": 34, "7130": 109, "7138": 110, "715": 46, "7163": 110, "7165": 110, "717": 72, "7171": [41, 110, 112], "718281828": 27, "718281828459045235360287d0": 46, "718281828459045j": 113, "71828182845905d0": 46, "718281835": 43, "72": [27, 43, 109], "720": [52, 66], "721": 72, "7214": 110, "7216": 109, "7235": 2, "724": 72, "72463": 34, "725": 72, "7256": 109, "7259": 109, "726": 72, "727": 72, "729": [10, 72], "73": [17, 27, 43, 52], "730": 34, "73071763923152794095062": 32, "732": 72, "73205080756887729352744634151": 45, "73205080756888": 45, "7337": 73, "7383": 109, "739": 72, "7391": 76, "73fb9ac": 102, "74": 17, "741": 72, "7457": 110, "7460": 108, "7462": 108, "7464": 108, "747": 72, "74720545502474": 32, "748": 72, "75": 27, "750": 29, "7500": 108, "754": 27, "756": 43, "75734f8": 102, "7587": 108, "7599": 109, "75c8d2d": 102, "76": [29, 43, 45, 52, 112], "760939574180767": 32, "761": [29, 72], "762": 72, "7622": 108, "7625": 108, "763": 72, "7634": 108, "7635": 32, "7649": 109, "765": 72, "7655283165378005676": 32, "766": 73, "768": 72, "769": 72, "77": [16, 43, 46, 62, 120], "771": 72, "7724": 72, "7729": 49, "7737": 108, "7741": 108, "7746": 34, "775": 73, "7751": 34, "7752": 108, "777": 20, "778": 20, "7782": 108, "7789": 110, "779": 20, "78": [2, 17, 43], "780": 73, "780506": 112, "780520": 112, "7845": 34, "785": 73, "7853": [108, 109], "7854": 34, "7858": 110, "7861": 108, "787": 73, "7872": 109, "788": 73, "7891": 108, "79": [17, 18, 109], "7917": 109, "7927": 109, "794": 73, "7947": 108, "795": 73, "797": 73, "7985": 109, "7989": 108, "7995": 108, "7996": 108, "7ab2da2": 102, "7c0b857": 102, "7de602c": 102, "7eb81c9": 102, "7rc1": 76, "7y": 49, "8": [2, 3, 5, 6, 8, 10, 12, 17, 18, 19, 22, 24, 27, 28, 29, 30, 32, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 57, 60, 62, 64, 71, 75, 77, 87, 111, 112, 113, 114, 117, 119, 120, 122], "80": [17, 27, 34, 41, 43], "800204": 112, "800205": 112, "800206": 112, "80027": 112, "80045": 112, "80061": 112, "8045": 109, "8061": 109, "806288": 112, "806338": 112, "806398": 112, "8082": 108, "809": 34, "80dfe91": 102, "81": [17, 41, 112], "8129": 73, "8157": 109, "8166": 76, "81879421395609": 32, "8199": 108, "82": 17, "820": 73, "8203": 109, "821": 112, "8210": 72, "8213": 108, "8229": 109, "8241": 109, "8255": 110, "8257": 110, "828": 73, "82842712474619": 113, "8284271247461900976": 117, "8284271247461903": 117, "83": 17, "834": 73, "83711": 29, "8375": 34, "83804": 112, "84": [43, 109], "84147098": 113, "8430": 110, "8432": 109, "8433": 76, "844": 73, "8455147": 102, "8462": 109, "846749014511809332450147": 29, "8481": 109, "84f2c22": 102, "85": [16, 29, 43], "8500": 109, "851": 73, "8510": 109, "8514": 109, "853": 75, "8559934": 67, "859bb33": 102, "86": 18, "86114": [34, 45], "8634": 109, "8635": 109, "8649": 109, "866": 73, "86602": 34, "8694": 110, "8695": 73, "869604401089358618834491d0": 46, "8697": 110, "87": [17, 30, 109], "8710": 110, "87174": 34, "8724366472624298171": 32, "873": 73, "8733": 110, "8754": 110, "876": 74, "877": 29, "88": [27, 109, 112], "8804": 109, "8810": 73, "8818": 72, "8825": 109, "884": 49, "8840": 109, "8859": 73, "887": 73, "8870c8b": 102, "88889": 34, "88bf187": 102, "89": [17, 24, 112], "891": 73, "891e4d": 102, "893": 73, "8943": 110, "8945": 72, "896": 73, "8d235c7": 102, "8m": 49, "8x": [84, 96], "9": [3, 6, 8, 10, 15, 17, 18, 22, 24, 27, 28, 32, 34, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 54, 57, 64, 66, 71, 76, 104, 106, 109, 111, 112, 117, 119, 120, 123], "90": [17, 24, 27, 32, 41, 46, 48, 62, 109], "90028": 112, "90038": 112, "90097": 34, "903": 73, "9034": 109, "9044": 110, "905": 73, "9052": 109, "9053": 109, "9057": 109, "9075": 109, "909449841483": 32, "91": [10, 109, 112], "910": 73, "912285": 43, "9123": 73, "9127": 75, "9135": 110, "91596559": 27, "9173": 109, "919": 73, "9192": 109, "92": [52, 112], "920": 49, "9204": 73, "921": 73, "921_": 27, "92242131492155809316615998938": 32, "9244": 73, "927": 73, "9274": 109, "9276": 109, "928": 73, "9283": 109, "9296": 110, "93": [17, 112], "9326": 109, "9330": 29, "9334": 109, "9341": 109, "9351": 109, "9358": 75, "9366": 110, "9369318": 49, "9398": 109, "93gauss_quadratur": 34, "93jacobi_quadratur": 34, "93laguerre_quadratur": 34, "93mascheroni_const": 27, "93rabin_primality_test": 43, "93schmidt_process": 41, "94": 112, "940": 73, "9413": 109, "9424": 43, "9447": 110, "9449": 109, "9471": 109, "9479": 74, "9480": 109, "95": [24, 43, 46, 52, 62, 112], "950969b": 102, "9533": 109, "9538": 110, "9539": 109, "954": 43, "9542": 109, "9544": 72, "9545": 109, "9549": 109, "9558": 109, "956": 5, "9562288417661": 5, "957": 73, "957745a": 102, "95b4321": 102, "96": [41, 109, 110, 112], "9607": 110, "9608": 109, "9630": 110, "9634": 109, "9637": 109, "964": 73, "9652": 109, "96593": 34, "965aa91": 102, "967": 73, "9671406556917067856609794": 76, "968": 73, "97": [17, 41, 43, 72, 112], "9706": 110, "971": 73, "972": 73, "9747": 109, "975": 73, "9769d49": 102, "977": 73, "978": 112, "9781498702621": 112, "9783642052330": 112, "97851": 34, "97971": 112, "98": [17, 52, 55, 74], "9801": 5, "9808": 109, "982": 73, "9823": 109, "983": [34, 74], "9832": 109, "983697455232980674869851942390639915940": 29, "9855e": 34, "986": 49, "9862": 110, "987": 43, "99": [27, 41, 43, 109], "9900": 29, "99009901": 43, "9904": 34, "9908": 109, "991": 43, "991052601328069": 32, "9917": 109, "9927": 34, "994": 73, "995322265018952734162069256367": 32, "9956": 109, "996": 73, "9983": 73, "9983341664682815": 113, "998334166468282": 113, "999999984582742099719981147840": 32, "99a271": 102, "9aeb220": 102, "9c6bf0f": 102, "A": [0, 5, 6, 7, 8, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 75, 89, 102, 103, 104, 106, 107, 108, 109, 112, 119, 121], "AND": [0, 36], "AS": 0, "And": [6, 25, 27, 36, 48, 49, 77, 103, 104, 109, 110, 113], "As": [5, 6, 8, 17, 27, 28, 29, 32, 36, 41, 46, 47, 52, 66, 67, 108, 114, 118, 120, 121, 122, 123], "At": [8, 22, 27, 32, 43], "BE": 0, "BUT": 0, "BY": [0, 49], "Be": [10, 27, 41, 52, 67, 72], "Being": 22, "But": [2, 8, 10, 27, 32, 41, 42, 43, 48, 49, 60, 64, 66, 108, 113, 115, 117, 118, 120, 122], "By": [5, 6, 10, 27, 29, 32, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 52, 59, 66, 113], "FOR": 0, "For": [4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 22, 25, 27, 28, 29, 30, 32, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49, 52, 57, 59, 60, 61, 62, 64, 66, 103, 105, 106, 108, 111, 113, 114, 115, 120, 122], "IF": 0, "IN": 0, "ITE": [36, 102, 110], "If": [2, 3, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 22, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 66, 67, 70, 102, 103, 105, 107, 108, 109, 113, 114, 116, 119, 120, 121, 123], "In": [5, 6, 8, 10, 12, 16, 17, 18, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 59, 62, 64, 66, 67, 76, 102, 103, 104, 106, 108, 112, 113, 115, 116, 117, 119, 120, 121, 122], "It": [2, 5, 6, 7, 8, 10, 15, 17, 18, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 34, 36, 41, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 66, 67, 103, 104, 106, 107, 108, 113, 114, 115, 116, 119, 120, 122], "Its": [10, 46, 119], "NO": 0, "NOT": [0, 61], "No": [2, 27, 32, 36, 43, 45, 48, 49, 55, 60, 64, 72, 109, 110, 113], "Not": [3, 27, 29, 31, 36, 46, 71, 77, 109, 110], "OF": [0, 64], "ON": 0, "OR": [0, 36], "Of": [6, 25, 41, 66, 109, 110], "On": [4, 10, 19, 32, 36, 41, 45, 46, 52, 64, 112], "One": [2, 6, 7, 18, 30, 34, 41, 43, 45, 48, 57, 104, 113, 115, 119], "Or": [17, 27, 36, 48, 103, 110], "SUCH": 0, "Such": [2, 7, 8, 27, 48, 113, 114], "THE": 0, "TO": 0, "That": [27, 30, 52, 61, 62, 66, 120, 122], "The": [0, 2, 3, 4, 5, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 66, 67, 73, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "Their": [10, 27, 32, 112], "Then": [6, 7, 8, 10, 22, 25, 27, 41, 47, 48, 49, 52, 106], "There": [6, 8, 17, 18, 19, 20, 23, 27, 28, 29, 32, 34, 36, 41, 43, 45, 47, 49, 52, 54, 60, 64, 67, 73, 104, 114, 115, 118, 122], "These": [6, 8, 17, 25, 34, 44, 46, 49, 52, 53, 61, 62, 66, 72, 73, 74, 75, 76, 77, 103, 104, 106, 109, 110, 122], "To": [2, 4, 5, 6, 8, 10, 17, 22, 25, 27, 29, 30, 32, 34, 36, 38, 41, 45, 49, 52, 53, 57, 59, 60, 61, 64, 66, 67, 70, 104, 105, 108, 113, 114, 115, 117, 119, 121, 122, 123], "Will": 41, "With": [5, 6, 10, 25, 27, 43, 46, 48, 57, 106, 110, 120], "_": [5, 6, 8, 10, 11, 15, 16, 17, 18, 19, 22, 25, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 52, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "_0": [6, 28, 67], "_1": [8, 32, 67], "_1f_1": 32, "__": [34, 46, 60], "___": [5, 25, 29, 34, 35, 41, 48, 60, 114, 117, 120, 121, 122, 123], "____": [5, 25, 113, 117, 119, 122], "_____": 25, "______": 60, "________": 122, "___________": [5, 52, 119], "________________": 52, "__________________": 52, "__abs__": 102, "__add__": 10, "__call__": [18, 109], "__class__": 77, "__complex__": 104, "__contains__": 17, "__delitem__": 72, "__divmod__": [28, 72], "__eq__": [10, 17, 84, 110], "__flatten_args__": 67, "__float__": 104, "__floordiv__": 28, "__getitem__": [10, 27, 37, 60, 74], "__init__": [108, 118], "__int__": 83, "__iter__": [18, 27, 48], "__mod__": 28, "__mul__": [10, 13, 17, 37, 41], "__ne__": [76, 84], "__new__": [17, 27, 118], "__nonzero__": 84, "__pow__": 10, "__radd__": 10, "__repr__": 109, "__rmul__": 10, "__rsub__": 10, "__setitem__": 10, "__sub__": 10, "__truediv__": 28, "__weakref__": 10, "_a": [22, 32, 45], "_af_par": 18, "_af_rmul": 22, "_alpha_to_z": 10, "_arg": 88, "_array_form": 18, "_as_integr": 34, "_assumpt": 27, "_b": [22, 32], "_base_ord": 24, "_basic_orbit": 17, "_best": 52, "_ccode": 46, "_check_cycles_alt_sym": [17, 24], "_chinese_remainder_reconstruct": 10, "_clash": 27, "_clash1": 27, "_clash2": 27, "_cmp_perm_list": 23, "_coeffexpvalueerror": 77, "_collapse_extra": 34, "_compute_transform": 34, "_create_lookup_t": 6, "_denomin": 10, "_desolv": 56, "_dict": 49, "_diff_wrt": 27, "_diofant_": 27, "_diofantrepr": 46, "_diofantstr": 46, "_diophantin": 10, "_diophantine_univari": 10, "_distinct_prime_divisor": 10, "_distribute_gens_by_bas": 24, "_div": 10, "_euclidean_algorithm": 10, "_eval_appli": 92, "_eval_as_leading_term": 27, "_eval_deriv": [27, 110], "_eval_eq": 27, "_eval_expand_complex": 27, "_eval_expand_doubl": 27, "_eval_expand_hint": [27, 104], "_eval_integr": 34, "_eval_is_": 73, "_eval_is_r": [27, 31], "_eval_nseri": 27, "_eval_template_is_attr": 109, "_evaluate_ground": 10, "_extended_euclidean_algorithm": 10, "_factor": 10, "_fcode": 46, "_func_field_modgcd_m": 10, "_func_field_modgcd_p": 10, "_gcd": 10, "_gcd_term": 27, "_gf_gcdex": 10, "_handle_integr": 52, "_handle_precomputed_bsg": 24, "_hensel_lift": 10, "_imp_": [61, 67, 73], "_integr": [52, 53], "_interpol": 10, "_iszero": 41, "_k": [29, 32], "_lambda": 41, "_latex": 46, "_leading_coeff": 10, "_linear_2eq_order1_type3": 52, "_linear_2eq_order1_type4": 52, "_linear_2eq_order1_type5": 52, "_linear_2eq_order1_type6": 52, "_linear_2eq_order1_type7": 52, "_linear_2eq_order2_type1": 52, "_linear_2eq_order2_type11": 52, "_linear_2eq_order2_type2": 52, "_linear_2eq_order2_type3": 52, "_linear_2eq_order2_type5": 52, "_linear_2eq_order2_type6": 52, "_linear_2eq_order2_type7": 52, "_linear_2eq_order2_type8": 52, "_linear_2eq_order2_type9": 52, "_linear_3eq_order1_type4": 52, "_list": 43, "_mathml": 46, "_mcode": 46, "_minpoly_from_dens": 10, "_modgcd_p": 10, "_monic_associ": 10, "_mpf_": 27, "_mul_as_two_part": 6, "_mytyp": 6, "_n": [8, 29, 32, 34], "_naive_list_centr": 23, "_name": 34, "_node": 66, "_nonlinear_2eq_order1_type1": 52, "_nonlinear_2eq_order1_type2": 52, "_nonlinear_2eq_order1_type3": 52, "_nonlinear_2eq_order1_type4": 52, "_nonlinear_2eq_order1_type5": 52, "_nonlinear_3eq_order1_type1": 52, "_nonlinear_3eq_order1_type2": 52, "_orbits_transversals_from_bsg": 24, "_p": [8, 10, 48], "_padic_lift": 10, "_pf_q": [8, 32], "_prec": 27, "_preprocess": [53, 56], "_primitive_in_x0": 10, "_print": 46, "_print_": 46, "_print_atom": 46, "_print_bar": 46, "_print_bas": 46, "_print_deriv": 46, "_print_foo": 46, "_print_funct": 46, "_print_hyp": 46, "_print_meijerg": 46, "_print_numb": 46, "_print_rat": 46, "_print_sin": 46, "_print_tan": 46, "_q": 10, "_r": 8, "_random_gen": 17, "_random_pr_init": 17, "_random_prec": 17, "_rang": 64, "_rational_function_reconstruct": 10, "_rational_reconstruction_func_coeff": 10, "_rational_reconstruction_int_coeff": 10, "_remove_gen": 24, "_rewrite1": 6, "_rewrite2": 6, "_rewrite_saxena": 6, "_rewrite_saxena_1": 6, "_rewrite_singl": 6, "_sage_": 90, "_same_": 66, "_smat": 42, "_split_mul": 6, "_sqf_p": 10, "_strip": [17, 24], "_strong_gens_from_distr": 24, "_subs_ground": 10, "_succ": 17, "_t": [8, 34], "_test_evaluation_point": 10, "_test_prim": 10, "_to_anp_poli": 10, "_to_zz_poli": 10, "_token_splitt": 44, "_trunc": 10, "_tupl": 43, "_undetermined_coefficients_match": 52, "_union_find_merg": 17, "_union_find_rep": 17, "_verify_bsg": [17, 23, 24], "_verify_centr": 23, "_verify_normal_closur": 23, "_w": [45, 76], "_w0_0": 41, "_w1_0": 41, "_w2_0": 41, "_x": [25, 48, 52, 103], "_xi_1": [27, 53], "_y": 25, "_z_to_alpha": 10, "_zz_heu_gcd": 10, "a0": 22, "a066272": 43, "a066272a": 43, "a0ab479": 102, "a1": [22, 41, 43, 57], "a2": [22, 41, 43, 57], "a2idx": 41, "a3": [22, 41], "a30c5a3": 102, "a4": 22, "a4ea170": 102, "a5": 22, "a72d188": 102, "a8f20e6": 102, "a_": [6, 8, 22, 25, 27, 32, 49, 52, 57, 106], "a_0": [49, 52, 57], "a_1": [6, 8, 10, 17, 32, 49, 52], "a_1x_1": 49, "a_2": [8, 17, 49, 52], "a_2x_2": 49, "a_3": 52, "a_i": [6, 8], "a_j": [6, 8, 32], "a_k": 17, "a_m": 22, "a_n": [6, 10, 22, 32, 49, 52], "a_nx_n": 49, "a_p": [6, 8, 32], "a_r": 8, "a_x": 46, "aa_factor_method": 73, "aab": 66, "aand": 32, "aaron": [100, 105, 109], "ab": [5, 6, 25, 27, 29, 31, 32, 41, 46, 49, 52, 64, 72, 73, 75, 77, 102, 109, 110, 112], "aba": 66, "abb": [64, 66], "abbrevi": [46, 57], "abc": [4, 17, 25, 27, 32, 34, 35, 41, 45, 46, 48, 49, 57, 62, 64, 66, 67, 89], "abcd": [16, 19], "abe1c49": 102, "abelian": [15, 17], "abeliangroup": 15, "abi": 66, "abil": [41, 52, 105, 117], "abl": [5, 22, 27, 34, 41, 52, 110, 122], "abnorm": 10, "about": [2, 3, 5, 17, 18, 19, 20, 27, 30, 34, 41, 43, 46, 48, 49, 52, 59, 60, 61, 62, 63, 64, 71, 101, 105, 109, 113, 118, 119, 122], "aboutu": 109, "abov": [0, 4, 6, 7, 8, 10, 12, 17, 18, 22, 27, 29, 32, 34, 36, 41, 46, 48, 49, 52, 54, 55, 59, 60, 61, 62, 67, 102, 103, 104, 113, 115, 117, 122], "above_fermi": 32, "abpetkovvsek95": [54, 112], "abr71": [28, 112], "abr95": [54, 112], "abracadabra": 66, "abramov": [54, 112], "abramowitz": 32, "absenc": 22, "absent": 12, "absolut": [6, 8, 27, 30, 34, 48, 75], "absorb": [6, 48, 52], "absorpt": 52, "abstract": [16, 32, 33, 38, 62, 102], "ac": [18, 48, 49], "academ": [12, 112], "acceler": [64, 91], "accept": [4, 8, 17, 27, 30, 34, 36, 41, 44, 45, 46, 48, 60, 61, 66, 67, 73, 94, 102, 104, 110], "accepted_latex_funct": 46, "access": [10, 27, 32, 36, 38, 41, 48, 52, 57, 59, 61, 62, 88, 96, 103, 105, 107, 108, 110, 113], "accomplish": 34, "accord": [7, 10, 15, 17, 18, 22, 25, 27, 43, 49, 62, 66, 72], "accordingli": 17, "account": [2, 48, 52, 77, 103], "accross": 106, "accumul": 64, "accur": [5, 27, 43, 96], "accuraci": [9, 27, 45], "acd1685": 102, "acdca": 48, "acfbe75": 102, "achiev": [5, 8, 27, 32, 43, 48, 83], "acm": [41, 52, 112], "aco": [31, 52, 109, 110, 115], "acosh": [31, 76], "acot": [31, 77, 109], "acoth": [31, 76], "across": [24, 25, 46, 64, 65, 66, 106], "acsc": [31, 108], "act": [17, 18, 22, 27, 36, 104, 106], "action": [17, 27, 45, 48, 73, 102], "activest": 66, "actor": 112, "actual": [6, 8, 16, 17, 24, 27, 32, 34, 38, 41, 43, 46, 47, 48, 49, 52, 61, 64, 108], "ad": [2, 8, 10, 12, 27, 43, 44, 46, 49, 52, 72, 73, 74, 75, 77, 80, 81, 83, 84, 87, 92, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110], "adam": 112, "adapt": [54, 66, 73, 75, 96, 111], "add": [1, 2, 5, 8, 10, 16, 22, 33, 35, 38, 41, 42, 43, 45, 46, 48, 49, 52, 53, 59, 60, 63, 67, 72, 73, 74, 75, 76, 94, 96, 99, 102, 103, 106, 108, 109, 110, 115, 118], "add_formula": 8, "add_ground": 72, "addb": 8, "addend": 43, "addison": [12, 18, 43, 112], "addit": [6, 8, 10, 18, 25, 27, 34, 38, 41, 44, 46, 48, 49, 52, 53, 61, 62, 64, 66, 96, 102, 103, 104, 105, 106, 108, 109, 110, 113, 115, 118, 119, 120, 121], "addition": [27, 46, 113], "address": [7, 46, 72, 73, 74, 75, 76, 77, 109, 110], "adequ": 46, "adher": [2, 6, 102], "adic": 112, "adj": 41, "adjac": [18, 45, 66], "adjoin": [10, 17], "adjoint": [27, 31, 37, 39, 41, 105], "adjug": 41, "administr": 112, "admit": [32, 52], "adopt": [2, 17, 25, 109], "advanc": [5, 17, 27, 29, 41, 45, 61, 62, 66, 112, 116], "advantag": [5, 27, 36, 43, 49, 52, 64], "advis": 0, "aeqb": 112, "aeronaut": 112, "af": [15, 17, 23], "afb3886": 102, "affect": [2, 25, 27, 41, 104], "affin": [27, 106], "aforement": 49, "after": [0, 2, 7, 10, 15, 17, 18, 22, 24, 25, 27, 34, 41, 42, 43, 44, 46, 49, 52, 53, 57, 63, 66, 69, 74, 104, 109, 110, 113, 120, 122], "afterward": 27, "afunc": 67, "ag": 52, "again": [8, 27, 32, 52, 87, 88, 115, 122], "against": [2, 27, 41, 79, 109], "agca": [104, 110], "agnost": 62, "agre": [6, 8, 27, 32, 70, 72], "agument": 62, "ahead": 43, "ai": [10, 32, 43, 49, 107], "aid": [104, 112, 117], "aim": [6, 8, 52, 116], "airi": [31, 34, 107], "airy_funct": 32, "airyai": [32, 107], "airyaiprim": [32, 107], "airybas": 32, "airybi": [32, 107, 109], "airybiprim": [32, 107], "airyfunct": 32, "aitken_html": 49, "ajwa": 112, "ak": 112, "al": [48, 83], "al94": [10, 112], "albeit": 34, "alembertian": 54, "alessandro": 112, "alexandria": [0, 49], "alg": [28, 109], "algebra": [5, 6, 9, 11, 17, 27, 28, 30, 33, 34, 40, 43, 49, 50, 51, 52, 54, 72, 73, 76, 77, 99, 102, 104, 105, 106, 110, 112, 115, 116, 117, 120], "algebraic_express": 27, "algebraic_field": [10, 28, 45, 72, 73], "algebraic_numb": 27, "algebraiccomput": 27, "algebraicfield": [28, 72, 74], "algebraicnumb": [72, 110], "algo": 18, "algo2008": 18, "algorithm": [3, 5, 6, 9, 11, 12, 13, 17, 18, 20, 22, 24, 25, 27, 29, 33, 34, 36, 41, 42, 43, 48, 49, 52, 54, 55, 64, 72, 73, 74, 75, 76, 84, 88, 95, 99, 102, 103, 104, 105, 107, 108, 109, 112, 114, 120, 122], "algorithmist": 17, "alia": [11, 19, 27, 28, 37, 40, 42, 47, 49, 57, 72, 77, 110], "alias": 28, "alic": 17, "align": [8, 41, 46, 73], "all": [0, 2, 5, 6, 7, 8, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 70, 72, 73, 76, 80, 83, 85, 88, 94, 95, 96, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 119, 122], "all_coeff": 45, "all_integr": [52, 53], "all_model": 36, "all_root": [43, 45, 72, 110], "allan": 112, "allei": 32, "allhint": 53, "alloc": [5, 30], "allow": [1, 5, 6, 10, 12, 17, 19, 25, 27, 28, 35, 36, 38, 39, 41, 43, 44, 45, 46, 48, 52, 57, 60, 66, 67, 73, 76, 102, 103, 104, 108, 113, 118, 122], "allow_half": 27, "allow_hyp": [32, 48], "almost": [28, 39, 52, 64, 66, 95, 103, 113, 122], "almost_linear_integr": 52, "almosteq": [28, 74], "alon": [10, 48, 52, 54, 60, 117], "along": [6, 17, 27, 32, 38, 41, 42, 49, 66], "alpertron": 49, "alpha": [2, 10, 17, 28, 32, 34, 45, 46, 48, 52], "alpha_1": 43, "alpha_2": 43, "alpha_k": 43, "alpha_r": 8, "alphabet": [27, 49, 62, 120], "alphanumer": 52, "alreadi": [8, 10, 27, 31, 33, 34, 41, 43, 48, 52, 83, 116, 121], "also": [2, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 25, 27, 28, 29, 30, 31, 32, 34, 36, 39, 41, 43, 45, 46, 47, 48, 49, 52, 53, 54, 57, 59, 60, 61, 62, 64, 66, 67, 72, 73, 74, 75, 76, 77, 83, 89, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "alter": [17, 27], "altern": [15, 17, 18, 30, 32, 38, 42, 46, 104, 109], "alternating_permut": 29, "alternatinggroup": [15, 17, 23], "alternatingpermut": 29, "although": [6, 10, 18, 27, 34, 41, 43, 48, 49, 66, 67, 104, 122], "alw95": [10, 112], "alwai": [5, 6, 7, 8, 17, 18, 25, 27, 28, 30, 32, 34, 36, 41, 43, 45, 47, 48, 49, 52, 53, 62, 66, 67, 77, 90, 103, 104, 114, 115, 117, 118, 122], "am": 43, "amalgam": 6, "ambigu": [27, 48, 59], "amd64": 97, "amend": 17, "american": 112, "ami": 43, "ami_42_from129to134": 43, "among": [12, 18, 45, 52, 57, 59], "amount": [10, 27], "amsmath": 46, "an": [2, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 66, 67, 69, 72, 73, 74, 75, 77, 83, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123], "analog": [10, 19, 29, 57], "analogi": 10, "analogu": 25, "analysi": [8, 17, 27, 30, 108], "analyt": [6, 29, 32, 52], "analyz": [48, 60], "andreescu": 49, "andrica": 49, "andr\u00e9": 75, "angl": [30, 32, 104, 107, 122], "angleformula": 27, "angular": [102, 104], "ani": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 24, 25, 27, 30, 32, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 60, 61, 64, 66, 67, 73, 76, 90, 102, 103, 104, 106, 107, 109, 110, 113, 117, 120, 122, 123], "anihil": 102, "anipul": 112, "annal": 18, "annihil": [25, 27], "annot": [43, 46], "annoy": 27, "anoth": [6, 8, 10, 18, 23, 27, 30, 32, 34, 41, 43, 45, 46, 47, 52, 61, 62, 76, 104, 108, 117, 122], "anp": 72, "answer": [5, 6, 7, 8, 10, 17, 27, 34, 41, 43, 48, 55, 64, 72, 73, 75, 76, 77, 104, 105, 109, 110, 117], "anti": [22, 34, 41], "anti_symmetr": 41, "anticommut": [22, 102], "antideriv": [32, 34], "antidivisor": 43, "antidivisor_count": 43, "antisym": 22, "antisymmetr": [22, 41], "anymor": [72, 74, 83, 84, 106, 108], "anyon": 9, "anyth": [2, 27, 41, 46, 48, 52, 66, 70, 115], "anytim": 9, "anywai": [6, 48, 52], "anywher": [32, 66, 69], "aother": 32, "ap": [8, 32], "apart": [5, 10, 17, 22, 27, 30, 34, 45, 49, 73, 74, 87, 118, 122], "apart_list": 45, "api": [9, 10, 27, 33, 49, 65, 104, 108, 116], "appar": 27, "appeal": 6, "appear": [6, 10, 12, 16, 17, 27, 34, 41, 45, 46, 48, 52, 53, 59, 66, 67, 75], "append": [27, 42, 62], "appetit": 117, "appli": [9, 10, 17, 18, 19, 24, 25, 27, 30, 31, 36, 37, 39, 41, 42, 43, 44, 45, 48, 52, 53, 57, 59, 66, 67, 74, 104, 106, 112, 122], "applic": [12, 17, 19, 27, 34, 41, 43, 45, 46, 48, 54, 62, 66, 112, 123], "appliedundef": 27, "applyfunc": [37, 41, 42, 57], "applylog": 88, "appm90": [6, 8, 112], "approach": [10, 11, 27, 34, 41, 53, 54, 61, 64, 102, 112], "appropri": [27, 30, 41, 45, 46, 48, 49, 52, 60, 62, 83], "approx": [27, 34], "approxim": [5, 17, 25, 27, 32, 34, 41, 43, 45, 102, 108, 112, 117], "approximation_interv": 27, "apr": [73, 76, 84, 98], "apt": 4, "ar": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 83, 84, 85, 88, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "arang": 61, "arbitrari": [5, 13, 18, 19, 25, 27, 28, 29, 32, 36, 41, 48, 52, 53, 54, 55, 66, 67, 78, 104, 105, 106, 108, 113, 114, 120, 122, 123], "arbitrarili": [8, 10, 27, 43, 52, 53, 108], "arbitrary_matrix": 41, "arc": 30, "arcco": [30, 46, 115], "arccot": 30, "arccsc": 30, "architectur": 97, "archiv": [17, 43, 49, 111], "arcsec": 30, "arcsin": [30, 46, 115], "arctan": [30, 46, 67, 77], "arctan2": 30, "area": 27, "aren": 27, "arg": [6, 12, 17, 18, 20, 23, 25, 27, 29, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 55, 57, 60, 61, 62, 66, 67, 82, 83, 88, 102, 103, 109, 110, 118], "argand": 9, "argiment": 110, "argindex": [27, 30, 31], "args_cnc": 27, "argu": 43, "argument": [5, 6, 8, 10, 17, 18, 21, 24, 25, 27, 29, 30, 31, 32, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 52, 53, 59, 60, 61, 62, 64, 66, 67, 70, 72, 73, 74, 77, 85, 88, 94, 102, 103, 104, 105, 107, 108, 109, 110, 114, 118, 119, 120, 122], "argument_sequ": 62, "argument_test": 46, "ari": 103, "arieti": 112, "aris": [0, 6, 29], "arithemet": 110, "arithmet": [5, 10, 11, 27, 41, 43, 45, 83, 102, 110, 115, 122], "arithmeth": 96, "arithmetica": [0, 49], "armstrong": 15, "arno": 112, "around": [5, 7, 10, 11, 16, 18, 27, 30, 34, 43, 46, 49, 52, 72, 74, 76, 114, 117], "arrai": [5, 17, 18, 22, 23, 32, 33, 34, 41, 43, 46, 58, 60, 61, 62, 64, 67, 73, 80, 101, 102, 108, 109], "arrang": [18, 37, 49, 75], "array_form": [18, 19], "arriv": [8, 48, 52], "arrow": 46, "art": [12, 18, 46, 64, 107], "artial": 112, "articl": [41, 112], "artifact": 41, "arw96": [45, 112], "arxiv": [66, 112], "as_add": 27, "as_bas": 102, "as_base_exp": [27, 66, 75], "as_coef_add": 27, "as_coef_mul": 27, "as_coeff_add": [27, 102, 105], "as_coeff_expon": 27, "as_coeff_factor": [102, 105], "as_coeff_mul": [27, 102, 105], "as_coeff_term": [102, 105], "as_coeffici": [27, 102], "as_coefficients_dict": 27, "as_content_primit": [27, 41, 45, 110], "as_dict": [16, 45, 72], "as_dummi": [25, 34], "as_explicit": 38, "as_expr": [27, 41, 45, 102], "as_ferr": 16, "as_immut": [37, 42], "as_independ": [27, 83, 103], "as_int": 27, "as_leading_term": [11, 27, 73, 75, 77], "as_mut": [37, 38, 39, 42], "as_numer_denom": [27, 100], "as_ordered_factor": [27, 66], "as_ordered_term": [27, 66, 103], "as_poli": [27, 45, 76], "as_powers_dict": 27, "as_properti": 27, "as_real_imag": [27, 30, 122], "as_rel": [47, 103], "as_set": [27, 107], "as_sum": 34, "as_term": 27, "as_tupl": 10, "as_two_term": 27, "asa": 104, "ascend": [18, 66, 74], "ascent": 18, "ascii": [46, 77, 110], "asec": [31, 108], "aseri": [27, 75, 109], "ases": 112, "asid": [36, 52, 53, 117], "asin": [8, 31, 32, 46, 75, 115], "asinh": [31, 76], "ask": [6, 27, 47, 66], "askevenhandl": 75, "aspect": 113, "aspx": 52, "assembl": 6, "assemble_partfrac_list": 45, "assert": [16, 17, 18, 52, 53], "assign": [22, 26, 36, 41, 46, 55, 62, 108], "assign_to": 46, "assignmenterror": 46, "assist": [52, 104], "assoc_laguerr": 32, "assoc_legendr": 32, "associ": [8, 10, 24, 27, 28, 32, 49, 75, 107], "associated_legendre_polynomi": 32, "associatedlaguerrepolynomi": 32, "assocop": 109, "assoti": 83, "assum": [2, 3, 6, 8, 10, 11, 12, 16, 17, 27, 32, 34, 41, 43, 46, 48, 49, 52, 53, 55, 59, 60, 62, 66, 76, 105, 106, 113, 116, 117, 123], "assume_pos_r": 102, "assumpt": [5, 17, 20, 25, 30, 33, 34, 36, 38, 47, 48, 52, 55, 56, 62, 66, 73, 75, 83, 96, 100, 102, 105, 108, 109, 110, 116, 122], "assumption0": 110, "assur": 43, "ast": [27, 35, 80, 97, 109, 110], "asymp": 7, "asymptot": [6, 27, 77, 109, 114], "asymptotic_expans": 27, "atan": [5, 31, 52, 67, 77], "atan2": [31, 83], "atanh": [8, 31], "ation": 112, "atkinson": 17, "atom": [18, 27, 36, 41, 46, 60, 83, 102, 104, 110], "atom_nam": 46, "atomicexpr": [33, 102], "atop": [8, 29, 32], "attach": [6, 20, 61, 67], "attempt": [5, 17, 22, 24, 27, 34, 43, 46, 48, 49, 52, 104], "attent": [17, 30, 67], "attribut": [17, 18, 27, 32, 38, 41, 48, 60, 61, 63, 67, 72, 73, 74, 75, 77, 96, 107, 108, 110, 113, 118], "attributeerror": [27, 41, 75, 76, 109, 110], "atv": 52, "au": 52, "aug": [78, 79, 86, 96], "augment": [42, 55], "august": [52, 64], "author": [103, 109], "auto": [1, 27, 45, 46, 48, 52, 75, 110], "auto_int_to_integ": 109, "auto_numb": 44, "auto_symbol": [44, 109], "autodetect": [52, 53], "autoexpand": 48, "autom": [5, 61, 109], "automag": 27, "automat": [1, 5, 6, 8, 11, 18, 27, 28, 29, 30, 31, 32, 33, 35, 36, 43, 44, 45, 48, 49, 52, 55, 60, 61, 62, 72, 73, 81, 99, 102, 104, 105, 106, 108, 109, 115, 117, 121, 123], "automaticsymbol": 35, "autonom": 52, "autos": 18, "autosimplif": [27, 48], "autowrap": [5, 33, 60, 62, 65, 76, 105, 108, 109, 110], "auxiliari": 34, "auxillari": 61, "avail": [8, 17, 18, 25, 27, 28, 32, 34, 41, 45, 46, 47, 48, 49, 57, 60, 66, 67, 89, 106, 108, 110, 121, 122], "averag": [34, 43, 83, 84, 96], "avich": 109, "avoid": [2, 27, 30, 32, 34, 36, 41, 44, 46, 52, 59, 62, 66, 101, 106, 117], "awai": 46, "awar": [5, 8, 27, 41, 67, 102], "ax": [5, 6, 10, 41, 42, 49, 52, 57, 60, 106, 108], "ax2p": 49, "axi": [6, 19, 29, 30, 41], "axiom": 17, "az": 49, "b": [0, 2, 3, 5, 6, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 57, 60, 63, 64, 66, 70, 73, 102, 103, 104, 106, 107, 108, 109, 110, 112, 117, 122, 123], "b0": [8, 22, 32], "b097b01": 102, "b1": [8, 17, 22], "b1b10ed": 102, "b1c49cd": 102, "b1prime": 8, "b2": 8, "b2ce27b": 102, "b348b30": 102, "b6bius_funct": 43, "b8fbd59": 102, "b9c2a9a": 102, "b_": [6, 8, 17, 22, 24, 27, 29, 32, 49, 57], "b_0": [8, 22, 29, 49], "b_1": [6, 8, 17, 24, 32, 49, 52], "b_2": [8, 17, 24, 52], "b_3": 52, "b_i": [6, 8, 17, 22, 24], "b_j": [6, 8, 22, 24, 32], "b_k": [17, 24, 29, 32], "b_m": [6, 32], "b_n": 29, "b_q": [6, 8, 32], "b_r": 17, "baa": 66, "bab": 15, "babi": [43, 66], "back": [0, 5, 6, 8, 22, 25, 30, 32, 34, 43, 46, 52, 57, 104, 110, 113], "backend": [61, 103, 108], "background": 32, "backslash": [27, 46], "backtrack": [24, 104], "backward": [71, 102], "bad": [43, 76, 109, 110], "badli": 17, "bailei": 84, "banana": 66, "band": 41, "bar": [32, 46], "bare": 72, "barei": 73, "bareiss": [41, 73], "barn": 32, "barri": [66, 112], "base": [8, 10, 16, 17, 22, 23, 24, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 41, 42, 43, 45, 46, 47, 48, 49, 52, 59, 60, 61, 62, 63, 64, 66, 72, 73, 76, 77, 97, 102, 103, 104, 106, 107, 110, 112, 116, 122], "base1": 22, "base2": 22, "base2a": 22, "base_a": 22, "base_f": 22, "base_i": 22, "base_ord": 24, "base_set": 47, "baselin": [46, 73], "basenam": [61, 62], "basepolynomialerror": 10, "baseswap": 17, "basi": [8, 9, 38, 41, 45, 48, 54, 57, 66, 74, 103, 104, 106, 109, 110], "basic": [3, 5, 6, 7, 10, 15, 17, 21, 24, 25, 30, 33, 34, 36, 39, 40, 46, 48, 52, 53, 54, 62, 66, 72, 75, 77, 83, 84, 85, 102, 104, 105, 106, 107, 109, 110, 114, 116, 122], "basic_orbit": [17, 24], "basic_stabil": 17, "basic_transvers": [17, 24], "basicmeth": 83, "bateman": 32, "bb": 48, "bb1": 48, "bb2": 48, "bby": 66, "bc": 52, "bd0be06": 102, "be1": 48, "be2": 48, "be319badf5": 76, "beam": 104, "becaus": [2, 5, 6, 8, 10, 18, 27, 30, 32, 33, 34, 39, 41, 43, 45, 48, 49, 52, 53, 61, 66, 77, 102, 103, 109, 110, 114, 117, 119], "becker": 112, "becom": [5, 22, 25, 27, 31, 35, 44, 52, 122], "been": [5, 6, 8, 10, 17, 18, 19, 22, 27, 34, 43, 48, 53, 57, 62, 66, 71, 76, 102, 103, 104, 105, 106, 107, 108, 117], "befor": [2, 10, 20, 22, 27, 32, 41, 43, 44, 45, 46, 47, 48, 49, 52, 55, 56, 63, 66, 76, 108, 115, 116, 122], "beforehand": 62, "begin": [3, 6, 8, 27, 30, 32, 41, 43, 46, 49, 52, 53, 69, 104, 115, 117], "behav": [27, 30, 32, 43, 45, 47, 48, 57, 77], "behavior": [11, 17, 27, 32, 44, 45, 46, 48, 67, 75, 103, 104, 106, 108, 109, 122], "behaviour": [6, 76, 77, 102, 108], "behind": [48, 52], "bei": 48, "being": [6, 8, 17, 24, 25, 27, 36, 41, 43, 45, 46, 48, 49, 52, 53, 54, 64, 66, 72, 74, 75, 101, 102, 108, 113], "bell": [31, 66, 103], "bell_numb": 29, "bellnumb": 29, "bellpolynomi": 29, "belong": [7, 10, 11, 17, 22, 27, 41, 45, 47, 49], "below": [4, 6, 17, 27, 29, 31, 32, 34, 41, 43, 45, 46, 48, 49, 52, 53, 62, 66, 119], "below_fermi": 32, "bench": 97, "benchmark": [45, 97], "beneath": 42, "berkowitz": [41, 84], "berkowitz_charpoli": 41, "berkowitz_det": 41, "berkowitz_eigenv": 41, "berkowitz_minor": 41, "berlekamp": [73, 102], "bernoulli": [31, 32, 54, 75, 99], "bernoulli_differential_equ": 52, "bernoulli_integr": 52, "bernoulli_numb": 29, "bernoulli_polynomi": 29, "bernoullinumb": 29, "bernoullipolynomi": 29, "bertrand": 43, "bertrandspostul": 43, "besid": [10, 54], "bess": [32, 48], "bessel": [31, 34, 45, 48, 102, 103, 117], "bessel_funct": 32, "besselbas": 32, "besselj": [32, 48, 75, 117], "besselk": [32, 74], "besselsimp": [33, 105], "best": [6, 8, 27, 32, 34, 41, 46, 48, 52, 59, 61, 66, 104, 117, 121, 122], "best_hint": 52, "beta": [2, 17, 31, 34, 46, 52, 105], "beta_": 17, "beta_funct": 32, "beta_r": 8, "betafunct": 32, "better": [5, 8, 11, 18, 27, 36, 52, 53, 54, 61, 66, 67, 72, 95, 96, 100, 105, 106, 107, 108, 109, 113], "between": [10, 17, 18, 20, 24, 27, 29, 34, 38, 39, 41, 43, 44, 45, 46, 48, 52, 53, 57, 66, 67, 73, 77, 102, 103, 104, 106, 110, 115], "bewar": 32, "beyond": [20, 48], "bezout": 41, "bf90689": 102, "bg": 52, "bgcolor": 46, "bh": 52, "bi": [30, 32, 52, 75, 107], "bibliographi": [3, 73], "bibtex": 73, "bidirect": [11, 109, 114], "bifid": 106, "big": [11, 12, 27, 43, 73, 76, 77, 96, 106, 109, 110, 114], "big_o_not": 11, "bigger": [8, 27, 29, 122], "biholomorph": 6, "biject": [18, 20], "bilater": 34, "bin": [89, 97, 101, 104, 109], "bin_to_grai": 12, "binari": [0, 12, 21, 27, 43, 49, 61, 64, 103, 106], "binary_cal": 61, "binary_func": 61, "binary_funct": 61, "binary_quadrat": 49, "bind": 46, "binet": 5, "binom": [29, 43], "binomi": [5, 25, 31, 32, 43, 48, 52, 66, 73, 75, 76, 102, 109, 122], "binomial_coeffici": 43, "binomial_coefficients_list": 43, "bit": [8, 12, 36, 41, 43, 49], "bitlist": [12, 21], "bitlist_from_subset": 21, "bitstr": 12, "bitwis": 36, "bivari": 49, "bk": 52, "black": 46, "bleicher": 43, "blindli": 8, "block": [16, 17, 40, 41, 43, 49, 100, 104, 106, 109], "block_": 17, "block_collaps": 38, "blockdiagmatrix": 38, "blockmatrix": [38, 104], "blog": [5, 49, 100], "blogpost": 105, "blow": 43, "blue": 46, "bm": 32, "bmatrix": 49, "bn": 2, "bner": 112, "bo": 46, "boca": 112, "bodi": 104, "boilerpl": 35, "bom": 109, "bonazzi": [73, 110], "book": [17, 30, 104], "bool": [10, 27, 41, 44, 45, 46, 54, 55, 56, 61, 62, 66, 115], "bool_equ": 105, "bool_map": 76, "boolalg": [27, 36, 102], "boolean": [10, 11, 27, 33, 34, 35, 43, 48, 49, 55, 66, 76, 77, 102, 103, 105, 106, 107, 110], "booleanfals": 36, "booleantru": [36, 76, 110], "borrow": 64, "borwein": 84, "bose": 112, "boson": 102, "boston": 112, "both": [5, 6, 8, 10, 18, 21, 22, 24, 25, 27, 29, 30, 32, 34, 36, 41, 48, 49, 52, 55, 57, 60, 62, 66, 72, 97, 98, 102, 104, 107, 109, 110, 114, 117, 122], "bother": 32, "bott": [41, 42], "bottom": [17, 27, 45, 46, 110], "bottom_up": 77, "bound": [10, 25, 27, 34, 37, 43, 54, 60, 64, 108, 109, 110], "boundari": [47, 52, 54, 75, 107], "bourquin": 109, "box": 82, "bq": [8, 32], "bra": 102, "bracket": [18, 46, 75, 102, 109], "brain": 64, "branch": [2, 8, 9, 29, 30, 32, 70, 77, 109, 122], "branchpoint": 6, "braun": 112, "braunschweig": 112, "breach": 112, "breadth": [27, 66], "break": [2, 27, 43, 46, 66], "breaker": 66, "brent": [43, 64], "brgc": 12, "bridg": 39, "briefli": [10, 88], "brien": [17, 24], "bro": [34, 112], "bro05": [34, 112], "bro71": [10, 112], "bro78": [10, 112], "broadcast": [60, 61, 104, 108], "brocard": 43, "broken": [16, 46, 52, 66, 85, 109, 110], "bronstein": [34, 45, 54, 112], "brown": [10, 112], "browser": 103, "bruno": 112, "brute": [23, 49], "brychkov": 112, "bs93": [45, 112], "bsd": 0, "bsg": [17, 22, 24], "bsgs_direct_product": 22, "bspline": 32, "bspline_basi": 32, "bspline_basis_set": 32, "bt": 52, "bt71": [10, 112], "btu": 52, "buc01": [45, 112], "buchberg": [10, 45, 112, 120], "bug": [4, 52, 71, 72, 73, 74, 75, 76, 83, 86, 88, 99, 100, 101, 102, 103, 104, 106, 109, 110], "bugfix": [2, 97, 98, 101, 110], "buggi": 103, "build": [2, 27, 36, 45, 66, 104, 109], "buildbot": 97, "built": [27, 28, 30, 46, 64, 66, 102, 105, 117, 121], "builtin": [27, 46, 47, 72, 80, 106], "bulk": 8, "bunch": 45, "bundl": [108, 109], "burden": 46, "busi": 0, "butler": 22, "button": [61, 78], "bv": 52, "bw93": [10, 112], "bx": [6, 10], "bxy": [49, 106], "bypass": 52, "bytesio": 106, "bz": [6, 49], "c": [0, 3, 5, 6, 8, 10, 12, 13, 16, 17, 18, 19, 21, 22, 23, 25, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 57, 61, 62, 64, 66, 70, 75, 83, 84, 89, 97, 99, 102, 108, 110, 112, 113, 117, 121, 123], "c0": [7, 52, 54, 123], "c1": [52, 54, 123], "c1ad905": 102, "c2": [52, 54], "c3": [43, 52], "c4": 52, "c5": 52, "c7": 17, "c83c9b0": 102, "c8661ef": 102, "c_": [6, 10, 43], "c_0": [7, 27], "c_1": [6, 7, 8, 52], "c_2": [6, 52], "c_3": [6, 52], "c_4": [6, 52], "c_5": 6, "c_6": 6, "c_7": 6, "c_8": 6, "c_9": 6, "c_code": 62, "c_g": 17, "c_h": 10, "c_header": 62, "c_i": [6, 8, 27, 52], "c_j": [6, 8], "c_kn": 43, "c_n": [29, 32, 52], "c_name": 62, "c_r": 8, "c_u": 6, "c_w": 8, "ca": [32, 46], "cach": [29, 33, 64, 75, 82, 83, 95, 96, 102, 108, 109], "cachetool": [72, 109], "cafe": 112, "calc": 76, "calc_transform": 41, "calcul": [7, 10, 18, 24, 27, 32, 34, 37, 39, 41, 43, 45, 52, 59, 61, 62, 66, 67, 73, 75, 76, 84, 94, 95, 102, 104, 105, 109, 110, 119], "calculu": [3, 7, 27, 29, 33, 34, 76, 107, 108, 110, 116], "call": [1, 5, 6, 8, 10, 12, 13, 16, 17, 18, 24, 27, 29, 32, 34, 35, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 52, 59, 61, 62, 64, 66, 67, 73, 75, 76, 77, 102, 104, 105, 106, 107, 113, 114, 115, 117, 118, 119, 120, 122, 123], "callabl": [17, 46, 48, 61, 62, 67], "cambridg": 49, "can": [2, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 66, 67, 72, 73, 74, 75, 77, 80, 83, 85, 87, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "can_split": 44, "cancel": [5, 6, 10, 27, 34, 43, 45, 48, 75, 76, 82, 83, 102, 106, 109, 117, 122], "candid": [10, 43, 48, 66], "canfield": 64, "cannot": [5, 10, 11, 18, 23, 25, 27, 28, 34, 37, 39, 41, 42, 43, 45, 46, 48, 52, 57, 72, 73, 74, 76, 77, 109, 110, 113], "canon": [6, 12, 16, 18, 22, 27, 41, 43, 44, 48, 52, 66, 92, 106, 119, 122], "canonic": [14, 27, 33, 72, 103, 105], "canonical_fre": 22, "canonical_vari": [27, 110], "canonicalize_na": 22, "cantor": 109, "cantor_product": [66, 109], "cap": 5, "capabl": [5, 6, 27, 102, 106, 113, 116, 117], "capit": 52, "capital_pi_not": 25, "captur": [27, 66, 76], "cardin": [17, 18, 21, 108], "care": [17, 27, 34, 41, 48, 49, 52, 59, 61, 113, 122], "carefulli": 32, "carl": [43, 64], "carlo": [17, 104, 112], "carri": [27, 67], "cart": 102, "cartesian": [47, 66, 102, 103, 108, 109], "cartesian_product": 47, "case": [5, 6, 7, 8, 10, 11, 13, 15, 17, 18, 22, 25, 27, 28, 29, 30, 32, 33, 34, 36, 41, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 59, 60, 62, 66, 67, 72, 73, 74, 77, 83, 96, 99, 103, 104, 110, 113, 115, 117, 119, 120, 122], "casoratian": 41, "cass": 117, "casu": 45, "catalan": 31, "catalan_numb": 29, "catalannumb": 29, "catch": [27, 52], "catchal": 122, "categori": [52, 109], "cauchi": [6, 32], "caught": 52, "caus": [0, 5, 27, 30, 52, 53, 55, 64, 109, 110], "caution": [18, 27, 30, 48], "caveat": 27, "caylei": 20, "cba": 17, "cbdd072": [0, 2], "cbead": 16, "cbm": 32, "cbrt": 48, "cc": [28, 75], "ccode": [46, 62, 73], "ccodegen": [62, 73], "ccodeprint": [33, 108], "cd": 4, "cdot": [8, 10, 25, 41, 43, 52, 57, 109, 120], "ceil": [27, 31, 43, 46, 75, 77, 108, 109, 110], "ceilingfunct": 30, "celin": [25, 109], "cell": 41, "celler": 17, "center": [10, 17, 25, 34, 41, 46, 47], "center_": 17, "centr": 23, "central": [17, 23, 49], "centralizer_and_norm": 17, "centroid": 104, "ceortionerror": 77, "certain": [5, 6, 8, 10, 17, 24, 27, 34, 44, 46, 48, 49, 52, 62, 63, 75, 104, 110, 113], "certainli": 64, "cf": [10, 43], "cff": 45, "cfg": 45, "cfm": 112, "cfunction_format": 46, "cfunction_str": 46, "cgt": 17, "cgtnote": 17, "ch": [25, 41, 42, 49], "chain": [5, 17, 22, 27, 103], "chanc": [8, 70, 115], "chang": [2, 5, 6, 8, 9, 10, 17, 18, 22, 25, 27, 30, 34, 41, 43, 46, 48, 52, 57, 67, 71, 82, 85, 112, 113, 114], "change_index": [25, 106], "changelog": 111, "chao": 112, "chapter": [32, 43], "chapter4": 46, "char": 16, "charact": [2, 6, 27, 44, 46, 52, 62, 103, 109, 117, 121], "character": 103, "characterist": [10, 28, 41, 52, 54, 72, 73, 119], "characteristiczero": [28, 72, 76], "charl": 17, "charpoli": [41, 119], "cheap": [27, 43], "cheat": 41, "cheatsheet": 106, "cheb": 52, "chebyshev": [10, 27, 34, 45], "chebyshev_polynomi": 32, "chebyshev_root": 32, "chebyshevpolynomialofthefirstkind": 32, "chebyshevpolynomialofthesecondkind": 32, "chebyshevt": 32, "chebyshevt_poli": [32, 45], "chebyshevt_root": 32, "chebyshevu": 32, "chebyshevu_poli": [32, 45], "chebyshevu_root": 32, "check": [2, 6, 8, 10, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 32, 34, 36, 41, 42, 43, 45, 47, 48, 52, 53, 55, 56, 59, 60, 62, 72, 75, 105, 108, 113], "check_assumpt": [27, 110], "check_re_refin": 10, "check_symmetri": 41, "checksol": [55, 56, 110], "chi": [6, 8, 32, 46, 104], "child": 64, "children": [27, 64, 66, 118], "china": 41, "chines": [10, 43], "choic": [4, 6, 10, 18, 32, 46, 48], "choleski": [41, 42, 102], "cholesky_solv": [41, 42], "choos": [7, 8, 10, 22, 27, 29, 41, 43, 45, 52, 53, 122], "chop": [5, 27, 32, 41, 113], "chosen": [8, 10, 17, 18, 43, 52], "chri": 110, "chula": 18, "ci": [6, 32, 73, 104], "cipher": 106, "circ": 6, "circl": [6, 27], "circuit": 102, "circuitplot": 102, "circular": 109, "circumfer": 27, "circumst": [32, 117], "citat": 112, "citi": 49, "civita": [32, 85], "cl": [3, 17, 27, 31, 34, 41, 42, 52, 60, 63, 66, 105, 117, 123], "claim": 8, "clairaut": 52, "clariti": 17, "clash": [27, 41], "class": [5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 44, 45, 47, 49, 52, 53, 54, 58, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 76, 77, 78, 84, 88, 95, 102, 103, 104, 105, 106, 107, 108, 110, 114, 115, 118], "class_kei": [27, 31, 66], "class_nam": 27, "classic": [30, 32, 104, 106], "classif": [52, 53], "classifi": [52, 53, 56], "classify_od": [76, 77], "classify_sysod": 52, "classmethod": [12, 16, 18, 20, 21, 27, 31, 32, 37, 41, 42, 45, 46, 47], "classof": 41, "claus": [36, 76], "clean": [83, 101, 106], "cleaner": 52, "cleanup": [45, 96, 99, 100, 109], "clear": [6, 8, 10, 25, 27, 28, 45, 48, 64, 115], "clear_denom": [45, 77], "clear_subproduct": 41, "clearli": [2, 3, 8, 25], "clebsch": 102, "client": [27, 64], "clock": 30, "clone": [2, 4], "close": [2, 5, 6, 25, 29, 32, 34, 47, 62, 102, 103, 104, 112], "closest": 27, "closhea15": [10, 45, 55, 112], "closur": [17, 23, 47, 110], "cluster": [100, 101], "cmp_to_kei": 109, "cmplx": 46, "cn": 18, "cname": 62, "cnf": 36, "co": [5, 6, 8, 11, 27, 29, 31, 32, 34, 41, 43, 44, 45, 46, 48, 49, 52, 57, 66, 70, 72, 73, 76, 83, 88, 96, 109, 110, 113, 114, 117, 122, 123], "coalesc": 64, "code": [0, 1, 3, 5, 6, 8, 10, 14, 17, 20, 21, 27, 31, 32, 33, 34, 35, 44, 48, 52, 60, 61, 62, 66, 72, 73, 76, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 121], "code_text": 46, "codebas": [2, 75, 106, 109, 110], "codecov": 109, "codegen": [33, 61, 65, 72, 108, 109], "codegenerror": 62, "codeprint": 108, "codewraperror": 61, "codewrapp": 61, "coeff": [10, 27, 45, 48, 52, 54, 73, 74, 83, 102, 104, 122], "coeff_monomi": [27, 45], "coeffici": [5, 6, 7, 8, 10, 11, 25, 27, 28, 29, 32, 41, 42, 43, 45, 48, 49, 52, 53, 54, 66, 72, 73, 74, 75, 76, 83, 102, 105, 106, 109, 110, 120, 122], "coerc": 27, "coercibl": 10, "coercion": [10, 74, 77], "coercionfail": [75, 77], "coercionfailederror": 10, "coers": 115, "cof": 41, "cofactor": [27, 28, 41, 45], "cofactormatrix": 41, "coin": 47, "col": [37, 38, 41, 42, 72], "col67": [10, 112], "col_del": 72, "col_insert": [41, 42, 119], "col_join": [41, 42], "col_list": 42, "col_op": [37, 42], "col_swap": [37, 42, 119], "colin": [18, 109], "collaps": 48, "collect": [2, 8, 27, 28, 34, 43, 45, 52, 66, 103, 104, 106, 110, 115, 122], "collin": [10, 102, 112], "collis": 66, "colon": 27, "color": [46, 97], "colormap": 78, "colost": 17, "colsep": 41, "colslist": [41, 42], "column": [37, 41, 42, 46, 52, 107, 110, 119], "com": [4, 17, 19, 20, 27, 29, 30, 32, 41, 43, 47, 48, 49, 52, 66, 112], "combin": [5, 8, 10, 27, 29, 32, 34, 41, 45, 46, 48, 49, 52, 54, 57, 64, 66, 76, 99, 103, 104, 106, 108, 118, 122], "combinator": [3, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 33, 43, 64, 66, 104, 117, 122], "combinatori": [12, 18, 25, 27, 31, 32, 33, 68, 122], "combinatorica": 104, "combsimp": [27, 29, 104, 122], "come": [4, 8, 22, 24, 25, 27, 30, 32, 34, 41, 45, 49, 52, 66, 74, 104, 113, 117], "comfort": 106, "comma": 27, "command": [3, 5, 46, 61, 75, 94, 102, 103, 104], "comment": [2, 4, 17, 46, 62, 66, 109], "commit": [0, 2, 102, 103, 104], "common": [8, 10, 17, 27, 30, 33, 41, 43, 45, 46, 52, 61, 62, 66, 73, 83, 94, 106, 110, 113, 117, 119, 120, 121, 122], "common_prefix": 66, "common_suffix": 66, "commonli": [18, 29, 32, 34, 52], "commun": [48, 52], "commut": [8, 10, 17, 18, 22, 27, 34, 45, 77, 102, 103, 104, 106, 108, 109, 110, 112, 118, 120], "commutativ": [28, 72, 73, 75], "commutative_part": 27, "commutes_with": 18, "comp": 52, "compact": [20, 45, 64], "compactif": 27, "compar": [7, 10, 18, 23, 27, 30, 36, 41, 48, 52, 60, 66, 75, 76, 78, 83, 84, 96, 110], "comparison": [27, 36, 41, 54, 66, 73, 74, 75, 77, 106, 109, 110], "compat": [32, 33, 41, 59, 62], "compil": [5, 46, 48, 60, 61, 62, 95, 102, 109, 110, 113], "complaint": 99, "complement": [45, 47, 108, 109, 110], "complementari": 32, "complementset": 47, "complet": [5, 6, 10, 27, 30, 31, 32, 41, 43, 45, 48, 49, 52, 62, 72, 73, 74, 75, 76, 77, 87, 103, 105, 108, 109, 110, 122], "complex": [6, 8, 10, 17, 27, 28, 29, 31, 32, 33, 41, 42, 44, 45, 48, 52, 55, 62, 66, 70, 74, 75, 76, 77, 83, 102, 103, 106, 108, 109, 113, 122], "complex_conjug": 30, "complexalgebraicfield": [28, 72], "complexfield": [28, 75], "complexinfin": 87, "complexinterv": 10, "complic": [5, 6, 8, 10, 17, 25, 30, 32, 34, 41, 48, 59, 60, 62, 64, 72, 76], "compon": [22, 27, 34, 45, 60, 64, 104], "compos": [10, 38, 41, 45, 48, 72, 74, 103], "composit": [10, 16, 18, 28, 34, 43, 45, 72, 73, 74, 105], "composite_numb": 27, "compositedomain": 28, "compound": [27, 33, 104], "comprehens": [110, 112], "compress": 17, "compris": [17, 41, 45], "comput": [3, 4, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 34, 38, 41, 43, 45, 47, 48, 49, 52, 54, 61, 64, 66, 70, 73, 75, 76, 77, 78, 83, 99, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 120], "computation": [22, 55, 61], "computationfailederror": 10, "compute_leading_term": 27, "concaten": 41, "concept": [17, 45, 46, 59], "concern": [5, 46, 48, 49, 61, 62, 64, 104, 122], "concis": 103, "conclud": [27, 32, 55, 56], "conclus": 27, "concret": [3, 18, 29, 30, 33, 34, 43, 86, 102], "cond": [30, 34], "condit": [0, 8, 17, 27, 30, 32, 34, 41, 43, 46, 52, 54, 60, 76, 77, 104, 105, 108, 109, 110], "condition_numb": [41, 110], "conduct": [2, 109], "config": [3, 33, 75], "configur": [4, 26, 72, 73, 77, 102, 109, 110, 121], "confirm": [17, 43, 52], "conflict": [30, 43, 62], "confluenc": 9, "confluent": [8, 32], "conform": [2, 27, 59, 60, 86, 89], "confus": [27, 29, 36, 101, 109, 110, 114], "confusingli": 32, "cong": [10, 43], "congruenc": [8, 17, 27, 49, 104], "congruent": [8, 49], "conic": 49, "conj": 10, "conjectur": [10, 43], "conjg": 46, "conjug": [10, 16, 17, 27, 31, 32, 37, 39, 41, 42, 45, 46, 52, 72, 73], "conjunct": [8, 36, 122], "connect": [20, 52, 105, 120], "consec": 17, "consec_succ": 17, "consecut": [17, 22, 25, 27, 29, 48], "consequ": [27, 41], "consequenti": 0, "conserv": [27, 66], "conserve_mpmath_dp": 63, "consid": [5, 6, 7, 10, 16, 18, 21, 27, 29, 30, 36, 41, 43, 46, 48, 49, 52, 53, 62, 72, 119, 120, 122], "consider": [27, 49, 52], "consist": [6, 18, 22, 27, 29, 41, 47, 48, 52, 59, 61, 62, 66, 73, 102, 103, 106, 107], "consol": [27, 35, 121], "consolid": 109, "const": [72, 110], "constanc": 27, "constant": [5, 6, 7, 8, 10, 11, 25, 27, 32, 45, 46, 48, 49, 52, 53, 54, 62, 66, 73, 74, 95, 104, 105, 109, 110, 114, 120, 123], "constantli": 7, "constitu": 47, "constitut": 43, "constrain": 104, "constraint": 41, "constrast": 27, "construct": [10, 27, 28, 30, 32, 38, 41, 45, 46, 49, 54, 57, 60, 62, 64, 102, 104, 108, 109, 110, 115, 119], "construct_domain": 45, "constructor": [5, 14, 17, 19, 27, 31, 32, 33, 39, 41, 46, 47, 60, 62, 72, 118, 119], "consult": 71, "consum": [5, 32], "consumpt": 66, "contact": 59, "contagi": 41, "contain": [5, 8, 10, 11, 17, 18, 22, 24, 25, 28, 30, 32, 33, 34, 36, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 59, 60, 61, 62, 64, 65, 66, 67, 75, 77, 102, 103, 104, 105, 108, 109, 110, 113], "contbound": 10, "content": [10, 27, 41, 45, 46, 62, 120], "context": [27, 36, 102, 105, 108, 117], "contigu": [8, 27, 62], "contin": 10, "continu": [6, 10, 18, 20, 27, 29, 32, 41, 43, 49, 52, 59, 75, 76, 108, 109], "continued_fract": 43, "continued_fraction_converg": 43, "continued_fraction_iter": 43, "continued_fraction_period": 43, "continued_fraction_reduc": 43, "contit": 49, "contour": [6, 8, 32], "contract": [0, 46, 58, 59, 60, 99, 106, 110], "contraction_ax": 57, "contrast": [8, 25, 27, 52], "contravari": [22, 41], "contribut": [3, 10, 52], "contributor": 0, "control": [2, 5, 6, 27, 45, 49, 66, 73, 77, 106, 108], "conveni": [18, 27, 29, 32, 34, 36, 46, 47, 48, 55, 59, 60, 61, 67, 111, 114], "convent": [2, 17, 22, 25, 27, 29, 46, 52, 53, 73, 105], "converg": [5, 8, 32, 34, 43, 91, 108, 114], "convergence_stat": 32, "convers": [27, 60, 61], "convert": [8, 10, 12, 18, 22, 27, 28, 32, 36, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 57, 60, 61, 72, 75, 90, 95, 102, 104, 108, 109, 110, 113], "convert_from": 28, "convert_xor": [27, 44], "convex_hul": 99, "cool": 67, "cooper": [27, 112], "coordin": [10, 27, 30, 32, 41, 45, 52, 73, 108], "copi": [10, 18, 19, 27, 37, 41, 46, 66, 69, 72, 103, 121], "coprim": [10, 34, 43], "copyin_list": 37, "copyin_matrix": 37, "copyright": 0, "core": [3, 17, 30, 31, 33, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 52, 61, 66, 72, 73, 78, 83, 99, 102, 104, 108, 109, 110, 115, 118], "core_2": 43, "core_t": 43, "corner": [10, 17, 19, 45, 52, 99], "corr": 112, "correct": [5, 6, 10, 16, 17, 23, 25, 27, 30, 34, 41, 43, 45, 52, 59, 61, 66, 70, 73, 107, 109, 110, 115, 121], "correctli": [5, 6, 41, 52, 73, 75, 77, 81, 83, 99, 103, 109, 110, 115], "correspond": [6, 8, 10, 11, 17, 18, 20, 21, 22, 25, 27, 37, 39, 41, 43, 46, 48, 49, 52, 53, 59, 60, 62, 64, 103], "cosec": 30, "coset": [17, 22], "coset_factor": 17, "coset_rank": 17, "coset_unrank": 17, "cosh": [6, 8, 27, 31, 32, 46, 48, 75, 122], "cosin": [30, 32, 34, 45, 74], "cosine_transform": 34, "cosinetransform": 34, "cost": [5, 43, 66], "cot": [27, 31, 32, 44, 46, 75, 109], "cotang": 30, "coth": [31, 46, 48, 108], "cotton": 73, "could": [2, 6, 7, 8, 10, 19, 27, 34, 35, 41, 48, 55, 56, 57, 59, 60, 72, 104, 106, 110, 115, 118], "could_extract_minus_sign": 27, "couldn": [34, 52, 53], "count": [18, 25, 27, 29, 43, 47, 48, 64, 66, 73, 102, 107], "count_op": [37, 41, 48, 66, 122], "count_partit": 64, "count_root": [45, 72, 77], "counter": [27, 30], "counterpart": [25, 27, 52, 114], "coupl": [27, 41, 100, 101, 104], "cours": [6, 8, 12, 25, 32, 41, 43], "cov": 48, "covari": [22, 41, 104], "cover": [2, 9, 43, 62, 104, 114, 123], "coverag": [2, 72, 73, 74, 75, 99, 109, 110], "cox": 112, "cp": [10, 18], "cp_kei": 10, "cpython": [75, 76, 77, 109], "crack": 43, "cramer": 52, "crandal": 43, "crash": [77, 109], "crc": [18, 112], "creat": [1, 5, 6, 8, 10, 16, 18, 27, 28, 30, 32, 37, 38, 39, 40, 42, 44, 45, 46, 48, 52, 57, 60, 61, 62, 64, 66, 67, 72, 73, 74, 75, 76, 97, 102, 103, 104, 107, 109, 113, 114, 115, 118, 119, 123], "creation": [27, 41, 46, 60, 62, 83, 102, 107], "credit": 109, "cremona": 49, "criteria": 66, "critic": 10, "critical_pair": 10, "crootof": 77, "cross": [27, 41, 49, 107], "crt": 43, "crt1": 43, "crt2": 43, "crucial": [17, 25], "crude": 6, "crypto": 109, "cryptographi": [106, 112], "csc": [31, 44, 46, 109], "csch": 31, "cse": [62, 106, 116], "cse_main": 48, "cset": 27, "csusm": 49, "ctr1": 48, "ctr2": 48, "ctr3": 48, "ctr4": 48, "cube": [12, 17, 19, 30, 49, 112], "cubefre": 43, "cuberoot": 30, "cubic": [32, 45, 55, 75, 100, 110], "cubic_equ": 45, "cubic_thu": 49, "cucurezeanu": 49, "curl": 108, "current": [6, 8, 10, 12, 17, 20, 21, 23, 24, 27, 30, 32, 34, 41, 43, 46, 48, 49, 52, 53, 54, 61, 62, 64, 104, 106], "curv": 52, "custom": [5, 18, 27, 41, 46, 49, 61, 67, 102, 104, 107], "custom_funct": 46, "customstrprint": 46, "cut": [6, 8, 29, 30, 32, 64, 70, 77, 109, 122], "cx": [10, 52], "cy": [49, 106], "cybertest": 48, "cycl": [15, 17, 18, 24, 29, 43, 103, 109], "cycle_detect": 43, "cycle_length": 43, "cycle_structur": 18, "cyclic": [15, 18, 19, 43], "cyclic_form": [15, 18, 19], "cyclic_ord": 15, "cyclicgroup": [13, 15, 17], "cyclotom": [45, 102], "cyclotomic_poli": 45, "cython": [5, 61, 102, 108, 109], "cythoncodewrapp": 61, "cz": [49, 106], "c\u2080": 123, "c\u2081": [52, 117, 123], "c\u2082": [52, 117, 123], "c\u2083": 52, "c\u2084": 52, "d": [3, 6, 8, 10, 12, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 32, 34, 36, 41, 42, 43, 45, 48, 49, 52, 53, 54, 57, 59, 70, 103, 112, 117, 119, 123], "d0": 22, "d1": 22, "d12a2aa": 102, "d1dd6a3": 102, "d2": 22, "d3": 22, "d4d351d": 102, "d4dbbb5": 102, "d521c7f": 102, "d86d08f": 102, "d8c8768": 102, "d_": [8, 22], "d_0": 22, "d_1": [6, 52], "d_2": 52, "d_i": [6, 22], "d_j": [6, 8], "d_n": 15, "d_v": 6, "da": 52, "dad03dd": 102, "dae": 110, "dagger": 102, "dai": 52, "damag": 0, "dat": 66, "data": [0, 5, 10, 17, 27, 28, 41, 42, 44, 45, 48, 60, 62, 64, 110], "databas": 8, "datatyp": [44, 62], "date": 62, "davenport": 112, "david": [41, 112], "dayal": 109, "dbase": 22, "dc327fe": 102, "dc728d6": 102, "de": [49, 52, 66], "dead": 72, "deal": [5, 6, 10, 25, 34, 45, 49, 69, 112, 117, 120], "dealt": [5, 6], "debian": [4, 86, 89, 90], "debug": 61, "dec": [92, 93, 100, 106], "decad": 52, "decid": [10, 25, 27, 37, 39, 62], "decim": [5, 27, 44, 45, 104], "decis": [27, 30, 34, 62, 72], "declar": [8, 41, 46, 52, 53, 60, 62, 113], "decompos": [10, 17, 18, 24, 30, 43, 45], "decomposit": [10, 17, 24, 33, 41, 42, 87, 102, 105, 122], "decor": [17, 27, 32, 33, 65, 66, 68, 72, 83, 95], "decoupl": 41, "decre": 6, "decreas": [10, 27, 103], "decrement": 64, "dedent": 69, "dedic": [45, 62], "deduc": [6, 8], "deduct": 113, "deep": [27, 30, 36, 41, 45, 48, 104, 106], "deeper": 59, "deepest": 59, "def": [17, 27, 29, 31, 36, 41, 43, 44, 45, 46, 48, 66, 67], "default": [1, 5, 10, 11, 12, 17, 27, 29, 30, 32, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 72, 73, 76, 83, 91, 94, 96, 102, 104, 106, 108, 110, 113, 117, 120, 122], "default_assumpt": 27, "default_sort_kei": [16, 27, 59, 66, 106], "defaultdict": [27, 66, 110], "defeat": 52, "defect": 10, "deferredvector": 73, "defin": [6, 7, 8, 10, 11, 12, 17, 18, 21, 24, 25, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 46, 48, 49, 57, 60, 61, 62, 66, 67, 68, 103, 104, 106, 107, 110, 117, 120], "defined_fact": 27, "definedfunct": 27, "definit": [6, 7, 10, 11, 17, 23, 25, 27, 28, 29, 30, 32, 34, 35, 41, 42, 43, 45, 46, 57, 61, 62, 66, 74, 75, 77, 104, 107, 109, 110, 114], "deflat": 74, "deform": 6, "deg": [10, 28, 34, 120], "degbound": 10, "degener": [55, 72], "degre": [8, 10, 17, 24, 25, 32, 41, 45, 48, 49, 52, 54, 72, 76, 104, 110, 120], "degree_list": 74, "degree_offset": 34, "dejavu": 4, "del": [41, 64, 108, 119], "delai": [27, 66], "delet": [12, 41, 42, 72, 78, 119], "delic": 34, "delimit": [27, 46, 109], "delta": [6, 12, 20, 29, 32, 46, 49, 85, 106], "delta_": 32, "delta_funct": [32, 34], "delta_i": 8, "deltafunct": [32, 34], "deltaintegr": 34, "demonstr": [2, 17, 27, 34, 43], "den": [10, 48], "denest": [27, 33, 45, 66, 80, 104], "denom": [10, 27, 48, 72, 73], "denomin": [5, 8, 10, 27, 28, 32, 34, 43, 45, 46, 48, 49, 52, 54, 55, 72, 75, 77, 83, 92, 104, 112, 122], "denot": [6, 7, 8, 10, 27, 32, 41, 43], "dens": [10, 33, 38, 40, 41, 42, 57, 74, 75, 102, 109], "densearith": 72, "densematrix": [37, 41, 42], "densesolv": 72, "densetool": 72, "densiti": 104, "dep": [27, 52], "depend": [4, 5, 6, 7, 8, 17, 18, 25, 27, 28, 29, 30, 32, 34, 35, 41, 43, 46, 48, 49, 52, 53, 61, 62, 63, 66, 72, 73, 74, 75, 76, 97, 103, 106, 108, 109, 110, 122], "deprec": [102, 104, 105, 106, 108, 109], "deprecationwarn": 109, "depth": [17, 46, 66, 77, 109, 110], "derang": [29, 103], "derefer": 46, "dereferenc": 46, "deriv": [0, 6, 8, 10, 12, 17, 30, 31, 32, 34, 37, 39, 41, 46, 48, 52, 53, 55, 58, 62, 70, 72, 73, 75, 76, 82, 83, 103, 104, 106, 107, 108, 109, 110, 116, 117, 123], "derive_by_arrai": [57, 110], "derived_seri": 17, "derived_subgroup": 17, "des_contrib": 48, "descart": 105, "descend": [27, 62, 66], "descent": 18, "describ": [6, 8, 17, 20, 21, 24, 25, 27, 32, 34, 43, 48, 49, 52, 59, 62, 104], "descript": [2, 27, 32, 34, 43, 46, 59, 62, 64], "design": [8, 41, 46, 52, 102, 112, 121], "desir": [10, 17, 18, 27, 29, 41, 43, 45, 46, 48, 61, 64, 66, 113, 122], "despit": 27, "destime2006": 48, "destin": [27, 62], "destruct": 45, "det": [41, 73, 84, 109, 119], "det_barei": 41, "det_bareiss": 41, "det_lu": 41, "det_lu_decomposit": 41, "det_quick": 107, "detail": [2, 3, 6, 7, 9, 17, 27, 29, 32, 34, 43, 49, 52, 53, 60, 65, 88, 100], "detect": [43, 46, 52, 53, 57, 72, 75], "determin": [5, 7, 8, 10, 11, 12, 17, 27, 30, 34, 41, 42, 43, 45, 46, 48, 49, 52, 59, 66, 103, 105, 107, 109, 119, 122], "determinist": 17, "deterministic_vari": 43, "detool": 52, "deutil": [52, 53, 56], "develop": [0, 3, 4, 9, 10, 24, 33, 52, 54, 71, 105], "devn": 2, "dexter": 112, "df": 53, "dft": 105, "diag": [41, 119], "diagnose_import": 109, "diagon": [29, 38, 41, 42, 66, 72, 100, 102, 119], "diagonal_solv": 41, "diagonaliz": [41, 106, 109, 119], "diagram": [16, 118], "dial": 43, "diamet": 27, "dict": [18, 35, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 59, 66, 73, 84, 96, 110, 123], "dict_merg": 73, "dictionari": [10, 16, 17, 18, 24, 27, 35, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 59, 64, 66, 67, 74, 119], "did": [27, 34, 75, 117], "didn": [27, 34, 41, 43], "diff": [8, 10, 29, 30, 31, 32, 37, 39, 41, 46, 52, 53, 55, 56, 57, 75, 77, 96, 103, 110, 114, 117, 123], "differ": [5, 6, 10, 16, 17, 18, 22, 25, 27, 29, 30, 32, 34, 36, 38, 41, 42, 43, 45, 46, 47, 48, 52, 53, 54, 59, 61, 62, 64, 66, 67, 73, 75, 76, 77, 103, 106, 108, 109, 112, 115, 117, 118, 120], "differenti": [8, 27, 29, 30, 32, 48, 52, 53, 54, 55, 56, 73, 75, 76, 93, 99, 103, 104, 105, 109, 110, 112, 114, 116, 117], "diffgeom": [76, 104], "difficult": [8, 27, 52, 53, 61, 73, 104], "dig": 118, "digamma": [29, 32, 72], "digamma_funct": 32, "digammafunct": 32, "digit": [5, 27, 34, 43, 45, 48, 70, 73, 84, 94, 95, 113], "digraph": 46, "dihedr": [15, 18], "dihedral_group": 15, "dihedralgroup": [15, 17, 23, 24], "dij": 104, "dim": [33, 58, 109], "dim1": 60, "dim2": 60, "dimens": [12, 41, 45, 46, 54, 57, 60, 62, 106, 108, 110, 112], "dimension": [10, 12, 41, 45, 55, 61, 106, 108, 110, 112, 121], "dimino": 17, "dingkang": [10, 112], "diofant": [0, 2, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "diofant_debug": 75, "diofant_express": 61, "diofant_use_cach": 109, "diop": 110, "diophantin": [10, 33, 43, 50, 73, 106, 109, 110], "diophantineequ": 49, "diophantu": [0, 49], "dioptr": 108, "dir": [11, 27, 76, 114], "dirac": [41, 102], "diracdelta": [31, 34, 73, 103, 105], "direct": [0, 2, 5, 8, 11, 13, 15, 17, 22, 27, 30, 41, 66, 75, 76, 83, 99, 106, 114, 122], "directed_complete_partial_ord": 30, "directli": [8, 17, 25, 27, 30, 43, 45, 47, 48, 49, 53, 61, 62, 64, 66, 84, 103, 105, 107, 108, 114], "directori": [52, 61, 78, 90, 98], "directproduct": [13, 15], "dirichlet": 32, "dirichlet_eta": 32, "dirichlet_eta_funct": 32, "dirichletetafunct": 32, "disabl": [27, 35, 43, 45, 46, 48, 52, 102, 109], "disable_view": 63, "disadvantag": 27, "disallow": [27, 48, 106, 110], "disambigu": 27, "discard": 10, "disclaim": 0, "discontinu": [5, 30, 32, 34, 76], "discourag": 48, "discov": [6, 59], "discoveri": 10, "discret": [18, 32, 43, 52, 73, 105], "discrete_log": [43, 73], "discretelogarithm": 43, "discrimin": [10, 43, 45, 52, 100], "discuss": [2, 17, 32, 43, 64, 113], "disguis": 6, "disjoint": [10, 16, 18, 47, 108], "disjoint_set": 47, "disjunct": [36, 105], "dispatch": [27, 46], "dispers": [28, 45, 74, 107, 109, 112], "dispersionset": [28, 45, 74], "displai": [5, 6, 46, 59, 75], "disprov": 115, "dissimilar": 54, "distanc": [12, 18, 107], "distinct": [6, 8, 17, 29, 43, 46, 52], "distribut": [0, 9, 17, 24, 27, 45, 47, 105, 109], "distribute_order_term": [27, 48], "distributedmodul": 72, "distutil": [61, 76, 110], "div": [10, 27, 28, 45, 46, 48, 75, 83, 102, 110, 120], "diverg": [32, 108], "divid": [10, 17, 27, 41, 43, 45, 46, 52, 64, 74, 118, 120], "dividend": 27, "divis": [1, 10, 27, 28, 35, 41, 43, 45, 46, 52, 74, 75, 87, 89, 97, 102, 106, 110, 115, 116, 118], "divisisor": 43, "divisor": [10, 17, 27, 43, 45, 73, 120], "divisor_count": 43, "divisor_funct": 43, "divisor_sigma": 43, "divmod": [72, 104], "divsor": 10, "dl": [66, 112], "dlmf": [30, 32], "dmf": 72, "dmp": [73, 77], "dmp_integrate_in": 73, "dn": 18, "dnf": 36, "do": [2, 6, 8, 10, 18, 22, 27, 32, 34, 36, 39, 41, 43, 45, 46, 47, 48, 49, 52, 53, 55, 56, 60, 66, 71, 72, 74, 75, 102, 104, 106, 108, 109, 113, 114, 116, 117, 120, 122], "doc": [2, 4, 49, 52, 61, 84, 94, 99, 103, 104, 110], "docstr": [19, 27, 33, 34, 43, 48, 52, 53, 60, 63, 69, 72, 73, 99, 100, 104, 108, 109, 110], "doctest": [2, 19, 43, 52, 63, 72, 96, 98, 99, 100, 101, 109], "doctest_depends_on": 63, "document": [0, 2, 6, 8, 9, 10, 22, 28, 30, 31, 32, 33, 45, 46, 52, 62, 71, 73, 76, 84, 89, 93, 94, 99, 100, 101, 102, 104, 107, 109, 116], "doe": [2, 5, 6, 7, 8, 10, 17, 18, 22, 25, 27, 30, 32, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49, 52, 60, 62, 64, 66, 70, 72, 73, 75, 76, 77, 105, 108, 109, 110, 114, 115], "doesn": [10, 17, 24, 25, 27, 37, 41, 43, 48, 52, 55, 56, 66, 69, 72, 73, 74, 75, 77, 108, 109, 110, 113, 120, 122], "doi": [18, 112], "doid": 112, "doit": [11, 25, 27, 29, 30, 32, 34, 45, 52, 53, 66, 73, 75, 96, 103, 109, 110, 114, 117], "doit_numer": 27, "dom": [10, 28, 109], "domain": [3, 6, 10, 25, 27, 32, 33, 34, 41, 43, 52, 72, 73, 74, 75, 76, 77, 102, 110, 119, 120], "domainel": 10, "domainerror": [10, 75], "domin": [6, 7], "dominik": 112, "don": [1, 2, 6, 8, 27, 30, 34, 36, 41, 43, 44, 45, 46, 48, 55, 61, 63, 66, 72, 73, 75, 76, 82, 110], "donald": [64, 112], "done": [6, 10, 17, 19, 24, 27, 29, 32, 41, 43, 48, 49, 52, 55, 60, 61, 64, 103, 106, 107, 119], "doprint": 46, "dorin": 49, "doron": 112, "dot": [41, 46, 105, 109, 116], "dotprint": [33, 121], "dotsb": 29, "dotsc": 29, "doubl": [8, 22, 27, 31, 41, 46, 62, 110, 122], "double_coset_can_rep": 22, "double_factori": 29, "doubli": [25, 43], "doubt": 36, "dover": 112, "down": [8, 38, 47, 48, 52, 64, 106, 122], "download": 104, "doy": 17, "dozen": [2, 122], "dp": [27, 28, 32, 41, 63, 73, 110], "dpll": [99, 102], "dpll2": 36, "dr": [46, 52], "draft": 2, "dramat": 64, "draw": [46, 92], "drawn": 17, "driver": [46, 61], "drop": [10, 28, 34, 45, 73, 74, 75, 76, 102, 109], "drop_to_ground": 73, "dsolv": [53, 54, 55, 72, 73, 76, 77, 108, 109, 110, 117, 123], "dst88": [10, 112], "dt": [32, 52], "dtype": [28, 41], "du": 53, "dual": 41, "duart": 52, "due": [17, 27, 35, 46, 49, 53, 70, 77, 122], "dummi": [8, 22, 25, 34, 41, 45, 48, 52, 59, 62, 66, 67, 76, 83, 105, 109], "dummifi": 67, "dummy_eq": 72, "dummywrapp": 61, "dump_c": [61, 62], "dump_cod": 62, "dump_f95": 62, "dump_h": 62, "dump_m": 62, "dump_pyx": 61, "dup": 17, "dup_count_complex_root": 72, "dup_isolate_complex_roots_sqf": 110, "dup_isolate_real_roots_list": 72, "duplic": [2, 17, 20, 32, 43, 52, 76, 109], "dure": [27, 41, 43, 48, 72, 109, 115], "dv": 49, "dviview": 80, "dx": [5, 22, 34, 49, 52, 53, 57, 106, 114, 117, 121, 123], "dxy": [49, 106], "dy": [46, 49, 52, 53, 114], "dyadic": 107, "dyer": [45, 102], "dynam": [43, 64], "dz": 8, "d\u03be": 53, "e": [2, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 72, 73, 74, 76, 77, 85, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 119, 120, 121, 122], "e0": 7, "e1": [27, 32], "e2": [27, 34, 41, 43], "e3": 27, "e4": 27, "e5": 27, "e6": 27, "e61819d": 102, "e7": 27, "e8": 27, "e8cb04a": 102, "e920870": 102, "e9f4a0a": 102, "e_": 27, "e_0": [7, 27], "e_1": 7, "e_2": 7, "e_i": [8, 27], "e_n": 29, "each": [5, 8, 10, 12, 17, 18, 22, 27, 29, 30, 34, 37, 39, 41, 42, 43, 45, 46, 48, 49, 52, 53, 57, 59, 60, 62, 64, 66, 103, 106, 114, 116, 123], "each_char": [102, 106], "earli": [27, 33, 43, 49, 122], "earlier": [8, 48, 52, 103], "earliest": 0, "earth": 52, "eas": 46, "easi": [6, 7, 8, 15, 18, 27, 49, 52, 59, 60, 121], "easier": [8, 27, 62, 108, 113], "easiest": [49, 113, 118], "easili": [6, 27, 32, 43, 45, 46, 48, 49, 52, 54, 61, 103, 104], "eastern": 10, "ebnf": 48, "ec": 45, "echelon": [41, 119], "ecomposit": 112, "econom": [18, 66], "economi": 18, "ecurr": 112, "ed": [18, 32], "edg": [12, 19, 20, 46], "edit": [43, 112], "edu": [12, 17, 43, 49, 52, 112], "educ": 41, "ef1f6a7": 102, "efactor": 10, "effect": [17, 19, 27, 34, 41, 52, 113], "effici": [5, 12, 17, 22, 27, 28, 29, 41, 43, 45, 48, 49, 54, 66, 83, 99, 102, 107, 112, 119, 122], "effort": 10, "egypt": 43, "egyptian": [43, 108], "egyptian_fract": 43, "ei": [6, 8, 32, 49, 52, 104, 106], "eick": [17, 24], "eigen": 41, "eigenst": 103, "eigenv": [41, 110, 117, 119], "eigenvalu": [41, 109, 117, 119], "eigenvect": [41, 119], "eigenvector": [41, 119], "eijk": 32, "either": [2, 6, 8, 10, 12, 18, 25, 27, 28, 29, 30, 32, 34, 36, 41, 43, 46, 47, 49, 52, 53, 54, 59, 60, 61, 67, 115, 118, 119], "eject": [28, 45, 73], "ek": 112, "elem": 17, "element": [5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 33, 36, 37, 38, 39, 41, 42, 43, 45, 47, 48, 49, 52, 57, 60, 61, 64, 66, 72, 73, 76, 77, 103, 104, 107, 108, 110, 112, 119, 120], "elementari": [5, 6, 27, 31, 32, 33, 34, 43, 45, 103, 105, 109, 110], "elementaryfunct": 30, "elementwis": [38, 41, 57, 102], "elif": [27, 31], "elimin": [10, 22, 33, 41, 42, 45, 62, 74, 77, 94, 106, 122], "ellips": [46, 73, 83, 102, 107], "ellipt": [31, 77, 105], "elliptic": 32, "elliptic_": 32, "elliptic_f": 32, "elliptic_integr": 32, "elliptic_k": 32, "elliptic_pi": 32, "elliptice2": 32, "ellipticf": 32, "ellipticintegr": 32, "elliptick": 32, "ellipticpi": 32, "ellipticpi3": 32, "els": [6, 18, 22, 25, 27, 30, 32, 36, 41, 43, 45, 46, 48, 52, 56, 59, 66, 69, 72, 102, 113], "elsewher": 29, "em": 45, "email": 46, "embed": [18, 106], "eminumer": 112, "emit": 46, "empir": 52, "emploi": [5, 34, 43, 52], "empti": [8, 10, 17, 21, 25, 27, 34, 41, 42, 43, 46, 47, 54, 55, 62, 66, 69, 73, 75, 77, 104, 109, 110, 118, 123], "empty_product": 25, "empty_set": 47, "emptyprint": 46, "emptyset": [47, 109], "emul": [48, 57, 104], "en": [11, 15, 16, 17, 18, 25, 27, 29, 30, 32, 34, 41, 43, 45, 47, 52, 62], "enabl": [10, 35, 45, 46, 52, 54, 55, 103, 104, 105, 109, 110, 115, 121], "encapsul": [10, 62], "encircl": 6, "enclos": [8, 46, 110], "encod": [12, 18, 24, 33, 64, 66, 118], "encount": [10, 27, 34, 45, 55, 62, 66, 110], "encyclopediaofmath": 32, "end": [6, 10, 17, 22, 24, 25, 27, 30, 32, 36, 41, 42, 43, 46, 47, 49, 52, 53, 62, 66, 104, 114, 117], "endian": 12, "endif": 62, "endnumb": 52, "endors": 0, "endpoint": [5, 25, 27, 47], "energi": 102, "enforc": [18, 106], "eng": 18, "enhanc": [105, 108], "enough": [5, 10, 27, 43, 46, 52, 66, 113], "enspac": 52, "ensur": [5, 27, 41, 42], "ent": 43, "entail": 34, "enter": [8, 10, 18, 27, 44], "entierli": 103, "entir": [6, 17, 27, 32, 47, 60, 106], "entiti": [73, 104], "entri": [6, 8, 10, 18, 24, 40, 42, 67, 104], "entropi": 104, "enum": [33, 65, 107], "enum_al": 64, "enum_larg": 64, "enum_rang": 64, "enum_smal": 64, "enumer": [6, 8, 12, 16, 18, 21, 43, 64, 66, 72, 107], "envelop": 52, "environ": [35, 46, 75, 81, 108], "ep": [17, 25], "epath": [33, 102], "epathtool": 48, "eppstein": 43, "eprint": 49, "epsilon": [6, 25, 27, 32, 34, 46], "epsilon_eq": 27, "eq": [30, 34, 45, 46, 48, 49, 52, 53, 54, 55, 61, 62, 66, 72, 73, 75, 77, 84, 103, 105, 109, 110, 115, 117, 123], "eq1": 52, "eq2": 52, "eq_x": 48, "equal": [5, 8, 10, 16, 17, 18, 22, 24, 25, 28, 29, 30, 32, 36, 37, 38, 39, 41, 43, 46, 47, 49, 52, 53, 54, 55, 61, 62, 66, 73, 75, 76, 77, 104, 105, 109, 110, 114, 116, 123], "equat": [0, 6, 8, 10, 22, 25, 27, 30, 32, 33, 41, 45, 46, 48, 50, 51, 52, 53, 56, 60, 72, 73, 74, 75, 76, 77, 84, 95, 99, 103, 104, 105, 106, 107, 108, 109, 110, 112, 115, 116, 117], "equispac": 45, "equiv": [8, 49], "equival": [6, 17, 22, 27, 30, 32, 33, 34, 37, 39, 43, 44, 45, 48, 52, 54, 57, 60, 64, 66, 82, 108], "eqworld": 52, "eqyptian": 49, "eratosthen": 43, "erd\u00e9lyi": 32, "erd\u0151": 64, "erf": [6, 8, 32, 34, 76, 105, 109], "erf2": 32, "erf2inv": 32, "erfc": [6, 32, 76], "erfcinv": [32, 76], "erfi": [6, 32, 110], "erfinv": 32, "erlend": 20, "erm": 112, "erron": [5, 77, 109], "error": [6, 9, 10, 16, 18, 25, 27, 31, 34, 41, 42, 43, 46, 48, 52, 53, 60, 61, 62, 66, 67, 70, 72, 73, 74, 75, 76, 77, 99, 103, 104, 105, 109, 110, 113], "error_funct": 32, "escap": [27, 46], "especi": [25, 48, 52, 100, 113, 114], "essenti": [6, 8, 11, 12, 21, 32], "establish": [6, 8, 22], "estim": [5, 25], "eszterhazi": 43, "et": [45, 48, 83], "eta": [6, 32, 46, 52, 53], "etc": [8, 18, 22, 27, 29, 30, 40, 43, 46, 47, 48, 49, 59, 61, 62, 66, 102, 103, 104, 109], "euclid": 10, "euclidean": [10, 43, 45, 120], "euclidtool": 73, "euler": [5, 25, 27, 31, 32, 43, 52, 76, 105, 107], "euler_equ": 107, "euler_maclaurin": [5, 25], "euler_numb": 29, "eulergamma": [5, 29, 32, 109], "eulerian": 32, "eulernumb": 29, "eurocast": 112, "eval": [27, 31, 32, 45, 46, 62, 107, 121], "eval_expr": 44, "eval_integr": 25, "eval_levicivita": 32, "eval_pow": 99, "eval_r": 45, "evalf": [5, 25, 29, 30, 31, 32, 33, 34, 41, 42, 43, 45, 47, 48, 61, 67, 72, 73, 74, 75, 83, 95, 96, 110, 113, 117], "evalfmixin": [27, 75], "evalpoint": 10, "evalu": [3, 6, 8, 9, 10, 11, 29, 30, 32, 33, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 52, 61, 62, 67, 70, 72, 73, 74, 75, 76, 77, 94, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 122], "evaluationfailederror": 10, "even": [0, 2, 5, 6, 8, 10, 15, 17, 18, 27, 28, 29, 32, 34, 36, 41, 43, 46, 48, 49, 52, 61, 66, 104, 106, 114, 115, 118, 120], "evenli": 49, "event": 0, "eventu": [34, 62, 103, 104], "ever": [8, 52, 62], "everi": [2, 8, 10, 15, 17, 18, 27, 33, 41, 42, 43, 46, 47, 48, 49, 52, 66, 116, 118, 119], "everyth": [4, 27, 32, 34, 39, 46, 72, 102], "everywher": [6, 27], "evid": [6, 8], "ex": [10, 15, 28, 45, 63, 72, 110], "exact": [5, 6, 10, 25, 27, 28, 41, 45, 48, 52, 75, 105, 117, 121], "exact_differential_equ": 52, "exactli": [5, 8, 12, 27, 31, 44, 48, 52, 57, 64, 66, 114, 117], "exactquotientfailederror": [10, 45], "examin": 62, "exampl": [2, 3, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 70, 75, 87, 90, 98, 101, 102, 103, 104, 105, 106, 108, 109, 114, 115, 117, 118, 119, 122], "exc": 10, "exce": 43, "exceed": [77, 109], "exceedingli": 10, "excel": 5, "except": [5, 10, 18, 27, 30, 32, 40, 43, 45, 46, 49, 52, 53, 59, 60, 61, 62, 66, 72, 75, 77, 97, 99, 103, 107, 110], "exchang": [22, 41], "exclud": [10, 25, 27, 45, 52, 55, 66, 77, 110], "exclus": [10, 25, 27, 36], "exec": 27, "execut": [3, 4, 5, 46, 52, 62, 117, 123], "exemplari": 0, "exercis": 64, "exhaust": [8, 27, 66, 116], "exhibit": 43, "exist": [2, 5, 7, 8, 10, 12, 17, 27, 34, 41, 43, 46, 47, 49, 52, 75, 103, 104, 105, 106, 108, 119], "exit": [1, 43], "exp": [5, 6, 7, 8, 11, 27, 29, 30, 32, 34, 38, 41, 43, 45, 48, 52, 53, 57, 66, 72, 75, 76, 96, 99, 105, 106, 109, 110, 114, 117, 123], "exp2": 46, "exp_": [6, 8], "exp_polar": [8, 27, 31, 32, 110], "expand": [2, 6, 8, 29, 30, 32, 34, 41, 45, 48, 52, 59, 61, 76, 83, 95, 96, 99, 101, 102, 104, 106, 115, 117, 120, 122], "expand_complex": 122, "expand_func": [29, 32, 45, 72, 75, 103, 122], "expand_hint": 27, "expand_log": 122, "expand_mul": 122, "expand_multinomi": 122, "expand_power_bas": [48, 122], "expand_power_exp": 122, "expand_trig": 122, "expans": [3, 9, 11, 27, 29, 30, 32, 33, 34, 41, 43, 45, 52, 73, 75, 76, 77, 82, 89, 100, 102, 106, 108, 109, 110, 116, 122], "expect": [2, 7, 10, 13, 27, 30, 32, 36, 41, 43, 48, 61, 64, 66, 70, 101, 103, 109, 117, 118, 122], "expens": [10, 37, 39, 52, 53, 61, 66, 84, 119], "experi": 83, "experiment": [27, 48, 108], "experimental_lambdifi": 110, "expess": 27, "expint": [32, 104], "expintegr": 105, "expintegral": 32, "explain": [2, 7, 22, 27, 32, 72], "explan": [8, 43, 60], "explicit": [8, 18, 25, 27, 30, 43, 45, 53, 55, 64], "explicitli": [27, 30, 38, 45, 48, 52, 103, 104, 108, 115], "exploit": [6, 42, 61], "explor": 64, "expon": [6, 7, 27, 30, 34, 43, 45, 46, 48, 52, 59, 64, 66, 75, 104, 109, 120, 122], "exponenti": [17, 22, 27, 29, 31, 33, 34, 41, 43, 44, 48, 52, 55, 73, 74, 75, 76, 77, 104, 110], "exponential_integr": 32, "exponentialdistribut": 109, "export": [73, 110], "exposit": 7, "expr": [5, 7, 10, 11, 25, 28, 30, 32, 33, 34, 36, 37, 38, 39, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 62, 66, 67, 72, 75, 76, 77, 102, 103, 104, 105, 106, 110, 113, 114, 117, 118, 121, 122], "expr_class": 46, "expr_with_intlimit": 25, "expr_with_limit": [25, 34], "exprcondpair": 31, "express": [0, 3, 5, 6, 7, 8, 10, 11, 18, 25, 27, 28, 29, 30, 32, 33, 34, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 52, 53, 55, 57, 59, 60, 61, 62, 64, 66, 67, 73, 75, 76, 77, 80, 82, 83, 90, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123], "expressiondomain": 28, "exprtool": [33, 45], "exprwithintlimit": 25, "exprwithlimit": [25, 34], "exquo": [28, 45], "exquo_ground": 45, "ext": 28, "extend": [6, 9, 10, 17, 27, 28, 29, 34, 43, 45, 46, 47, 49, 52, 57, 62, 64, 87, 99, 102, 103, 106], "extend_to_no": 43, "extended_euclidean_algorithm": 27, "extended_r": [73, 109], "extended_real_number_lin": 27, "extendedr": [47, 74], "extens": [8, 17, 27, 28, 30, 41, 45, 46, 48, 52, 62, 72, 73, 74, 76, 77, 102, 104, 105, 110, 112, 116, 120], "extern": [48, 61, 97, 103], "extra": [4, 5, 8, 10, 27, 33, 62], "extract": [10, 27, 34, 41, 42, 43, 45, 62, 104], "extract_addit": 27, "extract_branch_factor": 27, "extract_leading_ord": 76, "extract_multipl": [27, 107], "extran": [10, 52, 73], "extraneousfactorserror": 10, "extrapol": [5, 91], "extrem": [5, 17, 34, 48, 72], "ey": [37, 38, 39, 40, 41, 42, 57, 119], "eyz": [49, 106], "f": [3, 5, 6, 7, 8, 10, 11, 17, 18, 22, 25, 27, 28, 30, 31, 32, 34, 37, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 66, 67, 70, 74, 76, 93, 96, 103, 106, 112, 113, 117, 120, 123], "f1": [10, 17, 41, 45], "f2": [10, 27, 41, 45], "f2py": [5, 61, 62, 108], "f2pycodewrapp": 61, "f3bee7a": 102, "f3e432": 102, "f401": 62, "f5": [10, 112], "f5_reduc": 10, "f5b": [10, 45], "f638fcf": 102, "f6452a8": 102, "f6f74e6": 102, "f800f95": 102, "f8fcaa7": 102, "f90": 62, "f95": [61, 62], "f_": [8, 10, 27, 29, 32, 34, 52], "f_0": [10, 29], "f_1": [6, 10, 29, 45, 52], "f_2": [6, 8, 10, 29, 52], "f_code": 62, "f_fortran": 61, "f_i": [6, 10, 25, 41], "f_j": 8, "f_k": [10, 25], "f_n": [10, 25, 29, 32, 45], "f_name": 62, "f_q": 8, "f_result": 62, "f_z": 29, "fa": 10, "fa1206": 102, "fab": 46, "fabian": 100, "face": [17, 19, 106], "facil": [88, 104], "facilit": 107, "fact": [2, 6, 8, 10, 27, 29, 32, 43, 48, 52, 105, 109, 116], "factkb": 27, "factor": [5, 8, 9, 17, 18, 25, 27, 29, 30, 32, 41, 42, 43, 45, 48, 49, 52, 59, 64, 66, 73, 74, 75, 76, 77, 83, 95, 97, 98, 99, 102, 105, 106, 109, 110, 112, 116, 117, 119, 122], "factor_": [43, 45, 49], "factor_index": 17, "factor_list": [45, 72, 74, 77, 110], "factor_list_includ": 72, "factor_term": [45, 48], "factori": [5, 10, 25, 27, 31, 32, 41, 48, 54, 62, 66, 67, 72, 73, 76, 102, 107, 122], "factorial2": [31, 109], "factoring_visitor": 64, "factorint": [27, 43, 45, 64, 101], "factoris": 52, "factorisatio": 64, "factorization_alg_field": 10, "factoror": 42, "factorrat": 43, "factortool": 74, "fagin": 48, "fail": [5, 6, 8, 10, 17, 18, 22, 25, 27, 30, 34, 37, 39, 41, 43, 52, 66, 72, 73, 74, 75, 76, 77, 88, 101, 109, 110], "failing_express": [27, 37, 39], "failing_numb": 27, "failur": [22, 43, 72, 73, 101, 109, 110], "fairli": [6, 27, 32], "fall": [25, 29, 46, 49, 53], "fallback": [46, 83], "fallback_gcd_zz_method": 72, "fallingfactori": 31, "fals": [5, 10, 11, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 61, 62, 63, 66, 67, 73, 75, 76, 84, 94, 101, 104, 106, 108, 109, 110, 113, 115, 117, 120], "famili": [12, 34, 104], "familiar": [48, 103], "famou": [32, 43, 49], "fanci": 107, "fancyset": 47, "far": [8, 46, 67], "fashion": [27, 66, 118], "fast": [10, 27, 40, 41, 42, 43, 45, 52, 56, 64, 66, 67, 78, 83, 96, 98, 107, 112], "fastcach": 108, "faster": [13, 27, 34, 41, 42, 43, 48, 49, 52, 53, 61, 64, 75, 79, 83, 84, 87, 92, 95, 96, 105, 107], "fastest": [29, 34, 66], "fateman": 112, "father": 49, "faug": 112, "faugereglm93": [10, 45, 112], "fault": 52, "favor": [104, 105], "fcc6b13": 102, "fcn": 62, "fcn2": 62, "fcode": 46, "fcodegen": 62, "fcodeprint": 46, "fdiff": [27, 30, 31], "featur": [4, 5, 27, 33, 44, 46, 62, 71, 104, 107, 116], "feb": [0, 107, 110], "feder": 112, "feedback": [3, 106], "feel": [48, 52], "ferel": 112, "fermi": 32, "fermion": [43, 102], "ferrer": 16, "fetch": 2, "few": [8, 18, 34, 43, 46, 52, 62, 66], "ff": [25, 29, 76], "ff65e9f": 102, "fg": [18, 52], "fglm": [45, 72], "fgp": 52, "fibonacci": [5, 31, 43, 75, 109], "fibonacci_numb": 29, "fibonaccinumb": 29, "fidel": 104, "field": [9, 28, 33, 34, 49, 54, 72, 73, 74, 75, 76, 77, 102, 104, 106, 112, 120], "field_isomorph": [45, 72], "figur": [27, 34, 46], "file": [0, 8, 41, 48, 61, 62, 72, 103, 105, 107, 109], "fileadmin": 48, "filenam": [61, 62, 105], "filepath": 61, "fill": [37, 41, 42, 69], "fillded": 69, "filter": [6, 10, 27, 45, 104], "final": [6, 7, 8, 10, 18, 25, 27, 32, 34, 36, 41, 43, 45, 48, 49, 52, 54, 74, 75, 83, 102, 103, 118], "finalpdf": 43, "find": [5, 6, 7, 8, 10, 11, 17, 20, 21, 22, 25, 27, 30, 32, 33, 34, 41, 43, 47, 48, 49, 52, 54, 55, 72, 84, 98, 102, 104, 108, 109, 110, 114, 117, 119], "find_unit": 104, "findrecur": [25, 109], "findroot": 32, "fine": [5, 27, 46, 48], "finish": 63, "finit": [5, 9, 10, 15, 17, 25, 27, 28, 34, 45, 47, 49, 52, 55, 66, 72, 73, 74, 75, 76, 77, 99, 102, 106, 107, 108, 109, 120], "finite_diff": [76, 108], "finite_field": 28, "finite_r": 28, "finite_set": 47, "finitefield": [28, 72, 73], "finiteset": [47, 76, 103, 104, 108, 109, 110], "fir": 52, "first": [2, 4, 6, 7, 8, 10, 11, 17, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 37, 39, 41, 43, 45, 46, 47, 48, 49, 52, 53, 59, 62, 66, 67, 72, 73, 83, 90, 105, 109, 110, 113, 117, 118, 119, 123], "firstli": 8, "fit": [0, 6, 27, 41, 42, 43, 46, 52, 69], "five": [6, 16, 49, 106], "fix": [2, 8, 10, 17, 19, 22, 24, 32, 46, 54, 71, 80, 81, 82, 83, 84, 86, 88, 89, 90, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110], "flag": [10, 17, 18, 22, 24, 27, 34, 36, 41, 43, 45, 48, 49, 52, 55, 56, 61, 66, 107, 110, 113, 117], "flagerror": 10, "flake518": [2, 76], "flake8": [73, 74, 76, 109, 110], "flatten": [27, 47, 66, 67, 102, 107], "flavius_josephu": 18, "flaw": 2, "flexibl": [18, 27], "flip": 109, "float": [1, 9, 10, 30, 32, 34, 35, 41, 42, 44, 45, 48, 55, 70, 72, 73, 74, 76, 77, 102, 104, 107, 109, 110, 113, 115], "floatration": [35, 110], "floor": [27, 31, 46, 74, 75, 110], "floor1": 46, "floor2": 46, "floorfunct": 30, "florida": 112, "floyd": 43, "fn": [41, 45], "fname": 62, "focu": 48, "fold": [17, 27, 46, 48], "fold_frac_pow": 46, "fold_func_bracket": 46, "fold_short_frac": 46, "folder": 104, "follow": [0, 1, 2, 5, 6, 7, 8, 10, 16, 17, 18, 19, 22, 25, 27, 29, 30, 31, 32, 34, 36, 41, 43, 45, 46, 48, 49, 52, 53, 55, 56, 57, 59, 60, 64, 66, 103, 104, 106, 112, 114, 118], "font": 4, "foo": [27, 46, 72, 75, 109], "foral": [17, 25], "forbid": [27, 72], "forc": [5, 6, 23, 27, 30, 34, 45, 48, 49, 56, 73, 102, 110], "forest": 103, "forev": [75, 110], "fork": [0, 2, 109], "form": [0, 1, 5, 6, 7, 8, 10, 17, 18, 22, 23, 25, 27, 29, 30, 32, 33, 34, 41, 43, 45, 46, 48, 49, 52, 53, 54, 55, 66, 73, 76, 99, 102, 104, 105, 109, 112, 113, 117, 119, 120, 121, 122, 123], "formal": [6, 11, 25, 33], "format": [2, 8, 43, 45, 46, 52, 71, 73, 104, 110, 121], "former": [10, 27, 29, 45, 49, 66, 75, 76, 106, 110], "formula": [5, 9, 10, 20, 25, 27, 29, 32, 41, 43, 45, 46, 48, 49, 73, 102, 108, 117], "fortran": [5, 33, 62, 102, 108, 121], "fortran77": 62, "fortran90": 62, "fortun": 5, "forward": [48, 102], "found": [6, 8, 10, 17, 18, 20, 22, 24, 27, 43, 46, 48, 49, 52, 54, 59, 99, 104, 105, 108, 110, 123], "foundat": [18, 112], "four": [5, 18, 27, 32, 43, 48, 49, 52, 57], "fourier": [34, 74, 102, 104], "fourier_transform": 34, "fouriertransform": 34, "fourth": [52, 112], "fox": 6, "fp": 28, "fr": 112, "frac": [6, 7, 8, 10, 11, 25, 27, 29, 30, 32, 34, 43, 46, 49, 52, 53, 57, 114, 117, 121], "frac_field": [28, 76], "fracel": [10, 73, 74], "fracfield": 72, "fraction": [1, 5, 10, 27, 28, 33, 34, 35, 41, 43, 46, 49, 73, 74, 75, 87, 102, 105, 108, 109, 115, 122], "fractionfield": [10, 28], "frame": 64, "framework": [27, 60, 62, 97, 99, 102], "francesco": [73, 110], "franci": 112, "frank": [17, 18], "free": [8, 10, 22, 25, 27, 34, 41, 43, 45, 46, 48, 49, 52, 55, 72, 75, 76, 109, 116], "free_integ": 43, "free_symbol": [25, 27, 34, 41, 45, 72], "free_symbols_in_domain": 45, "freeli": 39, "frequenc": 34, "frequent": [17, 108], "freshli": 4, "fresnel": [8, 31, 114], "fresnel_integr": 32, "fresnelc": [8, 32], "fresnelintegr": 32, "friend": 73, "friendli": [45, 62, 71, 96], "fro": 41, "frobeniu": 41, "from": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 83, 92, 95, 102, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 122, 123], "from_": 72, "from_dict": 45, "from_diof": 72, "from_expr": [28, 45, 72], "from_inversion_vector": 18, "from_list": [45, 74], "from_poli": 45, "from_rg": 16, "from_sequ": 18, "front": [17, 27, 28, 45, 48], "frontier": [41, 47], "ftrunc": 10, "fuction": 75, "fulfil": 6, "full": [4, 5, 10, 17, 18, 27, 32, 34, 45, 46, 48, 49, 87, 100, 102, 103, 104, 105, 113], "full_cyclic_form": 18, "full_prec": [25, 46], "fulli": [2, 10, 17, 27, 106, 110], "fun": 53, "func": [10, 27, 29, 32, 43, 45, 46, 48, 52, 53, 56, 63, 67, 77, 118], "func_field_modgcd": 10, "function": [2, 3, 5, 7, 9, 10, 11, 17, 18, 21, 22, 24, 28, 29, 33, 34, 35, 37, 38, 40, 42, 43, 47, 50, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 75, 76, 77, 78, 82, 83, 85, 87, 88, 92, 93, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 123], "function_exponenti": 44, "function_nam": 61, "function_prototyp": 62, "function_vari": 34, "functionclass": [46, 67], "functionmatrix": 38, "functool": 108, "functor": [37, 42], "fundament": [6, 34, 49, 52], "further": [6, 8, 9, 32, 41, 45, 48, 117], "furthermor": [27, 117], "fuse": 5, "futur": [6, 48, 60, 104, 108], "fuzzy_and": 109, "fv": 10, "fwrap": 61, "fx": [52, 53], "fxy": 49, "fxz": 49, "fy": 53, "fzx": [49, 106], "g": [3, 5, 7, 9, 10, 11, 13, 15, 17, 18, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 41, 43, 44, 45, 46, 48, 49, 52, 53, 56, 57, 59, 60, 62, 66, 67, 68, 70, 72, 73, 85, 102, 103, 104, 105, 106, 107, 108, 110, 112, 114, 120, 122, 123], "g1": [10, 13, 17, 41], "g2": [10, 13, 17, 41], "g3": 17, "g_": [6, 17, 24, 25, 32, 49], "g_0": [17, 49], "g_1": [17, 45, 49, 52], "g_2": [17, 52], "g_i": 17, "g_k": 17, "g_n": [25, 45], "g_t": 17, "ga": [99, 104], "gabriel": 73, "galgebra": [104, 109], "galoi": 28, "galoisfieldel": 28, "galoistool": 73, "game": 8, "gamma": [5, 6, 8, 10, 25, 27, 29, 31, 34, 46, 48, 52, 67, 73, 76, 103, 104, 105, 106, 107, 110, 122], "gamma2": 32, "gamma3": 32, "gamma_funct": [29, 32], "gamma_i": 10, "gammabetaerf": [29, 32, 48], "gammafunct": 32, "gap": 43, "gate": 102, "gather": [52, 108], "gauss": [32, 34, 105], "gauss_chebyshev_t": 34, "gauss_chebyshev_u": 34, "gauss_gen_laguerr": 34, "gauss_hermit": 34, "gauss_jacobi": 34, "gauss_laguerr": 34, "gauss_legendr": 34, "gaussian": [32, 34, 41, 45, 49, 75, 104, 110, 120], "gaussian_quadratur": 34, "gaussopt": [104, 108], "gave": 105, "gb": 17, "gb73": [52, 112], "gcc": 62, "gcd": [9, 25, 27, 28, 43, 45, 48, 49, 72, 73, 75, 76, 77, 102, 110, 112, 116], "gcd_aa_method": 72, "gcd_list": 74, "gcd_term": 45, "gcdex": [10, 28, 45], "ge": [6, 8, 10, 30, 41, 43, 66, 84], "gedg": 46, "gegenbau": 45, "gegenbauer_poli": [32, 45], "gegenbauer_polynomi": 32, "gegenbauerc3": 32, "gegenbauerpolynomi": 32, "gen": [17, 22, 23, 24, 27, 28, 45, 55, 75], "gen_count": 17, "gen_legendr": 105, "gener": [2, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 60, 61, 62, 64, 65, 66, 67, 72, 74, 75, 77, 83, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 119, 120, 122], "general_pythagorean": 49, "general_sum_of_even_pow": 49, "general_sum_of_squar": 49, "generalis": 6, "generalized_hypergeometric_funct": 32, "generate_bel": [73, 107], "generate_dimino": [15, 17], "generate_grai": 12, "generate_oriented_forest": 73, "generate_schreier_sim": [15, 17], "generators_and_rel": 15, "generatorserror": [10, 41], "generatorsneed": [74, 109], "generatorsneedederror": 10, "generatortyp": 66, "genform": [52, 53], "genfrac": 43, "gens1": 22, "gens2": 22, "gens2a": 22, "gens_a": 22, "gens_f": 22, "gens_i": 22, "geo": 109, "geomet": 29, "geometr": [41, 73, 75, 83, 99, 104, 106, 107, 119], "geometri": [74, 76, 83, 86, 102, 104, 108, 110], "georg": 112, "geq": [10, 28, 32, 49], "get": [4, 5, 6, 8, 10, 12, 16, 18, 19, 21, 22, 25, 27, 28, 29, 30, 32, 41, 43, 45, 46, 47, 48, 49, 52, 53, 57, 61, 66, 67, 72, 77, 102, 103, 109, 110, 115, 117, 118, 119, 121, 122, 123], "get_adjacency_dist": 18, "get_adjacency_matrix": 18, "get_contraction_structur": [59, 60], "get_default_datatyp": 62, "get_diag_block": 41, "get_domain": 110, "get_exact": 28, "get_field": 72, "get_indic": [59, 60], "get_interfac": 62, "get_modulu": 45, "get_numbered_const": 72, "get_numpy_arrai": 5, "get_period": [6, 32], "get_positional_dist": 18, "get_precedence_dist": 18, "get_precedence_matrix": 18, "get_prototyp": 62, "get_r": 72, "get_subset_from_bitstr": 12, "get_symmetric_group_sg": 22, "get_transvers": 22, "getn": 27, "geto": 27, "getter": 27, "gf": [18, 28], "gf_edf_zassenhau": 76, "gff": 72, "gff_list": 72, "gianfranco": 112, "gianni": 112, "giant": 43, "giovini": 112, "git": [0, 2, 4, 102, 103, 104], "github": [2, 4, 73], "give": [6, 8, 16, 17, 18, 19, 20, 25, 27, 29, 30, 32, 34, 36, 41, 43, 45, 48, 49, 52, 54, 62, 66, 72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 106, 108, 109, 110, 113, 116], "given": [5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 29, 30, 32, 34, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 62, 64, 66, 67, 73, 75, 103, 104, 108, 113, 119, 122], "global": [27, 44, 47, 49, 52, 53, 62, 102, 104, 109], "global_dict": 44, "global_var": 62, "gloss": 7, "glossari": 43, "glue": 41, "gmn": [10, 112], "gmpy": [4, 28, 72, 94, 102, 103, 105, 109, 110], "gmpy2": [72, 109], "gmpyfinitefield": 28, "gmpyinteg": 28, "gmpyrationalfield": 28, "gn": 13, "gnu": 102, "go": [6, 7, 8, 17, 30, 42, 52, 96, 109, 115, 117], "goal": 61, "goe": [0, 8, 23, 27, 31, 52, 66, 76, 77], "golden": [5, 27, 43], "golden_ratio": 27, "goldenratio": [5, 48, 109, 120], "goldstein": 112, "golomb": 43, "golumb": 43, "gon": 15, "gone": 96, "good": [0, 2, 4, 5, 6, 8, 27, 41, 43, 46, 48, 52, 66], "googl": [2, 105], "gordan": 102, "gordon": 112, "gosper": [25, 102, 109], "gosper_norm": 25, "gosper_sum": [25, 110], "gosper_term": 25, "got": [45, 73, 74, 110, 117, 118], "gotcha": [3, 27, 116], "gov": [30, 32], "govern": 43, "gp": [28, 52], "gr": [17, 112], "gracefulli": [59, 108], "grad": 106, "grade": 45, "gradedlexord": 45, "gradient": [106, 108], "graduat": 112, "graham": [18, 29, 30, 43], "grai": [14, 21, 33, 104], "gram": 41, "grammar": 48, "gramschmidt": 41, "graph": [18, 32, 46, 60, 102], "graphviz": 121, "gray_to_bin": 12, "graycod": 12, "graycode_subset": 12, "great": [46, 49, 104], "greater": [6, 10, 11, 18, 27, 30, 43, 48, 52, 55, 64], "greatest": [10, 43, 45, 102, 120], "greatli": [97, 107, 122], "greedi": [43, 45, 48], "greedy_algorithm_for_egyptian_fract": 43, "greek": [27, 43, 44, 46], "greek_lett": 46, "green": 17, "greet": 36, "grevlex": [35, 45, 46, 66, 120], "grid": 108, "grigoryan": 53, "grlex": [45, 46, 66], "groebner": [10, 45, 48, 72, 74, 109, 120], "groebner_gcd": 10, "groebner_lcm": 10, "groebnerbasi": [45, 110, 120], "groebnertool": 10, "grondel": 42, "ground": [10, 28, 41, 45, 72, 102], "ground_root": 73, "group": [14, 18, 19, 22, 23, 24, 29, 33, 43, 45, 48, 52, 54, 66, 104, 105, 110], "group_construct": [13, 15], "groupprop": [15, 17], "grover": 102, "grow": [6, 10, 22, 27, 43], "growth": [10, 16, 43, 106, 114], "gru96": [7, 27, 112], "gruntz": [3, 9, 11, 27, 76, 77, 102, 105, 107, 109, 112], "gr\u00f6bner": [9, 45, 102, 103, 104, 110, 112, 116], "gsl": 62, "gsoc": [103, 104, 106], "gt": [66, 84, 103], "guarante": [10, 17, 18, 27, 41, 52, 66, 70, 106, 122], "guard": 62, "guess": [5, 8, 49, 54], "guess_solve_strategi": 99, "guid": [4, 46, 83], "guidelin": 52, "guiver": 112, "gy": 52, "gyz": 49, "gz": 17, "h": [1, 3, 6, 10, 12, 17, 22, 25, 27, 29, 32, 41, 44, 45, 47, 48, 52, 57, 62, 73, 112, 123], "h5": 19, "h_": [10, 17, 22, 32, 34], "h_0": 22, "h_1": [17, 22], "h_f": 10, "h_i": 22, "h_m": 10, "h_n": [22, 32, 34], "h_name": 62, "h_p": 10, "h_q": 10, "ha": [5, 6, 8, 10, 12, 16, 17, 18, 20, 22, 25, 27, 28, 29, 30, 32, 33, 34, 36, 38, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 62, 64, 66, 73, 75, 76, 85, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 122], "hack": [52, 80, 109, 110], "hackman": 43, "had": [8, 27, 43, 45, 46, 52, 63, 105], "hadamard": [41, 102], "hadamardproduct": 105, "hairer": 112, "half": [8, 10, 28, 32, 34, 43, 44, 45, 48], "half_gcdex": [10, 28, 45], "halt": 17, "hamberg": 20, "hamburg": 66, "hamilton": 12, "hamiltonian": 12, "hand": [8, 10, 18, 19, 27, 32, 34, 36, 41, 43, 46, 62, 64, 80], "handbook": [17, 24, 32, 104, 112], "handi": [2, 25, 27, 41, 46], "handl": [9, 11, 15, 18, 27, 34, 36, 40, 43, 45, 48, 54, 57, 59, 61, 66, 67, 72, 73, 77, 83, 99, 102, 103, 105, 108, 109], "handler": 102, "hang": [52, 53, 72, 73, 74, 75, 76, 77, 109, 110], "hankel": [32, 34], "hankel1": 32, "hankel2": 32, "hankel_transform": 34, "hankelh1": 32, "hankelh2": 32, "hankeltransform": 34, "happen": [2, 5, 27, 45, 48, 75, 104, 115], "happili": [34, 59], "hard": [18, 43, 46, 52, 55], "harder": 6, "harmon": [27, 31, 43, 92, 102, 105], "harmonic_numb": 29, "harmonicnumb": 29, "harmonicnumber2": 29, "has_assoc_field": 73, "has_characteristiczero": 72, "has_dup": 77, "has_only_gen": 45, "has_r": 72, "has_varieti": 77, "hasattr": [48, 63], "hash": [10, 48, 52, 62, 66, 75, 106, 122], "hashabl": [23, 66], "hasn": 53, "hate": 46, "have": [1, 2, 4, 5, 6, 8, 10, 12, 17, 18, 19, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 41, 43, 45, 46, 48, 49, 52, 55, 57, 59, 61, 62, 64, 66, 71, 72, 76, 85, 96, 100, 102, 103, 104, 105, 106, 108, 110, 116, 117, 118, 119, 120, 121, 122], "he": [6, 10, 29, 112], "head": [27, 104, 118], "header": [61, 62], "heavi": 118, "heavili": 53, "heavisid": [31, 34, 105], "heaviside_step_funct": 32, "height": 46, "heinz": [20, 112], "held": [59, 118], "hellman": 43, "help": [1, 6, 8, 27, 32, 34, 43, 46, 49, 52, 53, 61, 62, 72, 73, 74, 122], "helper": [6, 8, 17, 21, 24, 27, 33, 35, 49, 52, 53, 61, 70, 73, 104, 107, 109, 110], "henc": [6, 8, 10, 17, 32, 36, 43, 46, 49, 53, 64], "hensel": [10, 74], "heori": 112, "heorist": 112, "herbert": 112, "here": [2, 5, 6, 8, 10, 12, 16, 17, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 41, 43, 45, 46, 48, 49, 52, 54, 59, 60, 61, 62, 64, 66, 71, 102, 103, 104, 108, 111, 113, 115, 116, 117, 118, 120, 123], "hermit": [27, 30, 34, 41, 45, 105, 109], "hermite_poli": [32, 45], "hermite_polynomi": 32, "hermite_quadratur": 34, "hermiteh": 32, "hermitepolynomi": 32, "hermitian": [37, 39, 41, 42], "heroic": 45, "hessenberg": 41, "hessian": 41, "hessian_matrix": 41, "heurisch": [34, 105], "heurisch_wrapp": 34, "heurist": [6, 9, 18, 34, 48, 50, 55, 72, 82, 87, 104, 110, 112, 122], "heuristicgcdfail": [75, 76, 77], "heuristicgcdfailederror": 10, "hexidecim": 84, "hgh": 17, "hi": [0, 49], "hierarch": 27, "hierarchi": 46, "higer": 110, "high": [5, 27, 43, 45, 46, 49, 72, 108], "higher": [5, 11, 27, 32, 41, 42, 45, 48, 52, 57, 67, 70, 75, 107], "highest": [20, 45, 49], "highli": [5, 27, 45, 62], "hilbert": 102, "hill": [32, 106], "hinder": 52, "hint": [8, 11, 12, 27, 30, 34, 41, 43, 45, 50], "hint_integr": 52, "hintnam": [52, 53], "hir": 27, "histogram": 64, "histor": [2, 112], "histori": [0, 2], "hit": [27, 70, 118], "hline": 46, "hm": 10, "hnorsettw14": [52, 112], "hobj": 46, "hoeij": 112, "hold": [6, 8, 22, 27, 30, 32, 41, 45, 48, 52, 54, 62, 105, 122], "holder": [0, 27], "holomorph": 6, "holt": [17, 24], "holzer": 110, "homogen": [10, 41, 45, 49, 52, 53, 72, 74, 106, 108, 109], "homogeneous_differential_equ": 52, "homogeneous_general_quadrat": 49, "homogeneous_ord": 72, "homogeneous_ternary_quadrat": 49, "homogeneous_ternary_quadratic_norm": 49, "homomorph": 10, "homomorphismfailederror": 10, "hong": 41, "honour": [27, 31], "hook": 104, "hope": 17, "hopefulli": 6, "horizont": [41, 46, 52], "horner": [27, 45, 102], "horner_schem": 45, "horowitz": 34, "hort": 112, "host": 2, "hostnam": 62, "hotz": 74, "how": [7, 8, 10, 18, 27, 31, 32, 33, 36, 37, 41, 42, 44, 46, 48, 49, 52, 53, 61, 62, 66, 76, 110, 114, 117, 118, 121, 122], "howev": [0, 2, 5, 6, 7, 8, 10, 17, 22, 25, 27, 29, 30, 32, 36, 41, 43, 45, 46, 48, 52, 53, 54, 61, 66, 102, 104, 117, 122], "hp": 10, "hpad": 41, "hpeval": 10, "hpq": 10, "hq": 10, "hsin": 112, "hstack": [41, 73], "ht": 34, "htm": [18, 32, 43, 49, 112], "html": [2, 12, 19, 20, 27, 29, 30, 32, 43, 46, 47, 49, 52, 61, 66], "http": [11, 12, 15, 16, 17, 18, 19, 20, 25, 27, 29, 30, 32, 34, 41, 43, 45, 46, 47, 48, 49, 52, 61, 62, 66, 84, 94, 97, 104, 112], "hu": 43, "huge": [34, 43, 106], "hulpk": 17, "human": [6, 45, 46, 96], "hurwitz": 32, "hurwitz_zeta_funct": 32, "hxz": 49, "hydrogen": 102, "hyper": [8, 29, 32, 48, 54, 77, 103, 122], "hyperbol": [31, 32, 33, 48, 82, 87, 104, 122], "hyperbolicfunct": 31, "hyperegeometr": 48, "hyperexpand": [6, 8, 27, 32, 103], "hypergeometr": [3, 5, 6, 9, 27, 29, 31, 33, 54, 96, 103, 104, 110, 112, 122], "hypersimilar": 33, "hypersimp": [25, 27, 33, 77], "hypothesi": 110, "hypothet": 64, "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 70, 72, 73, 74, 75, 76, 77, 82, 83, 84, 89, 92, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "i386": 97, "iT": 6, "i_": [6, 8, 32], "i_1": [45, 57], "i_2": 45, "i_a": 57, "i_b": 57, "i_n": [45, 57], "ibin": 73, "ibm": 48, "ic": [43, 77], "icm": 112, "icosahedr": 19, "id": [22, 30], "idea": [2, 6, 13, 17, 24, 27, 34, 43, 48, 49, 52, 61, 62, 72, 122], "ideal": [10, 45, 110, 112], "idempot": 72, "ident": [10, 17, 18, 24, 25, 27, 29, 30, 37, 38, 41, 42, 45, 46, 48, 52, 59, 66, 72, 103, 105, 109, 112, 119, 122], "identif": 6, "identifi": [1, 5, 19, 27, 34, 35, 41, 52, 53, 76, 109, 122], "identityfunct": 31, "idiff": 107, "idiom": [82, 88], "idiomat": 104, "idx": [46, 59, 60, 61], "ie": [18, 83], "ieee": 27, "ield": 112, "ifascii_nougli": 46, "iff": [7, 8, 10, 11, 18, 36, 41, 49], "iffer": 112, "ifndef": 62, "igcd": 75, "ignor": [6, 17, 27, 43, 45, 48, 73, 75, 109, 110], "ii": [6, 43, 46, 52], "iii": [46, 52], "ilcm": 75, "illustr": 2, "im": [6, 27, 31, 39, 41, 46, 70, 72, 73, 110, 122], "imag": [10, 17, 47, 87, 103], "imageset": [47, 106, 107, 108, 109], "imaginari": [5, 27, 30, 32, 41, 45, 48, 72, 73, 109, 113], "imaginary_numb": 27, "imaginary_unit": 27, "imath": 8, "imit": 112, "immedi": [6, 17, 27, 32, 36, 61], "immut": [27, 33, 37, 40, 41, 42, 57, 73, 83, 104, 109, 113, 119], "immutabledensematrix": [37, 39], "immutabledensendimarrai": 57, "immutablematrix": [38, 40, 41, 42, 67, 104, 108, 110, 119], "immutablesparsematrix": 40, "immutablesparsendimarrai": 57, "implement": [7, 9, 10, 13, 17, 18, 23, 27, 29, 30, 31, 32, 33, 34, 36, 41, 43, 45, 48, 49, 50, 52, 53, 54, 56, 59, 60, 64, 65, 67, 72, 73, 74, 75, 77, 80, 82, 84, 85, 87, 90, 92, 94, 97, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 114, 120, 122], "implemented_funct": [61, 67], "impli": [0, 8, 10, 17, 28, 36, 57, 59, 60, 73, 102], "implic": [10, 36], "implicit": [24, 27, 44, 52, 55, 60, 61, 62, 104, 110], "implicit_appl": 44, "implicit_multipl": 44, "implicit_multiplication_appl": 44, "implicitli": 27, "import": [1, 3, 4, 5, 6, 17, 18, 22, 24, 25, 27, 29, 32, 34, 35, 36, 39, 41, 43, 44, 45, 46, 48, 49, 52, 53, 54, 57, 61, 62, 66, 67, 72, 79, 83, 87, 89, 102, 104, 105, 108, 110, 117, 119, 122, 123], "importantli": 64, "imposs": [52, 53, 75], "impract": 52, "imprecis": 5, "impress": 76, "improp": [34, 75, 109, 110], "improperli": 27, "improv": [6, 10, 45, 52, 60, 76, 77, 78, 82, 83, 84, 85, 89, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 114, 122], "imul_num": 72, "inabl": 53, "incident": 0, "inclu": 102, "includ": [0, 2, 4, 5, 8, 10, 18, 22, 27, 32, 34, 38, 40, 41, 43, 44, 45, 46, 47, 48, 52, 53, 58, 62, 64, 66, 75, 76, 100, 102, 104, 105, 106, 107, 108, 109, 111, 114, 117, 119, 123], "includepr": [10, 45], "inclus": [11, 25, 47, 52], "incompat": 71, "incomplet": [29, 32, 103, 105], "incomplete_gamma_funct": 32, "inconclus": 56, "incongru": 8, "inconsist": [25, 27, 52, 73, 74, 75, 76, 77], "inconveni": 46, "incorpor": 48, "incorrect": [17, 27, 43, 64, 72, 73, 74, 75, 76, 77, 109, 110], "incorrectli": [73, 75, 76, 109], "increas": [5, 10, 18, 24, 27, 43, 52, 66, 75, 104, 110], "increment": [17, 18, 19, 25, 104], "incur": 5, "ind": 22, "inde": [6, 8, 15, 17, 25, 32, 52, 110], "indefinit": [6, 10, 34, 45, 109, 112, 114], "indent_cod": 46, "indep": 52, "indep_div_dep": 52, "independ": [7, 8, 27, 32, 34, 41, 45, 48, 49, 52, 53, 54, 55, 61, 66, 72, 105, 106, 112, 118], "independent_set": [45, 110], "indetermin": [10, 27, 54], "indeterminate_form": 27, "index": [6, 8, 10, 16, 17, 18, 22, 25, 27, 28, 30, 32, 33, 41, 43, 45, 46, 57, 58, 59, 61, 72, 73, 74, 77, 106, 107, 108, 109, 110, 112, 116], "index_method": 59, "indexconformanceexceptionerror": 59, "indexedbas": [46, 59, 60, 61, 108], "indexerror": [18, 41, 45, 73, 77, 109, 110], "indexexceptionerror": 60, "indic": [5, 6, 10, 12, 16, 17, 18, 19, 21, 22, 25, 27, 29, 32, 34, 36, 41, 42, 43, 46, 48, 57, 58, 59, 60, 61, 62, 66, 104, 119], "indices_contain_equal_inform": 32, "indici": 52, "indirect": 0, "individu": [27, 47, 52], "induc": [27, 41], "inear": 112, "ineffici": [66, 76], "inequ": [8, 10, 27, 33, 47, 50, 55, 74, 75, 77, 102, 107, 108, 109, 110], "inequival": 6, "inert": 52, "inexact": 27, "inf": [18, 41, 45, 47, 52, 110], "infeas": [10, 45], "infer": [8, 33, 34, 52, 61, 105, 107], "infimum": 47, "infin": [6, 7, 10, 11, 29, 30, 31, 32, 34, 45, 47, 48, 52, 72, 75, 77, 104, 106, 108, 109, 110], "infinit": [5, 11, 25, 27, 28, 29, 30, 41, 43, 48, 49, 55, 66, 73, 75, 106, 108], "influenc": 120, "info": [46, 52, 53], "inform": [6, 8, 10, 17, 18, 24, 27, 29, 32, 34, 41, 46, 49, 50, 59, 60, 62, 64, 100, 104, 105, 108, 109, 112], "informatik": 66, "infrastructur": [46, 53, 105], "infti": [6, 7, 8, 11, 27, 29, 32, 34, 52, 114, 117], "infunct": 27, "inher": [106, 115], "inherit": [27, 31, 36, 38, 39, 46, 62, 63, 96, 104, 110], "inhomogen": [52, 54, 73, 109], "inhomogeneous_general_quadrat": 49, "inhomogeneous_ternary_quadrat": 49, "init": [52, 54, 73, 112], "init_print": [5, 34, 35, 41, 105, 107, 117, 121, 123], "init_sess": 109, "init_subgroup": 17, "initi": [1, 6, 8, 17, 21, 27, 29, 32, 35, 44, 48, 52, 54, 62, 68, 69, 73, 74, 76, 104, 106, 109], "inject": [27, 28, 45], "inlin": [46, 62], "inner": [6, 25, 102, 103, 106], "innermost": 27, "innerproduct": 103, "inoutargu": 62, "input": [5, 10, 22, 27, 29, 36, 41, 43, 45, 46, 48, 49, 61, 62, 64, 66, 67, 73, 75, 107, 108, 118, 122, 123], "inputargu": 62, "inputoutput": 62, "inquiri": 27, "inria": 112, "insensit": 62, "insert": [41, 44, 69, 110, 119], "insid": [8, 17, 18, 23, 27, 45, 46, 49, 59, 64, 106, 110, 119], "inspir": 53, "instal": [1, 2, 3, 61, 67, 81, 90, 101, 105, 108], "instanc": [5, 8, 10, 19, 21, 25, 27, 30, 34, 43, 44, 45, 46, 47, 52, 55, 59, 60, 61, 62, 64, 66, 67, 72, 73, 76, 77, 103, 105, 106, 108, 110, 113, 114, 117, 118, 119, 122], "instanti": [18, 27, 28, 73, 104, 108], "instead": [5, 8, 10, 17, 19, 22, 25, 27, 34, 36, 39, 43, 45, 46, 48, 52, 55, 59, 60, 64, 67, 72, 73, 75, 76, 82, 83, 87, 88, 102, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118], "institut": 112, "instruct": [46, 61, 62], "int": [5, 6, 25, 27, 29, 30, 32, 34, 35, 43, 46, 49, 52, 66, 73, 77, 109, 115, 117, 121], "int_": [6, 32, 34, 114, 117], "int_0": [6, 32, 34, 114], "int_1": 32, "int_a": 34, "int_l": [6, 8, 32], "int_x": 32, "intact": 61, "integ": [1, 3, 8, 10, 16, 17, 18, 19, 20, 22, 25, 28, 29, 31, 32, 33, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49, 52, 59, 60, 62, 64, 66, 72, 73, 74, 75, 77, 83, 102, 103, 104, 105, 108, 109, 110, 112, 113, 115, 118, 119, 120, 121, 123], "integer_as_sum_of_three_squar": 49, "integer_digit": 72, "integer_nthroot": [27, 30, 43], "integer_rational_reconstruct": [10, 43], "integerdivisionwrapp": [35, 110], "integermodr": [28, 75], "integerpartit": [16, 66], "integr": [3, 8, 9, 10, 25, 27, 29, 31, 33, 37, 39, 41, 45, 46, 52, 53, 62, 72, 73, 74, 75, 76, 77, 80, 82, 83, 87, 92, 94, 96, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 116, 117, 121], "integraltransform": 34, "integraltransformerror": 34, "integrand": [5, 6, 8, 32, 34, 101], "integration_techniqu": 34, "intellig": [48, 52, 122], "intend": [2, 6, 27, 44, 49, 52, 53, 54, 113], "intent": [27, 62], "interact": [3, 4, 27, 33, 34, 39, 48, 76, 83, 84, 96, 103, 104, 105, 121, 122], "interactive_travers": 110, "interchang": [6, 25, 52], "interest": [6, 8, 22, 29, 41, 43, 45, 48, 49, 61, 62, 66, 104, 105, 122], "interfac": [2, 10, 27, 45, 47, 61, 62, 73, 80, 92, 104, 106, 108, 109, 118], "interior": [45, 47, 107], "intermedi": 62, "intermitt": 73, "intern": [3, 5, 17, 27, 33, 46, 48, 50, 52, 53, 59, 62, 64, 66, 73, 93, 102, 103, 106, 109, 112, 118, 121], "interpol": [10, 45, 102], "interpolating_poli": 45, "interpret": [4, 17, 25, 27, 29, 32, 34, 37, 41, 42, 43, 45, 46, 48, 49, 60, 64, 73, 117, 119], "interrupt": 0, "intersect": [10, 17, 47, 73, 99, 103, 104, 107, 108, 110], "intersection_": 47, "interv": [5, 10, 27, 32, 34, 45, 47, 72, 73, 75, 76, 102, 103, 104, 107, 109, 110], "interval_": 47, "intervalmath": 110, "introduc": [6, 8, 22, 25, 27, 32, 46, 49, 76, 88, 99, 102, 104, 106, 116, 117], "introduct": [3, 18, 33, 46, 49, 52, 116, 121], "intuit": [11, 27, 52], "inv": [18, 41, 42], "inv_mod": 41, "inv_perm": 18, "inv_quick": 107, "inv_trig_styl": 46, "invalid": [27, 73, 75, 77, 104, 109, 110], "invari": [8, 22, 45, 52], "invent": 54, "invers": [8, 9, 17, 18, 27, 28, 31, 32, 33, 34, 38, 41, 42, 43, 45, 46, 104, 105, 109, 115, 119], "inverse_adj": 41, "inverse_cosine_transform": 34, "inverse_fourier_transform": 34, "inverse_funct": 32, "inverse_g": 41, "inverse_hankel_transform": 34, "inverse_laplace_transform": [34, 77], "inverse_lu": 41, "inverse_mellin_transform": 34, "inverse_sine_transform": 34, "inverse_trigonometric_funct": 30, "inversecosinetransform": 34, "inverseerf": 32, "inverseerf2": 32, "inverseerfc": 32, "inversefouriertransform": 34, "inversehankeltransform": 34, "inverselaplacetransform": 34, "inversemellintransform": 34, "inversesinetransform": 34, "inversion_vector": 18, "invert": [10, 27, 28, 41, 43, 45, 52, 105, 110, 119], "investig": [6, 8, 18, 66], "invok": 61, "involut": 103, "involv": [6, 8, 17, 25, 27, 29, 34, 37, 43, 48, 52, 54, 72, 73, 74, 75, 76, 77, 106, 107, 109, 110, 122], "io": 109, "ion": 49, "iota": 46, "ipmnet": 52, "ipython": [1, 35, 83, 98, 103, 104, 105, 121], "ipythonprint": 105, "iren": 32, "iron": 105, "irrat": [43, 45, 72, 73, 76, 108, 110, 117], "irrational_numb": 27, "irreduc": [10, 45, 72, 102, 122], "irreducibili": 45, "irrespect": [34, 49], "is_": [27, 109], "is_abelian": 17, "is_above_fermi": 32, "is_algebra": 27, "is_algebraic_expr": [27, 105], "is_alt_sym": [17, 24], "is_anti_symmetr": 41, "is_antihermitian": 73, "is_assumpt": 113, "is_below_fermi": 32, "is_bound": 108, "is_clos": 47, "is_cnf": 36, "is_commut": [27, 34, 66, 96], "is_compar": [27, 110], "is_complex": [27, 109], "is_composit": 27, "is_const": 27, "is_cyclotom": 45, "is_diagon": 41, "is_diagonaliz": 41, "is_disjoint": [10, 47, 108], "is_dnf": [36, 105], "is_dummi": 83, "is_empti": 18, "is_evalu": 27, "is_even": [15, 17, 18, 27, 73], "is_expressiondomain": 73, "is_extended_posit": 73, "is_extended_r": [27, 73], "is_finit": [27, 73, 108], "is_float": 102, "is_groebn": 10, "is_ground": 45, "is_group": [15, 17], "is_hermitian": [41, 42, 73], "is_homogen": 45, "is_hypergeometr": [25, 27, 110], "is_ident": 18, "is_imaginari": [27, 73, 109], "is_infinit": [27, 108], "is_infinitesim": 108, "is_integ": [27, 46, 60, 76], "is_irr": 27, "is_irreduc": 45, "is_iter": 66, "is_left_unbound": 47, "is_linear": 45, "is_low": 41, "is_lower_hessenberg": 41, "is_minim": 10, "is_mon": 74, "is_monomi": [10, 73], "is_mul": [27, 84], "is_multivari": 45, "is_neg": [27, 73, 77, 83], "is_nilpot": [17, 41], "is_nnf": 36, "is_noninteg": 27, "is_nonneg": [27, 73], "is_nonposit": [27, 73], "is_nonzero": [27, 73, 75, 108], "is_norm": [17, 28, 73], "is_nthpow_residu": [43, 110], "is_numb": [25, 27, 31, 107, 110], "is_odd": [18, 27], "is_on": [45, 72], "is_only_above_fermi": 32, "is_only_below_fermi": 32, "is_open": 47, "is_polar": 27, "is_polynomi": [27, 76], "is_posit": [27, 73, 76, 83, 113], "is_prim": 27, "is_primit": [17, 28, 74], "is_primitive_root": 43, "is_proper_subset": [47, 108], "is_proper_superset": [47, 108], "is_quad_residu": 43, "is_quadrat": 45, "is_r": 72, "is_rat": 27, "is_rational_funct": 27, "is_real": [27, 30, 31, 73, 77, 102, 106, 108], "is_rewritable_or_compar": 10, "is_right_unbound": 47, "is_sequ": [66, 103], "is_set": 66, "is_simpl": 32, "is_singleton": 18, "is_solv": 17, "is_sqf": 72, "is_squar": [41, 43, 73, 110], "is_squarefre": [45, 72], "is_subgroup": 17, "is_subset": [47, 108], "is_superset": [47, 108], "is_symbol": 41, "is_symbolicdomain": 73, "is_symmetr": [41, 42], "is_term": [45, 73], "is_transcendent": 27, "is_transit": 17, "is_trivi": 17, "is_unbound": 108, "is_unit": 72, "is_univari": 45, "is_upp": [41, 73], "is_upper_hessenberg": 41, "is_zero": [27, 41, 45, 73, 109], "is_zero_dimension": 110, "isbn": 112, "isdisjoint": 47, "isfinit": 27, "isinst": [27, 38, 46, 48, 59, 62, 84], "islic": 66, "isn": [27, 34, 67, 117], "isol": [10, 30, 45, 55, 62, 72, 102, 110], "isomorph": [20, 45, 102], "isomorphismfailederror": 10, "isomprph": 10, "isort": 110, "isprim": [43, 101], "isprimit": 27, "isqrt": 73, "issac": 112, "issn": 41, "issu": [3, 4, 27, 36, 41, 46, 62, 64, 102, 103, 104, 105, 106, 122], "issubset": 47, "issuperset": 47, "isympi": [75, 83, 84, 87, 89, 90, 91, 93, 96, 102, 103, 104], "iszerofunc": 41, "item": [7, 16, 18, 26, 27, 29, 41, 43, 45, 46, 47, 52, 53, 61, 64, 66], "iter": [16, 17, 18, 21, 22, 27, 29, 32, 33, 37, 43, 45, 46, 47, 48, 49, 54, 55, 56, 57, 59, 61, 62, 64, 65, 72, 74, 102, 103, 108, 109], "iterate_binari": 21, "iterate_graycod": 21, "itercoeff": 72, "itermonom": 72, "itermonomi": 77, "iterterm": 72, "itertool": [21, 29, 66], "itex": 46, "ith": [18, 43, 103], "its": [0, 2, 6, 10, 12, 15, 17, 18, 25, 27, 28, 29, 30, 32, 34, 36, 38, 41, 43, 45, 46, 47, 48, 52, 54, 59, 60, 64, 66, 104, 107, 108, 109, 112, 115, 119, 120, 121, 122], "itself": [10, 16, 17, 18, 24, 27, 29, 41, 43, 45, 46, 48, 59, 60, 62, 64, 66, 103, 104], "ivisor": 112, "iy_": 32, "iyad": 112, "iz": 32, "j": [6, 8, 10, 17, 18, 22, 24, 25, 28, 29, 32, 37, 38, 41, 42, 43, 48, 49, 57, 59, 60, 61, 66, 103, 112, 119], "j_": [6, 8, 29, 32, 34], "j_1": [29, 57], "j_2": 29, "j_m": 57, "j_n": 32, "j_y": 117, "jacobi": [34, 43, 45, 105], "jacobi_norm": 32, "jacobi_poli": [32, 45], "jacobi_polynomi": 32, "jacobi_symbol": 43, "jacobian": [41, 99], "jacobip": 32, "jacobipolynomi": 32, "jame": 73, "jan": [72, 74, 80, 81, 82], "januari": [43, 112], "jason": 46, "javadi": 112, "javascript": 103, "jcell": 41, "jeffrei": [41, 48], "jensen": 5, "jeroen": 42, "jerom": 66, "jeromekelleh": 66, "jerrum": 104, "jewett": 43, "jm09": [10, 112], "jn": [32, 45, 117], "jn_zero": [32, 77], "jnth": 112, "job": [18, 46], "joel": 52, "john": [32, 49, 52, 112], "johnson": 18, "join": [18, 27, 41, 42, 46, 48, 52, 66], "jordan": [6, 41, 52, 109, 119], "jordan_cel": [41, 73, 109], "jordan_form": [41, 73, 119], "josephu": 18, "josephus_problem": 18, "journal": [41, 48, 64, 112], "jpr2718": 49, "jr": 32, "jsco": 112, "jscode": 110, "judg": 2, "jul": [94, 95, 99, 103, 105], "juli": [49, 112], "jun": 102, "jupyt": 75, "jurjen": 46, "just": [1, 2, 7, 8, 17, 24, 27, 28, 32, 33, 34, 35, 36, 43, 46, 52, 62, 72, 76, 80, 85, 103, 105, 106, 107, 109, 110, 114, 117, 119, 122], "justifi": 10, "jx": 103, "jxket": 103, "jython": 97, "jzket": 103, "k": [3, 5, 6, 8, 10, 12, 17, 20, 21, 24, 25, 27, 28, 29, 30, 32, 34, 37, 41, 42, 43, 45, 48, 49, 52, 54, 57, 60, 64, 66, 72, 73, 81, 103, 106, 109, 110, 112, 123], "k1": [28, 43], "k2": 43, "k_": [6, 32], "k_1": [8, 43, 52], "k_2": 52, "k_4": 52, "k_i": [8, 43], "k_j": 8, "k_m": 43, "k_sym": 29, "k_u": 8, "kalevi": [72, 73, 74], "kanesmethod": 108, "kappa": 46, "kar81": [25, 112], "karr": [25, 105, 112], "katja": 74, "kazuhiro": 112, "kbin": 73, "keber": 41, "keep": [2, 5, 6, 7, 8, 22, 27, 29, 32, 41, 45, 52, 73, 76, 114], "kei": [10, 16, 17, 18, 26, 27, 37, 41, 43, 45, 46, 48, 49, 52, 53, 59, 64, 66, 106, 119], "kelleh": 66, "kelli": 112, "kept": 66, "kern": 41, "kernel": [41, 54], "ket": [102, 104], "key2bound": 41, "key2ij": 41, "keyerror": [75, 110], "keyfunc": 66, "keyword": [5, 17, 18, 27, 29, 41, 43, 46, 48, 61, 73, 102, 104, 110, 120, 122], "kid": 106, "killable_index": 32, "kind": [27, 29, 32, 34, 41, 45, 47, 52, 53, 55, 66, 73, 102, 114, 122], "kirpichev": 0, "kl89": [10, 112], "klein": 18, "km": 43, "kn": 43, "knot": 32, "know": [2, 5, 6, 8, 27, 34, 41, 43, 45, 46, 48, 52, 66, 76, 114, 116], "knowledg": [8, 25, 52], "known": [0, 5, 8, 16, 17, 18, 27, 28, 29, 31, 32, 41, 43, 47, 48, 52, 53, 66, 73, 83, 109], "knu85": [10, 112], "knuth": [12, 18, 64, 107, 112], "koe98": [28, 112], "koepf": [48, 112], "kog": 66, "koshi": 43, "kozen": 112, "kredel": 112, "kreher": 18, "kroneck": [32, 85, 104, 106], "kronecker_delta": 32, "kroneckerdelta": [32, 104, 105, 109], "ksubset": 21, "kt": 52, "kth": [32, 43], "ku": 46, "kvxefz87": 49, "kw": 27, "kw88": [45, 112], "kw_arg": [12, 20, 60], "kwarg": [11, 17, 18, 25, 27, 28, 30, 32, 36, 37, 38, 39, 41, 42, 46, 47, 48, 52, 53, 57, 61, 67, 76, 77, 108, 109], "kwong": 112, "kx": 52, "l": [6, 7, 8, 10, 16, 17, 18, 25, 32, 34, 41, 42, 43, 46, 49, 52, 54, 60, 62, 66, 112], "l1_norm": 73, "l_": 34, "l_0": 29, "l_1": [8, 29], "l_i": 8, "l_n": [32, 34], "l_u": 8, "l_v": 8, "la": 17, "lab": 75, "label": [10, 20, 22, 27, 46, 48, 60, 108], "labeledtre": 20, "labelfunc": 46, "lack": [46, 77], "lagrang": [27, 45, 49, 107], "laguerr": [34, 45, 105, 109], "laguerre_poli": [32, 45], "laguerre_polynomi": 32, "laguerrel": 32, "laguerrel3": 32, "laguerrepolynomi": 32, "lam_f": 67, "lamar": 52, "lambda": [18, 37, 38, 41, 42, 43, 45, 46, 47, 48, 52, 54, 57, 66, 67, 82, 84, 108, 109], "lambda_": 6, "lambda_1": 52, "lambda_2": 52, "lambda_3": 52, "lambda_4": 52, "lambda_c": 6, "lambda_not": 44, "lambdaprint": 33, "lambdarepr": 46, "lambdastr": 67, "lambdifi": [5, 32, 33, 46, 61, 65, 72, 73, 77, 85, 94, 102, 103, 105, 107, 108, 109, 110, 113], "lambert": [30, 34], "lambert_w_funct": 30, "lambertw": [31, 75, 109], "lamda": [38, 46, 47], "landau": [112, 114], "landscap": 18, "langl": 17, "languag": [2, 35, 46, 61, 62, 108, 115, 116], "laplac": [9, 34, 104, 109], "laplace_transform": [34, 75], "laplacetransform": 34, "larg": [6, 7, 8, 10, 18, 27, 34, 42, 43, 45, 46, 48, 60, 61, 66, 109, 122], "larger": [17, 18, 25, 27, 32, 38, 43, 48, 54, 62, 64, 106], "largest": [10, 18, 20, 27, 28, 30, 32, 41, 43], "last": [0, 5, 10, 18, 22, 25, 27, 30, 34, 37, 39, 41, 42, 43, 45, 46, 49, 59, 62, 66, 73, 74, 98, 102, 103, 104, 105, 108, 114, 117, 118, 119], "lastli": 52, "late": 122, "later": [6, 8, 10, 17, 27, 46, 48, 52, 64, 114], "latest": [2, 4, 110], "latex": [46, 73, 74, 76, 80, 96, 99, 100, 103, 105, 106, 107, 109, 110, 116, 117], "latexprint": 33, "latter": [6, 8, 17, 27, 29, 32, 43, 46, 49, 62, 66, 67, 106], "lattic": 49, "lattice_": 30, "laurent": [32, 75], "lazard": [34, 112], "lazi": 27, "lazili": 38, "lb": 64, "lbp": 10, "lbp_cmp": 10, "lbp_kei": 10, "lbp_mul_term": 10, "lbp_sub": 10, "lbrace": 10, "lc": [10, 45], "lceil": 6, "lcfactor": 10, "lcm": [10, 27, 28, 43, 45, 77, 102, 110, 116], "lcm_list": 74, "ldl": [41, 42, 102], "ldldecomposit": [41, 42], "ldlsolv": 41, "ldot": [6, 7, 8, 10, 11, 17, 27, 28, 29, 32, 43, 46, 49, 57, 109], "le": [6, 8, 10, 32, 84], "lead": [7, 10, 25, 27, 34, 43, 45, 48, 52, 62, 69, 74, 75, 77, 105, 110, 120], "leader": 43, "leading_expv": 10, "leading_term": 10, "leadterm": 7, "leadup": 43, "leaf": [46, 118], "learn": [41, 61, 71], "least": [5, 6, 10, 17, 27, 30, 34, 41, 42, 43, 45, 48, 52, 62, 83, 120], "leav": [27, 34, 43, 64, 113, 118], "lebesgu": 47, "lee": 41, "leedham": 17, "left": [6, 8, 10, 11, 17, 22, 27, 29, 30, 32, 34, 41, 43, 46, 47, 48, 52, 61, 62, 64, 66, 99, 104, 106, 114, 117, 122], "left_open": 47, "legaci": 27, "legendr": [34, 43, 45, 49, 105], "legendre_poli": [32, 45], "legendre_polynomi": 32, "legendre_symbol": 43, "legendrep": 32, "legendrep2": 32, "legendrepolynomi": 32, "legitim": 10, "legrang": 49, "lehmer": 18, "lehmer_cod": 18, "lemma": 6, "len": [15, 16, 17, 18, 22, 24, 27, 29, 32, 46, 48, 52, 60, 66, 108], "len_i": 46, "lenghti": 17, "length": [8, 12, 17, 18, 20, 24, 25, 27, 30, 32, 41, 43, 45, 46, 48, 52, 61, 66, 104], "leq": [6, 10, 17, 25, 32, 49], "lerch": [32, 104], "lerch_transcend": 32, "lerchphi": [32, 104], "less": [8, 10, 18, 25, 27, 29, 30, 32, 41, 43, 48, 49, 52, 54, 62, 101, 122], "lesser": 18, "let": [6, 7, 8, 10, 22, 27, 41, 42, 44, 46, 48, 49, 52, 54, 61, 96, 102, 103, 107, 110, 113, 115, 117, 118, 120, 121, 122], "lett": 18, "letter": [19, 27, 41, 43, 46, 66, 114], "level": [5, 10, 17, 24, 27, 32, 43, 45, 46, 48, 49, 59, 61, 62, 66, 73, 104, 108, 110], "levi": [32, 85], "levicivita": [32, 41, 105], "lex": [10, 45, 46, 66, 103, 120], "lexic": 16, "lexicograph": [10, 17, 18, 21, 22, 27, 45, 66, 102], "lexord": [10, 28, 45], "lf95": [10, 112], "lgebraic": 112, "lgorithm": 112, "lh": [27, 46, 109], "li": [10, 32, 105], "liabil": 0, "liabl": [0, 27, 36], "liao": 112, "libmp": 27, "librari": [0, 2, 3, 27, 28, 34, 62, 67, 102, 103, 104, 108, 113, 115, 116], "libtcc": 62, "licens": 3, "lie": [18, 50], "lie_heuristic_abaco1_product": 52, "lie_heuristic_abaco1_simpl": 52, "lie_heuristic_abaco2_similar": 52, "lie_heuristic_abaco2_unique_unknown": 52, "lie_heuristic_bivari": 52, "lie_heuristic_chi": 52, "lie_heuristic_function_sum": 52, "lie_heuristic_linear": 52, "liealgebra": 109, "lift": [6, 10, 22, 30, 32, 72, 74], "lightweight": 10, "like": [2, 4, 5, 8, 10, 13, 18, 27, 30, 32, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 57, 59, 61, 62, 66, 69, 73, 76, 77, 88, 96, 97, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 117, 118, 119, 122, 123], "likelihood": 43, "lim": [7, 11, 27, 114], "lim_": [6, 7, 32, 114, 117], "limit": [0, 4, 7, 10, 11, 25, 27, 28, 29, 32, 34, 37, 39, 41, 43, 46, 48, 49, 52, 60, 64, 66, 72, 73, 74, 75, 76, 77, 84, 85, 88, 97, 99, 106, 107, 108, 109, 110, 115, 116, 117], "limit_denomin": 27, "limit_seri": 85, "limitinf": 7, "limits_": [7, 11, 25, 27], "line": [2, 3, 6, 8, 17, 18, 22, 27, 35, 41, 42, 43, 46, 48, 52, 61, 62, 69, 75, 80, 102, 104, 107], "line_break": 46, "line_integr": 76, "linear": [5, 8, 10, 18, 25, 27, 30, 32, 33, 34, 38, 40, 45, 49, 53, 54, 55, 72, 73, 74, 99, 103, 105, 106, 108, 109, 110], "linear_coefficients_integr": 52, "linear_differential_equ": 52, "linearli": [10, 32, 41, 52, 54], "link": [61, 64, 73, 103], "linsolv": 76, "liouville_integr": 52, "list": [0, 4, 5, 6, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 57, 59, 60, 61, 62, 64, 66, 67, 72, 73, 74, 75, 76, 77, 82, 102, 103, 104, 107, 109, 110, 112, 116, 119, 123], "list2numpi": [41, 82], "list_free_indic": 22, "list_visitor": 64, "listcoeff": 72, "listmonom": 72, "listofsolut": 52, "listterm": 72, "liter": [1, 27, 35, 36, 44, 48, 60, 104, 115, 118], "literatur": 6, "litter": 27, "littl": [2, 8, 18, 41, 43, 46, 48, 64, 112], "liu": [42, 112], "liupc": 42, "live": [49, 72, 77, 104], "ll": 41, "lm": [10, 45], "lmm": 49, "ln": [27, 46, 76, 77], "load": 27, "load_ext": 105, "local": [2, 6, 27, 44, 72, 90, 109], "local_dict": 44, "local_var": 62, "locat": [18, 27, 41, 43, 48, 108], "log": [5, 6, 7, 8, 11, 17, 25, 27, 29, 30, 32, 34, 41, 43, 46, 48, 52, 72, 73, 75, 76, 77, 88, 102, 103, 104, 105, 107, 109, 110, 114, 122], "logarithm": [6, 8, 10, 27, 30, 31, 43, 48, 73, 75, 105, 116], "logarithmic_integr": 32, "logarithmicintegr": 32, "logcombin": [33, 52, 77, 100, 102, 122], "loggamma": 32, "loggammafunct": 32, "logic": [2, 3, 27, 33, 43, 47, 52, 73, 77, 99, 102, 103, 104, 105, 106, 109, 110, 113, 117], "logx": 27, "london": [49, 112], "long": [6, 8, 18, 27, 34, 41, 43, 46, 55, 61, 66, 73, 75, 76, 109, 110], "long_frac_ratio": 46, "longer": [10, 43, 46, 48, 66, 99, 102, 103, 104, 106, 107, 108, 120, 122], "longest": 66, "look": [2, 5, 8, 17, 27, 33, 41, 43, 46, 48, 49, 53, 64, 66, 96, 100, 118, 122], "lookup": [8, 9, 34, 41, 43, 72, 84], "loop": [5, 43, 46, 52, 64, 66], "loos": 27, "lopen": 47, "lorenzo": 112, "lose": [74, 110], "loss": [0, 6, 72], "lost": [27, 77], "lot": [6, 17, 27, 49, 77, 79, 84, 85, 89, 102, 110, 122], "loustaunau": 112, "low": [5, 10, 27, 43, 48, 61, 62, 66, 73], "lower": [8, 10, 17, 18, 25, 27, 32, 41, 48, 52, 60, 64, 66], "lower_central_seri": 17, "lower_incomplete_gamma_funct": 32, "lower_triangular_solv": 41, "lowercas": [52, 114], "lowergamma": 32, "lowest": [17, 22, 43], "lpart": 64, "lru": 108, "ls1": 23, "ls2": 23, "lseri": [75, 102], "lt": [45, 84, 103, 110], "lt_f": 10, "lt_h": 10, "ltd": 112, "ltrim": 73, "lu": [41, 105], "lu_solv": 41, "luca": 31, "lucas_numb": 29, "lucasnumb": 29, "luck": [75, 76], "ludecomposit": 41, "ludecomposition_simpl": 41, "ludecompositionff": 41, "luk69": [6, 8, 112], "luke": [32, 112], "lusolv": 41, "lvert": 6, "ly": 41, "m": [3, 4, 6, 8, 10, 15, 16, 17, 18, 22, 25, 27, 29, 32, 34, 37, 38, 39, 41, 42, 43, 46, 48, 49, 52, 54, 55, 57, 60, 61, 62, 64, 66, 75, 77, 103, 106, 107, 108, 109, 110, 112, 119, 123], "m1": [41, 43, 49, 52, 57], "m2": [41, 43, 49, 52, 57], "m3": [41, 49, 57], "m33": 43, "m4": 49, "m53": 43, "m_": 10, "m_0": 49, "m_1": 49, "m_i": 43, "m_ik": 43, "ma": [18, 112], "macaulay2": 104, "macdonald": 109, "machan": 104, "machin": [48, 52, 95, 113], "machineri": [27, 67], "maclaurin": [5, 25], "made": [2, 20, 22, 27, 34, 41, 43, 44, 45, 48, 52, 62, 71, 79, 83, 85, 91, 94, 96, 102, 103, 104], "magic": [48, 102], "magnitud": [25, 27, 32, 75], "mahdi": 112, "mai": [0, 4, 5, 6, 8, 9, 10, 17, 19, 25, 27, 30, 32, 34, 41, 43, 46, 48, 49, 52, 53, 55, 57, 59, 61, 62, 64, 67, 70, 85, 103, 108, 113, 115, 117, 120, 122], "mail": [4, 46], "main": [10, 27, 30, 41, 46, 52, 60, 61, 99, 104, 106, 108, 122, 123], "mainli": [8, 17, 32, 41, 49, 52, 104, 105], "maintain": [27, 52, 64], "major": 108, "majorli": 27, "make": [2, 4, 5, 8, 17, 25, 27, 30, 34, 36, 41, 43, 44, 45, 46, 48, 52, 53, 55, 56, 59, 61, 62, 66, 72, 73, 86, 88, 95, 99, 103, 104, 105, 108, 109, 110, 113, 117, 119, 122], "make_perm": 17, "make_properti": 27, "make_routin": [62, 108], "make_symbol": 104, "man": [34, 89, 112], "man93": [28, 112], "manag": [10, 27, 48, 102, 105, 108], "managedproperti": 27, "mandatori": [46, 61], "mani": [5, 6, 8, 10, 15, 17, 22, 27, 28, 30, 32, 34, 37, 41, 42, 43, 48, 49, 52, 53, 55, 59, 62, 66, 86, 97, 98, 99, 100, 102, 103, 104, 105, 108, 113, 114, 116, 117], "manifold": [104, 106], "manipul": [3, 6, 9, 17, 27, 33, 36, 40, 43, 46, 48, 58, 66, 75, 102, 113, 114, 117], "manner": [12, 32, 49, 52], "manual": [5, 10, 44, 46, 52, 104, 110, 121], "manualintegr": 109, "manuel": [34, 112], "map": [6, 18, 27, 30, 34, 43, 46, 48, 52, 53, 54, 56, 59, 61, 64, 66, 67, 72, 83, 105, 110], "mapl": 52, "maplesoft": 52, "mapsto": [6, 25], "mar": [83, 101], "march": 2, "margin": 43, "marichev": 112, "mark": [49, 108, 112], "marko": 112, "markup": 46, "masayuki": 112, "mascheroni": [27, 32], "mass": 52, "master": 2, "mat": [38, 46], "mat_delim": 46, "mat_str": 46, "matadd": 38, "match": [6, 17, 27, 34, 41, 42, 48, 52, 53, 62, 66, 73, 75, 78, 104, 105, 106, 108, 109, 110], "match_": 52, "matchdict": 52, "matching_hint": 52, "matematica": 73, "materi": 0, "math": [17, 27, 32, 43, 46, 52, 53, 61, 62, 67, 85, 103, 110, 112, 113, 117], "mathbb": [6, 8, 10, 17, 25, 28, 30, 32, 43], "mathbf": [8, 57], "mathcal": [6, 30], "mathcircl": 29, "mathemat": [0, 3, 6, 18, 27, 29, 30, 32, 33, 36, 43, 46, 47, 49, 52, 60, 61, 62, 86, 110, 112, 113, 115, 117, 118, 122], "mathematica": [18, 33, 44, 80, 104, 110, 121], "mathematica_cod": [46, 72], "mathematical_singular": 11, "mathematician": 49, "mathematik_upload": 48, "mathjax": 103, "mathml": [46, 73, 99, 100, 110], "mathml2": 46, "mathml3": 46, "mathml_tag": 46, "mathmlprint": 33, "mathrm": [6, 8, 10, 32, 34, 41, 43, 52, 114], "mathworld": [19, 20, 27, 29, 30, 32, 43, 47, 49], "matlab": [62, 72, 108], "matmul": [38, 109], "matplotlib": [101, 104, 110], "matpow": 38, "matric": [3, 8, 33, 46, 48, 49, 55, 57, 62, 72, 73, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117], "matrix": [6, 8, 10, 16, 18, 27, 32, 33, 39, 40, 42, 46, 48, 49, 52, 55, 57, 59, 60, 61, 62, 67, 72, 73, 84, 93, 99, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119], "matrix2numpi": 41, "matrix_fglm": 10, "matrix_multiply_elementwis": 41, "matrixbas": [40, 42, 55], "matrixerror": 41, "matrixexpr": [38, 39, 110], "matrixslic": 105, "matrixsymbol": [38, 46, 104, 110], "matter": [6, 16, 18, 29, 34], "matur": 108, "matvec": 61, "max": [8, 18, 31, 41, 43, 66, 72, 73, 102, 110], "max_": 102, "max_denomin": 27, "max_div": 17, "max_integer_nbit": 77, "max_it": 48, "max_len": 48, "max_norm": 73, "max_step": 43, "max_term": 48, "maxdepth": 46, "maxim": [11, 17, 48, 77, 109], "maxima": [44, 82], "maximum": [7, 10, 17, 18, 27, 30, 41, 43, 45, 46, 48, 52, 64, 66, 77, 103, 109, 110], "maxn": [5, 27], "maxprec": 27, "maxsiz": 27, "maxstep": 45, "mayb": [75, 110], "mayer": 43, "mcgraw": 32, "mcodeprint": 46, "mdarg": 27, "me": 46, "mean": [2, 6, 8, 10, 18, 27, 34, 36, 39, 41, 43, 46, 48, 49, 52, 55, 57, 59, 103, 106, 115, 117, 119], "meaningless": 5, "meant": [27, 28, 32, 34, 43, 47, 48, 53], "measur": [27, 30, 37, 41, 45, 47, 48, 103, 109, 122], "mechan": [27, 104, 107, 108], "meijer": [3, 9, 32, 34, 103, 112, 114, 122], "meijer_g": 32, "meijerg": [6, 32, 34, 103, 105, 107, 110, 122], "meijerint": [34, 104], "mein": 66, "mellin": [9, 32, 34, 104], "mellin_transform": 34, "mellintransform": 34, "member": [16, 17, 60], "membership": [11, 23, 24], "memo": 68, "memoiz": [33, 64, 65], "memori": [5, 10, 43, 57, 61, 64, 66], "menez": 112, "mention": [2, 6, 8, 17, 49, 52], "merchant": 0, "mere": 5, "merg": [2, 17, 18, 46, 47, 83, 96, 104], "merit": 2, "meromorph": 32, "mersenneforum": 43, "mess": [45, 52], "messag": [1, 2, 77], "messi": 8, "met": [0, 49, 63], "meta": [27, 52, 53], "metaclass": 27, "metadata": [63, 76], "metahint": 27, "metaprogram": 27, "method": [5, 6, 10, 11, 12, 17, 18, 19, 25, 27, 31, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 58, 60, 62, 64, 66, 67, 72, 73, 74, 75, 76, 77, 82, 83, 84, 90, 91, 92, 95, 100, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 122], "method_of_undetermined_coeffici": 52, "metric": [18, 22, 48, 52], "meurer": [105, 109], "mi": 43, "michael": 112, "mid": [5, 49], "middl": [6, 8, 32, 41, 42, 73, 78], "midpoint": 34, "might": [5, 6, 8, 27, 30, 41, 43, 45, 46, 48, 49, 62, 66, 104, 113, 117, 118, 122], "mileston": [62, 72, 73, 74, 75, 76, 77, 109, 110], "miller": 43, "milton": 32, "mimic": 103, "min": [18, 22, 29, 31, 41, 52, 66, 73, 102, 110], "min_": 102, "mind": [2, 7, 27, 41], "minim": [2, 10, 11, 17, 18, 22, 25, 28, 34, 41, 43, 45, 48, 49, 55, 56, 72, 102, 108, 109, 110], "minimal_block": 17, "minimal_polynomi": [10, 45, 72, 73, 74, 75, 76, 105, 106, 110], "minimis": [6, 45], "minimum": [5, 10, 17, 18, 20, 22, 27, 30, 41, 66], "minlex": 66, "minor": [27, 41, 46], "minorentri": 41, "minormatrix": 41, "minpoli": [10, 72, 75, 76], "minpoly_groebn": [10, 72], "minpoly_method": 72, "minsolve_linear_system": 55, "minu": [7, 27, 46, 102], "mirror": 32, "misc": 69, "miscellan": [31, 33, 65], "misclassif": 110, "miss": [1, 35, 46, 62, 74, 76, 77, 109, 110, 122], "mission": 39, "mississippi": 66, "misspel": 73, "mistak": 17, "misus": 109, "mix": [25, 27, 41, 59, 67, 74, 77], "mixin": [27, 66], "mixtur": [62, 109], "mm": 43, "mnemon": 66, "mobiu": 43, "mod": [8, 10, 28, 29, 30, 33, 41, 43, 45, 49, 104, 109, 110], "mod_invers": [45, 110], "mode": [45, 46, 96], "model": [5, 36, 43, 104], "moder": 34, "modern": 103, "modgcd": 10, "modif": [0, 41, 64, 75, 104], "modifi": [10, 17, 32, 43, 44, 48, 55, 64, 66, 67, 119], "modul": [2, 3, 4, 8, 9, 11, 27, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 45, 46, 50, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 84, 86, 87, 89, 94, 97, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 115, 117], "modular": [9, 28, 43, 74, 102, 103, 104, 106], "modular_multiplicative_invers": 27, "modulargcd": 10, "modulargcdfailederror": 10, "modularinteg": 28, "moduli": 43, "modulo": [10, 27, 43, 45], "modulu": [10, 27, 28, 41, 43, 45, 73, 102, 110, 120], "mohammad": 112, "moment": [45, 49], "momentum": [102, 104], "monad": 64, "monagan": 112, "monic": [10, 25, 41, 45, 120], "mono": 4, "monom": [10, 45, 74], "monomi": [10, 27, 33, 43, 46, 74, 120, 122], "monomialop": 110, "mont": [17, 104], "moor": 41, "moot": 27, "mora": 112, "mordel": 49, "more": [5, 6, 8, 10, 17, 18, 23, 25, 27, 29, 30, 31, 32, 34, 36, 39, 41, 43, 45, 46, 48, 49, 52, 53, 56, 62, 64, 66, 67, 73, 74, 77, 78, 83, 84, 85, 88, 92, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 116, 117, 119, 122], "moreov": [6, 10, 17, 122], "mose": 52, "most": [5, 7, 8, 10, 17, 18, 25, 27, 28, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 59, 62, 66, 83, 97, 104, 105, 107, 113, 114, 115, 117, 118, 119, 121, 122], "mostli": [8, 27, 30, 46, 55, 121], "mota": 52, "motion": [17, 52, 104], "motiv": 27, "motzkin": 74, "mous": 78, "move": [2, 17, 18, 27, 48, 78, 80, 94, 102, 104, 107, 108, 110], "mp": 63, "mpi": [41, 47], "mpmath": [27, 32, 41, 47, 63, 67, 72, 77, 80, 85, 94, 98, 99, 100, 101, 102, 103, 107, 108], "mpmathifi": 77, "mpz": [72, 75], "mr": 43, "mrv": [7, 27, 76], "mrv_max": 7, "mrvasympt": 109, "msolv": 95, "msym": 22, "mti": 41, "mu": [6, 10, 32, 43, 46], "much": [5, 6, 8, 13, 22, 27, 32, 34, 45, 48, 52, 53, 54, 62, 64, 73, 96, 100, 103, 104, 105, 107, 114, 117, 122], "mul": [33, 34, 41, 43, 45, 46, 48, 53, 59, 72, 73, 75, 76, 77, 83, 84, 94, 96, 105, 106, 118], "mul_ground": 72, "mul_inv": 18, "mul_symbol": 46, "mult": 109, "multi": [27, 46, 103, 104, 109], "multidimension": [33, 112], "multilin": 46, "multinomi": [27, 41, 43], "multinomial_coeffici": 43, "multinomial_coefficients_iter": 43, "multipl": [6, 8, 10, 16, 18, 22, 25, 27, 30, 32, 34, 38, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 57, 59, 62, 64, 66, 96, 102, 103, 106, 107, 110, 114, 118, 119, 120, 123], "multipli": [8, 10, 17, 27, 41, 42, 43, 46, 49, 52, 75, 76, 96, 103, 118], "multiply_elementwis": 41, "multiply_transitive_group": 17, "multiprocess": 110, "multiset": [64, 66, 103, 107], "multiset_combin": 66, "multiset_partit": [16, 29, 66], "multiset_partitions_taocp": 64, "multiset_permut": 66, "multisetpartitiontravers": 64, "multivalu": 30, "multivari": [10, 27, 28, 45, 48, 72, 74, 75, 76, 78, 84, 98, 102, 120, 122], "multivariatepolynomialerror": 10, "multivector": 106, "mumber": 43, "mun": 46, "murrai": 17, "musser": 75, "must": [0, 2, 6, 8, 10, 17, 18, 20, 22, 24, 27, 29, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 46, 48, 52, 59, 60, 62, 64, 67, 105, 109, 110], "mutabl": [10, 37, 38, 39, 41, 42, 46, 48, 57, 72, 109, 119], "mutabledensematrix": [37, 41], "mutabledensendimarrai": [57, 73], "mutablematrix": [37, 40], "mutablesparsematrix": 42, "mutablesparsendimarrai": [57, 73], "mute": 61, "mutual": 6, "mvh04": [10, 112], "mvv97": [43, 112], "mw00": [10, 112], "mw94": [28, 112], "mxn": 102, "my": 46, "my_cool_funct": 67, "my_measur": 48, "myclass": 27, "myfcn": 62, "myfcn_result": 62, "myfunc": [27, 31, 67], "mygamma": 46, "mylist": 27, "mylist1": 27, "mylist2": 27, "myop": 66, "mypi": [2, 74], "myrvold": 18, "mysingleton": 27, "mystr": 46, "m\u00f6biu": 43, "n": [3, 5, 6, 8, 10, 12, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 38, 41, 42, 43, 45, 46, 48, 49, 52, 54, 58, 60, 61, 66, 72, 73, 75, 76, 77, 103, 104, 105, 106, 107, 108, 109, 110, 112, 119, 120, 121, 122, 123], "n1": [17, 27, 49], "n2": [17, 27, 49], "n3": 27, "n802": 46, "n_": [10, 49], "n_0": 10, "n_1": 10, "n_2": 10, "n_adj": 18, "n_digit": 34, "n_i": [10, 22, 54], "n_k": 10, "n_order": 43, "naiv": [8, 17, 23, 27, 29, 54, 55], "name": [0, 2, 6, 8, 10, 14, 19, 22, 25, 27, 30, 32, 33, 38, 41, 43, 44, 45, 46, 48, 49, 52, 53, 60, 61, 62, 67, 72, 96, 103, 104, 105, 106, 110, 116, 117, 122], "name_dict": 44, "name_expr": 62, "named_group": 15, "nameerror": 110, "namespac": [27, 49, 52, 53, 62, 67, 73, 117], "nan": [30, 48, 73, 77, 104, 107, 109, 114], "nand": 36, "napier": 27, "narg": [10, 27, 31, 92, 107], "nasa": 112, "nation": 112, "nativ": [27, 45], "natur": [10, 17, 27, 30, 39, 43, 47, 73, 104], "naturals0": [27, 47], "nd": 102, "ndimension": 61, "ne": [6, 8, 10, 52, 72, 84, 110, 112], "nearli": 43, "necess": 46, "necessari": [17, 18, 27, 36, 45, 48, 52, 53, 57, 62, 66, 72, 107], "necessarili": [10, 27, 34, 36, 43, 45, 48, 52], "necklac": 103, "need": [6, 8, 10, 13, 17, 18, 22, 24, 25, 27, 30, 31, 32, 34, 41, 43, 44, 45, 46, 47, 48, 49, 52, 59, 60, 61, 62, 63, 64, 66, 74, 75, 103, 104, 107, 108, 110, 118, 120, 122], "needev": 34, "needs_bracket": 110, "neg": [6, 8, 10, 21, 27, 29, 30, 32, 34, 41, 42, 43, 45, 46, 47, 48, 49, 52, 72, 74, 92, 102, 107, 109, 110], "negat": [27, 36], "negative_numb": 27, "negativeinfin": 104, "neglig": 0, "neighborhood": 47, "neighbourhood": 6, "neither": [0, 7, 27, 47, 52, 122], "neq": [6, 10, 28, 49, 52], "nest": [8, 27, 32, 37, 42, 46, 48, 57, 59, 66, 67, 75, 106], "nested_contract": 59, "net": 66, "never": [27, 34, 43, 45, 46, 104], "nevertheless": 46, "new": [0, 2, 3, 6, 8, 10, 17, 25, 27, 32, 41, 42, 43, 45, 46, 48, 49, 52, 54, 57, 67, 71, 78, 83, 96, 99, 100, 102, 103, 104, 105, 106, 107, 112, 119], "new_gen": 24, "newcom": 115, "newer": 108, "newli": [6, 8, 27], "newlin": [2, 41, 69], "newton": 95, "newtyp": 27, "newvar": 25, "next": [6, 8, 12, 16, 17, 18, 20, 21, 27, 30, 36, 43, 45, 46, 47, 49, 52, 64, 103, 104, 108, 109], "next_binari": 21, "next_grai": 21, "next_lex": [16, 18], "next_lexicograph": 21, "next_nonlex": 18, "next_trotterjohnson": 18, "nextprim": 43, "nfloat": [48, 110], "ni": 32, "nice": [8, 27, 31, 41, 46, 89, 91, 92, 97], "nicer": [27, 105], "nielsen_transform": 17, "niemey": 17, "niesi": 112, "nigel": 49, "nightli": 104, "nijenhui": 12, "nilpot": [17, 41, 105, 110], "nilpotent_group": 17, "nist": [30, 32], "nitaj": 49, "nivari": 112, "nkbg03": [10, 112], "nm": 57, "nmax": 43, "nnf": 36, "nnz": 42, "no_attrs_in_subclass": 63, "no_glob": [5, 34, 35, 41], "noarithmeth": 96, "nocond": 34, "node": [20, 27, 34, 46, 59, 64, 66, 118], "node12": 12, "node81": 43, "noe": 48, "nofarg": 92, "non": [8, 10, 19, 27, 29, 30, 32, 34, 36, 41, 42, 45, 47, 48, 49, 52, 55, 57, 59, 60, 62, 66, 72, 74, 75, 77, 83, 102, 103, 106, 109, 110, 112, 118, 120], "noncommut": [27, 73, 77, 83, 105], "noncommutative_part": 27, "none": [10, 11, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 70, 73, 74, 75, 76, 104, 106, 107, 108, 109, 113, 119, 122], "nonelementari": [34, 105], "nonelementaryintegr": [34, 105], "nonempti": 17, "nonetheless": [48, 52], "nonetyp": [109, 110], "nonhomogen": 73, "nonhomogeneous_equation_with_constant_coeffici": 52, "nonlex": 18, "nonlinear": [25, 55, 95], "nonlinsolv": [75, 110], "nonneg": [27, 29, 49], "nonposit": 27, "nonresidu": 43, "nonsens": 25, "nonsquarematrixerror": 41, "nonstiff": 112, "nontrivi": [17, 27, 43, 52, 104, 122], "nonzero": [10, 25, 27, 30, 41, 73], "noqa": [46, 62], "nor": [0, 7, 27, 36, 52], "norelmeth": 96, "norm": [41, 42, 45, 103, 109], "normal": [1, 5, 10, 17, 23, 25, 27, 28, 36, 39, 41, 43, 44, 46, 49, 52, 102, 103, 105, 107, 122], "normal_closur": [17, 23], "normal_lin": 107, "norman": [34, 87], "normilz": 32, "noro": 112, "north": 10, "northeast": 10, "not_rep": 17, "not_supported_funct": 46, "notabl": [6, 32, 107], "notalgebra": 75, "notalgebraicerror": 10, "notat": [6, 15, 18, 19, 25, 27, 29, 48, 60, 102, 109, 114], "note": [2, 3, 5, 6, 7, 8, 10, 11, 17, 18, 19, 22, 24, 25, 27, 28, 29, 30, 32, 34, 35, 36, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 60, 61, 64, 66, 102, 103, 108, 111, 112, 117, 119, 120, 122], "notebook": [74, 121], "noth": [27, 28, 34, 46, 48, 52, 55, 115], "notic": [0, 8, 17, 18, 24, 27, 41, 102, 103, 104, 117], "notimpl": [75, 110], "notimplementederror": [48, 52, 53, 73, 75, 76, 109], "notin": [6, 47], "notinvertibleerror": [10, 45], "notion": [11, 72, 76], "notiter": 66, "notreversibleerror": 10, "nottingham": 49, "nov": [75, 91, 97, 108, 109], "now": [6, 8, 10, 11, 27, 32, 41, 48, 49, 52, 57, 61, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 122], "nowher": 74, "np": [43, 61], "npartit": 43, "nroot": [45, 103], "nseri": [27, 84, 85, 96, 102], "nsimplifi": [5, 27, 33, 97, 102, 110], "nsolv": [100, 110], "nt": 66, "ntegrat": 112, "nternat": 112, "nth": [29, 30, 32, 43, 48, 52, 72, 84, 110], "nth_linear": 52, "nth_linear_constant_coeff_homogeneous_integr": 52, "nth_linear_constant_coeff_variation_of_parameters_integr": 52, "nth_linear_euler_eq_homogen": 52, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 52, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 52, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 52, "nth_linear_homogeneous_constant_coeff_integr": 52, "nth_power_roots_poli": 73, "ntheori": [10, 17, 43, 45, 49, 75, 104], "nthroot": 33, "nthroot_mod": [43, 110], "ntroduct": 112, "nu": [32, 34, 46, 48], "null": 27, "nullspac": [41, 119], "num": [10, 17, 27, 48, 52, 64, 77], "num_column": 46, "number": [2, 3, 8, 9, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 32, 33, 34, 36, 37, 41, 42, 44, 46, 47, 48, 49, 52, 54, 55, 57, 60, 62, 64, 66, 70, 72, 73, 76, 83, 92, 99, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122], "number_cl": 27, "numbered_symbol": [48, 52, 66], "numberfield": [10, 45, 110], "numbertheori": 49, "numer": [3, 8, 9, 10, 25, 27, 32, 33, 43, 44, 45, 46, 48, 52, 55, 60, 61, 67, 70, 72, 73, 74, 77, 78, 83, 94, 96, 102, 103, 104, 105, 110, 115, 116, 122], "numerorum": 64, "numexpr": [73, 108, 109], "numexprprint": 73, "numpi": [5, 27, 40, 60, 61, 62, 67, 76, 80, 82, 85, 96, 101, 102, 108, 109, 110, 113, 115], "numpydoc": 109, "numth": 43, "nx": 55, "ny": 112, "o": [6, 10, 11, 17, 18, 24, 27, 32, 43, 52, 60, 66, 72, 75, 76, 102, 109, 112, 114], "o_from": 10, "o_to": 10, "obei": [8, 32, 46], "obj": [27, 45], "object": [6, 10, 12, 17, 18, 19, 20, 21, 25, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 45, 46, 47, 48, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 66, 73, 75, 76, 80, 83, 85, 96, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 117, 118, 119, 121], "observ": [6, 8, 22, 52], "obstacl": 6, "obtain": [5, 6, 7, 8, 10, 12, 17, 18, 19, 22, 27, 29, 32, 34, 41, 43, 45, 46, 48, 49, 52, 53, 55, 66, 104, 120, 121, 122], "obtaining_all_solutions_of_a_linear_system": 41, "obviou": [17, 25, 49, 117], "obvious": [8, 17, 113, 122], "oc": 46, "occasion": 27, "occupi": 43, "occur": [5, 6, 10, 18, 27, 31, 41, 44, 48, 53, 66, 75], "occurr": [27, 43, 48], "oct": [88, 89, 90, 104], "octahedr": 19, "octav": [62, 72, 108, 109], "octave_cod": [108, 109], "octavecodegen": 62, "octnam": 62, "octob": 112, "od": [33, 50, 53, 54, 55, 72, 73, 75, 76, 77, 99, 100, 101, 102, 103, 105, 108, 109, 110], "odd": [15, 18, 27, 29, 30, 32, 36, 43, 75, 76], "oddbal": 27, "ode0106": 52, "ode0123": 52, "ode_": 52, "ode_1st_exact": 52, "ode_1st_homogeneous_coeff_best": 52, "ode_1st_homogeneous_coeff_best_integr": 52, "ode_1st_homogeneous_coeff_subs_dep_div_indep": 52, "ode_1st_homogeneous_coeff_subs_indep_div_dep": 52, "ode_1st_linear": 52, "ode_1st_power_seri": 52, "ode_2nd_power_series_ordinari": 52, "ode_2nd_power_series_regular": 52, "ode_almost_linear": 52, "ode_bernoulli": 52, "ode_hintnam": 52, "ode_lie_group": [52, 110], "ode_linear_coeffici": 52, "ode_liouvil": 52, "ode_nth_linear_constant_coeff_homogen": 52, "ode_nth_linear_constant_coeff_undetermined_coeffici": 52, "ode_nth_linear_constant_coeff_variation_of_paramet": 52, "ode_ord": [52, 53, 56], "ode_riccati_special_minus2": 52, "ode_separ": 52, "ode_separable_reduc": 52, "ode_sol_simpl": 52, "odeadvisor": 52, "odular": 112, "oeffici": 112, "oei": 43, "of_typ": 72, "off": [6, 27, 41, 45, 46, 52, 70, 72, 96], "offer": [17, 64], "offic": 112, "offici": [104, 108], "offset": [29, 32], "often": [5, 6, 10, 27, 32, 34, 43, 47, 49, 52, 66, 117, 122], "oh": 114, "ok": [18, 52], "old": [2, 27, 48, 52, 67, 88, 99, 102, 103, 104, 108, 109, 110, 111], "older": 103, "olut": 112, "olynomi": 112, "omega": [6, 7, 17, 43, 46], "omega_": 6, "omicron": 46, "omit": [6, 8, 18, 25, 27, 30, 34, 37, 41, 42, 59, 62, 66], "ommon": 112, "omput": 112, "onc": [5, 6, 8, 10, 12, 17, 22, 27, 34, 46, 48, 52, 66, 113, 114, 122, 123], "one": [0, 2, 5, 6, 7, 8, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 31, 32, 34, 36, 40, 41, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 66, 67, 69, 72, 73, 74, 76, 85, 90, 102, 103, 104, 105, 107, 108, 110, 113, 117, 118, 120, 122], "one_half": 27, "ones": [4, 6, 10, 17, 22, 34, 37, 41, 42, 43, 45, 49, 52, 57, 62, 96, 119, 121], "onli": [2, 5, 6, 8, 9, 10, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 30, 34, 36, 38, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 66, 72, 73, 83, 90, 102, 103, 104, 105, 107, 108, 110, 113, 114, 120, 122, 123], "onlin": [49, 66], "onto": [6, 41], "oo": [5, 11, 25, 27, 29, 30, 31, 32, 34, 41, 47, 48, 52, 60, 72, 73, 74, 75, 76, 83, 103, 107, 108, 109, 110, 114, 117], "oohai": 46, "oor": 112, "op": [27, 48, 66], "open": [2, 4, 34, 46, 47, 108], "oper": [5, 6, 10, 11, 17, 18, 19, 25, 27, 30, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 52, 54, 57, 59, 60, 61, 64, 66, 73, 75, 77, 83, 99, 102, 103, 104, 105, 106, 108, 109, 110, 115, 116, 122], "operand": [18, 27, 109], "operationnotsupportederror": 10, "operatornam": [6, 8, 28, 29, 30, 32, 34, 46, 54], "oppenheim": 64, "opportun": 48, "opposit": [22, 41, 122], "opt": [10, 48], "opt_sub": 48, "optic": [104, 108], "optim": [5, 10, 11, 12, 17, 43, 45, 46, 48, 61, 96, 102, 106, 109, 122], "optimis": 52, "option": [2, 4, 5, 10, 11, 17, 24, 25, 27, 30, 34, 41, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 60, 61, 62, 66, 72, 73, 76, 77, 94, 95, 97, 102, 103, 104, 105, 106, 107, 108, 110, 116, 121, 122], "optionerror": 10, "orb": 17, "orbit": [17, 24, 104], "orbit_rep": 17, "orbit_transvers": 17, "ord": [22, 41], "order": [5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 44, 46, 48, 49, 52, 53, 54, 55, 56, 57, 61, 62, 64, 66, 72, 73, 74, 75, 76, 85, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 118, 120, 122], "order_equation_with_variable_coeffici": 52, "order_symbol": 27, "ordered_partit": [66, 110], "ordin": 52, "ordinari": [5, 17, 30, 32, 34, 52, 56, 57, 64, 73, 112, 117], "org": [11, 15, 16, 17, 18, 25, 27, 29, 30, 32, 34, 41, 43, 45, 46, 47, 49, 52, 61, 62, 66, 77, 84, 94, 97, 104, 112], "orient": 103, "orig": 10, "origin": [2, 6, 8, 10, 17, 18, 19, 22, 25, 27, 30, 32, 34, 35, 37, 42, 43, 45, 46, 48, 49, 52, 53, 54, 66, 67, 75, 113], "orisaka": 73, "orthogon": [31, 33, 41, 102, 105, 109], "orthonorm": 41, "orthopoli": [32, 45], "osc": [5, 27], "oscil": [27, 73, 102], "oscillatori": [5, 27, 96], "oseri": 84, "ostrogradski": 34, "osx": 109, "ot": 62, "other": [0, 2, 4, 5, 6, 8, 10, 11, 17, 18, 19, 23, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 61, 62, 64, 66, 67, 73, 82, 84, 88, 102, 103, 104, 105, 106, 108, 110, 113, 115, 117, 119, 120], "otherwis": [0, 3, 5, 6, 10, 11, 17, 18, 22, 25, 27, 32, 34, 36, 41, 43, 44, 45, 46, 48, 49, 52, 53, 55, 57, 62, 66, 67, 77, 105, 110, 114], "othewis": 30, "otim": 57, "our": [2, 6, 7, 8, 41, 49, 98, 103, 118], "out": [0, 6, 8, 10, 17, 18, 27, 29, 32, 34, 38, 41, 43, 45, 46, 48, 52, 62, 75, 77, 82, 105, 108, 110], "out1": 41, "out2": 41, "out_": 62, "outer": [47, 59, 102, 106], "outermost": [48, 59], "outfil": 103, "outlin": [24, 34], "outperform": [5, 105], "output": [8, 27, 41, 43, 45, 46, 48, 49, 52, 54, 60, 61, 62, 64, 66, 72, 73, 75, 77, 97, 99, 106, 108, 110, 117, 119, 121, 122, 123], "outputargu": 62, "outsid": [17, 27, 32, 41, 48, 52, 114], "over": [5, 7, 9, 17, 18, 21, 23, 27, 28, 29, 34, 36, 41, 43, 45, 46, 48, 49, 52, 54, 57, 59, 72, 73, 74, 75, 76, 77, 97, 102, 104, 105, 110, 112, 120, 122], "overal": [27, 54, 72, 74, 110], "overdetermin": 55, "overflow": 64, "overlap": 47, "overlin": 32, "overload": 46, "overrid": [27, 44, 46, 60, 62, 102], "overridden": 52, "overview": 9, "own": [12, 17, 27, 46, 48, 52, 64, 67, 115], "p": [6, 8, 10, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 32, 34, 41, 43, 45, 46, 48, 49, 52, 55, 57, 60, 66, 72, 102, 109, 112, 113, 119, 122], "p0": [22, 52], "p1": [10, 17, 22, 57], "p10": 17, "p2": [10, 17, 25], "p20": 17, "p3": 25, "p_": [17, 22, 27, 49, 52, 57], "p_0": [8, 17, 22, 49], "p_1": [8, 17, 22, 43, 49], "p_2": [8, 17, 43], "p_i": [17, 22, 43], "p_j": 22, "p_k": [17, 43], "p_m": 32, "p_n": [32, 34], "p_q": 8, "pa": 41, "packag": [1, 4, 72, 90, 104, 107, 108, 109, 110], "pad": 41, "page": [8, 10, 29, 41, 43, 49, 71, 89, 94], "page_228": 32, "pager_print": 110, "pair": [7, 8, 10, 17, 18, 27, 30, 37, 39, 41, 43, 45, 47, 48, 49, 52, 62, 72, 106, 107, 109, 119], "pairwis": [10, 29, 41, 43, 49, 54], "paper": [8, 43, 45, 49, 112], "parallel": [10, 34, 41, 98], "parallel_poly_from_expr": 45, "param": 49, "paramet": [6, 7, 10, 11, 17, 18, 22, 24, 25, 27, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 66, 67, 73, 76, 103, 106, 109, 110, 120], "parameter": 49, "parametr": [32, 49, 75, 76, 104, 106, 109], "paren": 46, "parent": [17, 27, 64], "parenthes": [27, 44, 46, 59, 110], "parenthesi": 59, "pariti": 18, "parity_": 27, "pars": [3, 18, 27, 33, 75, 108, 110], "parse_expr": 44, "parse_maxima": 44, "parser": [80, 82], "part": [2, 6, 8, 9, 10, 17, 18, 25, 27, 29, 30, 32, 34, 36, 38, 43, 45, 46, 48, 49, 52, 54, 62, 64, 66, 73, 75, 99, 102, 104, 105, 106, 109], "partcompon": 64, "partfrac": 45, "partial": [10, 17, 24, 29, 30, 33, 43, 48, 52, 53, 56, 57, 87, 99, 102, 104, 105, 108, 110, 113, 114, 122], "partial_list": 45, "particip": 104, "particular": [0, 5, 6, 8, 10, 17, 32, 34, 36, 38, 41, 45, 48, 52, 54, 55, 62, 64, 110, 115], "particularli": [8, 41, 122], "partit": [14, 17, 29, 33, 43, 64, 65, 103, 107, 109, 110], "partition_": 16, "partitionfunctionp": 43, "partitions_": 43, "pascal": [29, 43], "pass": [2, 5, 17, 18, 27, 30, 32, 34, 41, 44, 46, 47, 48, 49, 52, 53, 57, 59, 60, 61, 62, 63, 66, 67, 97, 99, 104, 114, 121, 122, 123], "past": [46, 99, 121], "patashnik": 18, "patch": [46, 83, 89, 98], "path": [10, 17, 48, 52, 61, 64, 80, 83, 96], "pattern": [6, 8, 27, 34, 41, 42, 48, 52, 78, 104, 105, 118], "paul": [64, 112], "pde": [33, 50, 52, 99, 105], "pde_hint": 53, "pde_hintnam": 53, "pde_separ": 73, "pdf": [17, 29, 43, 48, 49, 52, 66, 109, 112], "pdfview": 80, "pdp": 119, "peculiar": 6, "pedant": 60, "peek": 64, "pell": 49, "pendulum": 52, "penros": 41, "penrose_pseudoinvers": 41, "peopl": [32, 103], "pep": [2, 36], "pep8": 109, "per": [2, 45, 72], "perat": 112, "percent": [41, 45], "percentag": [41, 43], "perfect": [43, 49, 117], "perfect_pow": 43, "perfectli": [10, 25, 27, 45], "perform": [5, 10, 17, 18, 21, 25, 27, 28, 30, 34, 39, 41, 43, 45, 48, 49, 52, 54, 57, 61, 104, 106, 113, 114, 117, 122], "perhap": [27, 43, 62], "period": [6, 27, 30, 43], "periodic_argu": 31, "periodic_continued_fract": 43, "peri\u0107": 103, "perm": [15, 18, 19, 24, 29, 41, 57], "perm_group": [13, 17, 23, 24], "permiss": 0, "permit": [0, 18, 30], "permut": [13, 14, 15, 19, 22, 23, 24, 29, 32, 33, 41, 45, 49, 57, 66, 103, 104, 107], "permutationgroup": [13, 15, 17, 23, 24], "permute_sign": [49, 66, 110], "permutebkwd": 41, "permutedim": [57, 110], "permutefwd": 41, "persist": 64, "perspect": [43, 62], "peter": [66, 112], "petkov": 112, "petkovvsek92": [54, 112], "petkovvsekwz97": [25, 54, 112], "petkov\u0161ek": 54, "pfactor": 10, "pfd": 45, "pfda": 45, "pgroup": [17, 19], "ph": 48, "phase": [27, 34, 108], "phd": 112, "phi": [6, 27, 29, 32, 41, 43, 46, 52, 109], "phi_0": 32, "philipp": 112, "philosophi": 52, "php": [17, 32, 43, 49], "physci": 104, "physic": [19, 43, 64, 100, 102, 104, 106, 107, 108, 109, 112, 122], "pi": [5, 6, 8, 11, 18, 29, 30, 32, 34, 41, 43, 46, 48, 52, 74, 75, 76, 77, 83, 84, 94, 95, 108, 109, 110, 113, 117], "pickabl": 85, "pickl": [73, 74, 98], "pictur": 46, "piec": [5, 8, 27, 62], "piecewis": [31, 32, 33, 34, 46, 76, 77, 97, 100, 102, 104, 105, 108, 109, 110, 114], "piecewise_fold": 30, "pietjepuk314": 46, "pii": [41, 112], "pinch": 104, "pinv": 41, "pinv_solv": 41, "pip": 4, "pipex": 43, "pitfail": 122, "pivot": [41, 119], "place": [7, 11, 18, 19, 27, 37, 42, 48, 64, 66, 80, 104, 113, 119], "placehold": 27, "plai": [25, 49, 113, 117], "plain": [35, 45, 46], "plan": 103, "plane": [9, 27, 30, 32, 34, 76, 122], "platform": [52, 66, 106], "platon": 19, "pleas": [2, 4, 6, 7, 10, 27, 43, 47, 48, 49, 110, 112, 116, 121], "plot": [75, 76, 78, 80, 81, 82, 83, 87, 102, 103, 104, 108, 109, 110], "plot_implicit": [73, 108, 109], "plouff": 84, "plu": [8, 25, 82], "plugin": 110, "plynomi": 75, "pm": [6, 7, 25, 49], "pmf": 109, "pmint": 112, "pmod": [8, 41], "pn": 17, "png": 103, "pngview": 80, "po": [17, 36, 41], "pochhamm": [29, 48], "pohlig": 43, "point": [6, 9, 10, 11, 17, 24, 27, 30, 32, 34, 41, 43, 45, 47, 52, 61, 64, 72, 74, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114], "pointer": 62, "pointwis": [17, 24], "pointwise_stabil": 17, "poisson": [105, 109], "polar": [8, 9, 30, 32, 48, 73], "polar_lift": [27, 31, 32, 48], "pole": [6, 8, 27, 32, 34, 110], "poleerror": 114, "poli": [10, 25, 27, 28, 30, 32, 34, 45, 72, 73, 74, 75, 76, 77, 83, 85, 94, 100, 102, 109, 110], "polici": [86, 89], "polificationfail": 77, "polificationfailederror": 10, "polish": [48, 93, 94], "pollard": [43, 112], "pollard_pm1": 43, "pollard_rho": 43, "polunomi": 10, "poly_from_expr": 74, "poly_r": [28, 72], "polyconfig": 75, "polyel": [10, 72, 73, 74, 75, 77], "polyerror": [10, 75, 76], "polyfunc": 45, "polygamma": [29, 32, 105, 109, 110], "polygamma2": 32, "polygamma_funct": 32, "polygammafunct": 32, "polygon": [102, 104, 110], "polyhedr": 19, "polyhedra": 19, "polyhedralgroup": 19, "polyhedron": [14, 17, 33], "polylog": [32, 104, 110], "polylogarithm": [32, 104], "polyn": 10, "polynomi": [3, 5, 8, 9, 17, 25, 27, 28, 29, 31, 33, 34, 41, 48, 50, 52, 54, 72, 73, 74, 75, 76, 77, 84, 92, 94, 95, 98, 99, 100, 102, 104, 105, 107, 109, 110, 112, 116, 119, 122, 123], "polynomialdivisionfailederror": 10, "polynomialerror": [10, 72, 75, 76, 77], "polynomialr": [10, 28, 72, 73, 76], "polyopt": 10, "polyr": 72, "polyroot": 45, "polysi": [45, 55], "polytool": [27, 45, 74, 110], "pomer": [43, 64], "poor": 34, "pop": [27, 49], "port": [73, 74, 75, 97, 103], "portion": [5, 37, 41], "portug": 22, "posform": [76, 105], "posifi": 33, "posit": [6, 7, 8, 10, 12, 16, 17, 18, 19, 21, 27, 29, 30, 32, 34, 41, 42, 43, 47, 48, 49, 55, 56, 57, 66, 76, 77, 103, 107, 110, 113, 122], "positive_definit": 105, "possibl": [0, 2, 6, 10, 12, 16, 17, 18, 20, 21, 22, 27, 28, 30, 32, 34, 37, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 62, 64, 66, 67, 76, 77, 103, 104, 109, 113, 119], "possibli": [10, 18, 24, 27, 34, 43, 48, 62, 73, 110], "post": [5, 20, 27, 46, 48, 88, 106, 118], "postfix": 76, "postiv": 32, "postord": 66, "postorder_travers": [66, 118], "postprocess": 48, "postprocessor": 48, "postul": 43, "potenti": [2, 8, 38, 41, 43, 52, 64, 106], "pow": [27, 43, 46, 48, 72, 73, 75, 76, 94, 103, 107, 109, 110, 118, 121], "powdenest": [30, 122], "power": [5, 6, 7, 10, 11, 18, 30, 33, 34, 38, 43, 45, 46, 47, 49, 52, 59, 62, 66, 72, 73, 74, 75, 77, 83, 92, 102, 103, 105, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120], "power_bas": [27, 41], "power_exp": [27, 41], "power_represent": 110, "power_set": 47, "powerset": [47, 108], "powsimp": [27, 30, 73, 99, 122], "pp": [7, 10, 17, 18, 24, 29, 30, 34, 41, 52, 53], "pprint": [32, 41, 43, 46, 48, 52, 53, 73, 96, 110, 121], "pprint_try_use_unicod": 110, "pprint_use_unicod": 77, "pq": 10, "pr": [2, 10, 25, 41, 45, 75, 99, 112], "prabha": 18, "practic": [16, 17, 27, 59], "pre": [27, 42, 48, 106, 118], "prec": [27, 28, 48, 110], "preced": [5, 18, 29, 48], "precis": [5, 27, 28, 29, 32, 34, 46, 48, 49, 62, 70, 72, 74, 78, 102, 103, 105, 110, 113, 117, 122], "precisionexhaust": 5, "precomput": 43, "predefin": [48, 89, 93], "predic": [44, 96, 102, 105], "predict": 48, "prefactor": 48, "prefer": [18, 25, 27, 32, 43, 48, 52, 62, 67, 117], "preferred_index": 32, "prefix": [25, 43, 49, 52, 61, 62, 66, 76], "preliminari": 105, "prem": [10, 75], "preorder_travers": [27, 118], "prep": 43, "preprocess": 34, "preprocessor": [48, 62], "preprocessor_stat": 62, "presenc": [30, 52, 59], "present": [2, 10, 12, 17, 18, 20, 24, 27, 41, 43, 46, 49, 62, 67, 70, 107, 117], "preserv": [25, 27, 45, 66], "press": [12, 18, 49, 112], "presum": [8, 62], "pretti": [4, 8, 32, 33, 34, 35, 41, 48, 73, 74, 77, 82, 83, 84, 89, 91, 100, 102, 103, 109, 110, 116, 117], "prettifi": 46, "pretty_atom": 46, "pretty_print": [5, 34, 35, 41, 46, 117, 123], "pretty_symbol": 46, "pretty_symbologi": 46, "prettyform": 46, "prettyprint": 33, "prev": 20, "prev_binari": 21, "prev_grai": 21, "prev_lex": 16, "prev_lexicograph": 21, "prevent": [27, 43, 45, 46, 48, 107, 117], "preview": [80, 105, 106], "previou": [10, 12, 16, 17, 18, 21, 27, 34, 67, 83, 84, 96, 103, 106, 108, 118], "previous": [25, 48, 103, 105, 106, 108], "previous_term": [27, 30], "prevprim": 43, "primal": 43, "primari": [27, 36, 62], "primarili": [61, 64], "prime": [8, 10, 17, 24, 25, 29, 32, 43, 45, 49, 64, 72, 101, 120], "prime_numb": [27, 43], "prime_ord": 43, "primefactor": 43, "primepi": 43, "primerang": 43, "primetest": 43, "primit": [10, 17, 27, 28, 32, 43, 45, 46, 49, 75, 110, 112], "primitive_el": [45, 72, 110], "primitive_root": 43, "primori": 43, "princip": [6, 10, 27, 30, 32, 34, 41, 45], "principal_branch": [6, 27, 31], "principal_valu": 30, "principl": [30, 41, 43], "print": [1, 3, 4, 5, 8, 10, 12, 16, 17, 18, 25, 27, 32, 33, 35, 36, 41, 43, 48, 52, 62, 66, 73, 74, 75, 76, 77, 82, 84, 89, 91, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 114, 116, 117], "print_add": 99, "print_builtin": 107, "print_ccod": 73, "print_cycl": [15, 17, 18, 22, 24], "print_fcod": 110, "print_gtk": 109, "print_mathml": 72, "print_mul": 99, "print_nonzero": 41, "print_python": 73, "printer": [33, 35, 41, 60, 61, 62, 67, 73, 76, 80, 83, 99, 102, 107, 108, 109, 110, 116], "printmethod": 46, "prior": [0, 45, 48], "prioriti": [27, 67], "privat": [27, 62, 72, 110], "privid": 11, "privileg": 77, "probabl": [8, 17, 27, 29, 32, 43, 46, 52, 61, 67, 73, 109], "problem": [2, 8, 10, 12, 20, 22, 43, 48, 49, 55, 64, 73, 75, 76, 89, 104, 105, 109, 110, 112, 113], "proce": [8, 10, 46], "procedur": [3, 10, 13, 17, 23, 24, 25, 34, 48, 49, 54, 55], "proceed": 112, "process": [5, 6, 10, 17, 18, 24, 27, 34, 41, 43, 46, 48, 52, 64, 66, 75, 106], "processor": 41, "procur": 0, "prod": [25, 75], "prod_": [6, 8, 10, 32, 43], "produc": [17, 27, 46, 52, 53, 64, 66, 73, 77, 103, 109, 121, 122], "product": [0, 5, 6, 10, 13, 15, 17, 18, 22, 25, 27, 29, 34, 38, 41, 43, 45, 47, 48, 49, 52, 53, 58, 59, 60, 61, 64, 66, 73, 75, 102, 103, 104, 105, 106, 109, 116, 117], "product_replacement_algorithm": 17, "productset": [47, 103, 104, 108, 110], "profit": 0, "program": [1, 2, 12, 18, 62, 64, 74, 104, 107, 110, 116], "progress": [43, 62], "prohibit": [18, 19], "project": [0, 2, 5, 10, 33, 41, 61, 62, 76, 104, 105, 106], "project__test__h": 62, "promot": 0, "proof": [6, 7, 17, 20, 34, 112], "proofwiki": 49, "prop": 17, "prop_even": 17, "propag": 5, "proper": [17, 27, 34, 43, 47, 52, 57, 61, 62, 108], "properli": [6, 30, 46, 52, 62, 66, 109], "properti": [6, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 30, 32, 34, 37, 38, 39, 41, 42, 43, 45, 47, 49, 52, 60, 62, 72, 73, 77, 104, 106, 107, 108, 109, 110, 113, 119], "proport": [11, 17, 73], "propos": 43, "proposit": 36, "protect": 75, "protocol": 98, "prototyp": 62, "prove": [6, 27, 34, 37, 39, 41, 43, 104, 105, 115], "proven": [34, 43], "provid": [0, 2, 8, 10, 16, 17, 18, 24, 27, 28, 32, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 57, 60, 61, 62, 64, 66, 67, 76, 83, 102, 104, 106, 107, 108, 114, 119, 120], "providean": 49, "prudnikov": 112, "prufer": [14, 33, 104], "prufer_rank": 20, "prufer_repr": 20, "prune": 17, "pseudo": [10, 18, 43], "pseudocod": 17, "pseudoinvers": 41, "pseudoprim": [43, 101], "pseudotensor": 32, "psg": 19, "psi": [6, 32, 46], "psm": 43, "pstack": 64, "pt": 27, "public": [2, 10, 27, 45, 49, 72, 106, 112], "publish": 2, "puiseux": 74, "pull": [2, 27, 29, 32, 48, 52, 72, 73, 74, 75, 76, 77, 109, 110], "pure": [10, 45, 46, 66, 81, 98], "purepoli": [41, 45, 72, 119], "purpos": [0, 17, 23, 27, 34, 41, 46, 52, 60, 64, 65], "push": [2, 6], "put": [2, 8, 22, 23, 27, 30, 41, 45, 46, 48, 52, 61, 66, 119, 122], "py": [6, 8, 27, 41, 46, 52, 53, 72, 73, 77, 81, 97, 99, 101, 104, 107, 109, 110], "pyarg": 4, "pyf": 62, "pyflak": 109, "pyglet": [80, 81, 89, 92, 100, 103, 109], "pylint": [2, 72], "pynam": 62, "pypi": 104, "pyproject": 76, "pytest": [2, 4, 109, 110], "pythagorean": [49, 106], "python": [0, 2, 3, 4, 5, 18, 27, 28, 30, 35, 36, 37, 41, 42, 43, 44, 46, 48, 52, 57, 61, 62, 64, 66, 67, 72, 73, 75, 76, 80, 82, 89, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 121, 122], "python2": 97, "python3": 110, "python_trick": 66, "pythonfinitefield": 28, "pythoninteg": [28, 45], "pythonprint": 33, "pythonrationalfield": 28, "q": [6, 8, 10, 18, 22, 27, 28, 32, 34, 41, 43, 44, 45, 46, 49, 52, 54, 60, 72, 112, 120, 122], "q0": 52, "q_": [27, 49, 52], "q_0": 49, "q_1": [45, 49], "q_i": 34, "q_n": 45, "qft": 102, "qg": 10, "qnew": 97, "qq": [10, 25, 28, 34, 45, 72, 73, 76, 109], "qquad": [10, 30], "qr": [41, 100, 102], "qr_solv": 41, "qrdecomposit": 41, "qrsolv": 41, "quad": [5, 27, 32, 46], "quadrant": 30, "quadrat": [34, 43, 45, 49, 52, 75, 106, 108, 110], "quadratic_residu": 43, "quadratur": [5, 27, 34, 52, 96, 105], "quadrupl": 45, "qualifi": [2, 10], "qualiti": [46, 99, 109], "quantiti": [18, 27, 32, 48, 108], "quantiz": [101, 102], "quantum": [102, 104], "quartic": [45, 55, 100, 105], "quation": 112, "qubit": [102, 104], "queri": [27, 48, 102, 109], "question": [4, 6, 8, 27, 34, 36, 43, 52], "quick": [41, 43, 55, 67, 110], "quicker": 43, "quickli": [5, 10, 17, 43, 64, 66, 89], "quintic": 55, "quit": [8, 32, 41, 43, 54, 55, 115], "quo": [10, 28, 45, 102], "quo_ground": 45, "quot": [36, 69, 73], "quotient": [8, 10, 25, 28, 30, 43, 45, 48, 52, 104, 108], "qv": 10, "qwerti": 60, "r": [5, 6, 8, 10, 12, 17, 18, 27, 28, 30, 32, 34, 37, 41, 42, 43, 45, 46, 47, 48, 49, 52, 54, 62, 64, 72, 73, 76, 112, 120], "r1": 45, "r2": [45, 46, 48], "r3": [48, 103], "r5": 48, "r_j": 8, "rabin": 43, "raction": 112, "radian": [30, 41, 104], "radic": [27, 45, 48, 55, 104, 110], "radiu": 32, "radius_of_converg": 32, "radsimp": [27, 33], "rai": [104, 107], "rais": [10, 16, 18, 27, 34, 41, 43, 45, 46, 48, 52, 53, 59, 62, 66, 72, 73, 75, 77, 104, 106, 107, 109, 110, 119], "ramanujan": [5, 29], "randmatrix": 41, "random": [12, 16, 17, 18, 24, 27, 40, 41, 43, 70, 102, 104, 110], "random_bitstr": 12, "random_complex_numb": 70, "random_integer_partit": 16, "random_poli": 45, "random_pr": 17, "random_stab": 17, "randomis": [33, 65], "randomli": [17, 43], "randomsymbol": 104, "randprim": 43, "randtest": 70, "rang": [16, 17, 18, 20, 22, 27, 29, 30, 32, 37, 41, 42, 43, 45, 47, 48, 52, 57, 60, 66, 75, 77, 102, 107, 108, 110, 113, 122], "rangl": 17, "rank": [12, 16, 17, 18, 20, 21, 22, 41, 57, 60, 102, 109], "rank_binari": 21, "rank_grai": 21, "rank_lexicograph": 21, "rank_nonlex": 18, "rank_trotterjohnson": 18, "rankdir": 46, "ranscendent": 112, "raoul": 109, "rapidli": [5, 6, 7, 27], "rare": 52, "rat": 43, "rat_clear_denom": 45, "rate": 114, "rather": [5, 8, 10, 17, 18, 19, 27, 36, 38, 43, 44, 45, 49, 52, 60, 64, 103, 117], "ratint": [34, 77, 99], "ratint_logpart": 34, "ratint_ratpart": 34, "ratio": [5, 25, 27, 29, 32, 37, 41, 43, 46, 48, 75], "ration": [5, 6, 8, 10, 25, 28, 29, 30, 32, 33, 34, 41, 43, 44, 46, 47, 48, 49, 52, 54, 55, 70, 72, 73, 74, 75, 76, 77, 83, 102, 104, 108, 109, 110, 112, 115, 116, 118, 120, 121], "rational_funct": 27, "rationalfield": [28, 73], "rationaltool": [34, 45], "raton": 112, "ratsimp": [27, 33, 102], "raw": [27, 45, 48], "rbrace": 10, "rcall": 77, "rceil": 6, "rcollect": 48, "re": [5, 6, 8, 10, 17, 18, 27, 31, 32, 34, 41, 46, 48, 70, 72, 73, 110, 112, 114, 122], "re_disjoint": 10, "reach": [43, 45, 52, 108], "reachabl": 8, "read": [6, 18, 30, 33, 46, 64, 112, 121], "readabl": [45, 46, 103, 117], "reader": [27, 64, 116], "readi": [46, 91], "readili": 41, "readm": [80, 104], "real": [5, 6, 8, 10, 11, 25, 27, 28, 29, 30, 31, 32, 34, 41, 43, 45, 47, 48, 52, 62, 73, 75, 76, 102, 104, 106, 108, 109, 110, 114, 117, 122], "real_numb": 27, "real_root": [31, 45, 76, 110], "realalgebraicfield": [28, 72, 73], "realfield": 28, "realinterv": 10, "realist": 43, "realiz": [10, 13, 17, 43], "realli": [8, 27, 48, 52, 61, 69, 106], "realnumb": 72, "reals_onli": 41, "rearrang": [52, 116], "reason": [6, 8, 10, 18, 24, 27, 32, 39, 46, 48, 52, 64, 66, 76, 103, 113], "reassembl": 45, "reatest": 112, "rebuil": 110, "rebuild": [27, 45], "rebuilt": 109, "recal": [8, 10, 115], "recalcul": 45, "recast": [6, 55], "receiv": [27, 43, 60], "recent": [5, 10, 18, 27, 34, 37, 39, 41, 42, 45, 59, 66, 101, 104, 114, 119], "recip": 66, "reciproc": 76, "reciprocaltrigonometricfunct": 109, "recogn": [27, 48, 60, 74, 102], "recognis": [6, 8, 48, 103], "recognit": [83, 102], "recommend": [27, 52, 60, 108], "recomput": 22, "reconnect": 5, "reconstruct": [10, 43, 77, 118], "reconstuct": 10, "record": 20, "recov": [10, 34, 49], "rectangl": [10, 34, 45, 110], "rectangle_method": 34, "recur": 27, "recurr": [25, 29, 33, 41, 48, 50, 52, 55, 68, 73, 74, 109, 110, 116], "recurrence_memo": 68, "recurs": [6, 7, 10, 27, 29, 34, 36, 43, 45, 48, 56, 59, 64, 66, 73, 76, 77, 105, 106, 109, 110, 118], "recursionerror": [75, 76, 77], "red_groebn": 10, "redefin": [18, 27], "redistribut": [0, 45], "reduc": [6, 8, 10, 22, 27, 29, 30, 32, 35, 41, 43, 45, 47, 48, 49, 51, 52, 53, 54, 70, 72, 77, 102, 105, 107, 108, 110, 112, 119, 122], "reduce_inequ": [51, 55, 74, 75, 77, 109, 110], "reduce_poly_inequ": 103, "reduced_expr": 48, "reduced_toti": 110, "reduct": [10, 49, 102, 109], "redund": [10, 17, 24, 36, 62, 102, 109, 110], "reev": 18, "reevalu": 34, "ref": 2, "refactor": [52, 59, 64, 73, 82, 96, 99, 100, 108], "refer": [2, 3, 4, 6, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 30, 32, 40, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 64, 65, 66], "referenc": [12, 16, 43], "refin": [10, 45, 62, 72, 102], "refine_root": 73, "refinementfailederror": 10, "reflect": [12, 15, 18, 27, 48, 102, 106], "regard": [32, 56, 76], "regardless": [10, 18, 25, 34, 43, 47, 48, 66, 76], "regent": 0, "region": [32, 34, 52, 104], "regist": 106, "registri": 27, "regress": [2, 75, 76, 109], "regular": [0, 5, 15, 32, 34, 43, 52, 98, 113], "regularli": 97, "reimplement": [27, 99, 109], "reintroduc": 22, "reject": [49, 110], "rel": [5, 6, 8, 10, 17, 18, 19, 23, 24, 25, 43, 47, 54, 66, 84, 108, 110], "relat": [6, 8, 10, 11, 12, 17, 24, 29, 30, 31, 33, 34, 36, 45, 48, 49, 52, 73, 74, 75, 76, 77, 102, 103, 104, 107, 108, 109, 110], "relation_with_other_funct": 32, "relationship": [27, 29, 34, 43, 48], "relax": [41, 44], "releas": [3, 4, 60, 67, 72, 73, 74, 75, 76, 77, 83, 84, 96, 98, 102, 103, 104, 105, 106, 108, 109, 110], "relev": [2, 8, 52, 53], "reli": [10, 46, 48, 103, 105], "reliabl": [41, 52, 88, 114], "relmeth": 96, "reloc": 104, "rem": [10, 28, 45, 102], "remain": [6, 8, 17, 18, 20, 22, 37, 43, 44, 45, 52, 53, 64, 66, 102, 104, 109, 110, 113, 117], "remaind": [25, 27, 28, 43, 45, 52, 112, 120], "remainder_modulus_pair": 43, "remainin": 10, "remark": [8, 10, 52], "remedi": 6, "rememb": [36, 41, 46, 48, 57], "remov": [5, 10, 11, 17, 20, 24, 27, 28, 30, 41, 45, 48, 49, 52, 61, 62, 66, 72, 73, 74, 75, 76, 77, 83, 85, 92, 94, 95, 96, 99, 102, 105, 106, 107, 108, 109, 110, 113], "removeo": [27, 46, 114], "renam": [25, 72, 73, 75, 80, 87, 92, 102, 106, 108, 109, 110], "render": [46, 103, 121], "renumb": 52, "reorder": [18, 25, 45, 52, 73, 77], "reorder_limit": 25, "rep": [17, 22, 27, 28, 45, 48], "repeat": [17, 20, 25, 27, 32, 34, 41, 42, 43, 44, 46, 59, 60, 61, 66, 75, 109], "repeatedli": 61, "repetit": 66, "replac": [2, 5, 8, 10, 17, 25, 27, 34, 36, 37, 41, 43, 45, 48, 52, 55, 67, 73, 84, 102, 104, 108, 109, 110, 113], "replic": 104, "repo": 2, "report": [3, 17, 41, 43, 72, 101, 102, 109, 112, 123], "repositori": [2, 4], "repr": [46, 116, 118], "repres": [8, 9, 10, 11, 12, 16, 17, 18, 19, 21, 22, 25, 27, 28, 30, 31, 32, 34, 36, 38, 41, 42, 45, 46, 47, 48, 49, 52, 59, 60, 62, 64, 66, 84, 103, 104, 106, 108, 113, 114, 115, 117, 118, 123], "represent": [8, 10, 17, 20, 27, 32, 36, 38, 42, 43, 45, 46, 48, 49, 52, 60, 72, 73, 74, 102, 103, 106, 108, 110, 112, 121], "reprifi": 46, "reproduc": [0, 2], "reprprint": 33, "request": [2, 4, 27, 43, 59, 61, 72, 73, 74, 75, 76, 77, 109, 110], "requir": [4, 5, 8, 10, 17, 27, 31, 43, 46, 49, 52, 59, 61, 62, 103, 104, 105, 106, 108, 109, 119, 120], "rerun": 45, "res_": 8, "research": [18, 48], "resembl": [32, 60, 111], "resent": 112, "reserv": [0, 2, 62, 108], "reset": [17, 19, 26, 63], "reshap": [37, 42, 57, 73, 116], "residu": [8, 11, 22, 43, 75, 102], "residue_": 11, "residue_ntheori": 43, "residue_theorem": 11, "resiz": 17, "resolut": 49, "resolv": [66, 75], "resort": 46, "resourc": [52, 61], "resp": [10, 52], "respect": [6, 10, 11, 17, 18, 21, 22, 24, 25, 27, 30, 32, 34, 41, 43, 45, 48, 49, 52, 53, 55, 56, 57, 60, 62, 70, 76, 102, 103, 105, 106, 107, 108, 114], "respons": [27, 46, 62, 104], "rest": [36, 39, 103, 116], "restor": [48, 106, 108], "restrict": [16, 32, 41, 55, 107], "result": [5, 6, 8, 10, 17, 18, 22, 25, 27, 30, 34, 36, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 57, 59, 61, 62, 64, 66, 70, 73, 74, 75, 76, 77, 83, 102, 104, 105, 106, 107, 108, 109, 110, 117, 122], "result_": 62, "result_var": 62, "result_vari": 62, "retain": [0, 18, 27, 34, 42, 44, 45, 48, 108], "retract": 45, "retri": [34, 43], "retriev": [24, 48, 110], "retroact": 103, "return": [5, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 69, 70, 72, 73, 75, 76, 77, 83, 84, 87, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 118, 119, 120, 122, 123], "returnvalu": 62, "reus": 83, "rev": 66, "revers": [10, 12, 16, 18, 25, 27, 30, 41, 43, 45, 46, 48, 52, 66, 102, 122], "reverse_ord": 25, "reversedgradedlexord": 45, "revert": 72, "review": [72, 73, 74], "revis": [54, 112], "rewrit": [6, 7, 10, 25, 27, 29, 30, 32, 34, 41, 45, 47, 48, 52, 53, 87, 96, 103, 104, 110, 117, 122], "rewritten": [7, 32, 48, 52, 80, 103, 105, 106], "rf": [25, 29], "rfdz": 48, "rg": 16, "rgs_enum": 16, "rgs_gener": 16, "rgs_rank": 16, "rgs_unrank": 16, "rh": [18, 27, 41, 42, 46], "rho": [6, 41, 43, 46], "riccati": [52, 103], "rich": [48, 74, 110, 112], "richard": [43, 112], "richardson": 5, "rid": [72, 109], "riemann": [6, 27, 29, 30, 31, 48, 110], "right": [0, 6, 8, 10, 11, 17, 18, 22, 27, 29, 30, 32, 34, 41, 43, 46, 47, 52, 62, 64, 66, 76, 99, 104, 106, 114, 117, 122], "right_open": 47, "rightarrow": [6, 11, 29, 30, 32, 34, 109], "rigor": 62, "rim": 47, "ring": [10, 28, 41, 45, 72, 75, 104, 120], "ring_seri": 73, "rioboo": 34, "risch": [34, 82, 87, 105, 114], "risch_integr": 109, "rise": [25, 29, 32, 48, 52], "risingfactori": [25, 31, 32, 72], "rl": 42, "rmul": 18, "rmul_with_af": 18, "roa96": [8, 112], "roa97": [8, 112], "roach": 112, "robbiano": 112, "roberg": 75, "robertson": 49, "robin": 66, "robinson": 112, "robust": [5, 23, 27, 45, 48, 52, 66, 67, 84, 85, 95, 96, 98, 99, 102, 106, 107, 108, 109], "roceed": 112, "roch": 52, "rogram": 112, "role": 30, "root": [6, 8, 10, 27, 31, 32, 33, 34, 41, 42, 43, 46, 52, 64, 72, 73, 75, 76, 77, 80, 94, 96, 98, 102, 109, 110, 117, 119, 123], "root_of_un": 30, "rootfind": 100, "rootisol": [10, 74], "rootof": [30, 45, 52, 55, 72, 73, 76, 82, 102, 109, 110], "rootoftool": [30, 45], "roots_quadrat": 110, "rootsof": 94, "rootsum": [45, 76, 94, 96, 102], "rop": 27, "ropen": 47, "rosen": 43, "rosetta": 3, "rot_axis1": 41, "rot_axis2": 41, "rot_axis3": 41, "rotat": [15, 17, 19, 27, 41, 52, 66, 82, 103, 108], "rotate_left": 66, "rotate_right": 66, "roughli": [27, 52], "round": [5, 27, 29, 30, 45, 66, 70, 104, 110], "roundfunct": 31, "roundoff": 113, "routin": [5, 10, 16, 27, 36, 41, 42, 43, 45, 46, 48, 49, 52, 53, 61, 65, 66, 70, 103, 107, 108], "row": [8, 16, 18, 29, 37, 38, 41, 42, 43, 46, 67, 72, 107, 110, 119], "row_del": 72, "row_insert": [41, 42, 119], "row_join": [41, 42], "row_list": 42, "row_op": [37, 42], "row_structure_symbolic_choleski": 42, "row_swap": [37, 42, 119], "rowend": 41, "rowsep": 41, "rowslist": [41, 42], "rowstart": 41, "rr": [28, 109], "rref": [41, 55, 109, 119], "rsa": 106, "rsett": 112, "rsolv": [54, 55, 73, 74, 109, 110, 123], "rsolve_hyp": [41, 54, 84, 109], "rsolve_poli": [54, 84], "rsolve_ratio": 54, "rst": [52, 73, 76, 109], "rt": 112, "ru": 52, "rubik": 17, "rubric": 18, "rule": [6, 8, 17, 18, 25, 27, 34, 36, 41, 42, 46, 47, 48, 52, 87, 103, 105, 108, 119, 122], "run": [1, 2, 3, 6, 8, 17, 18, 20, 27, 30, 35, 44, 48, 52, 53, 61, 63, 64, 66, 75, 77, 109, 110, 115], "runner": 100, "runtest": 101, "runtim": [27, 109, 110], "runtimeerror": [10, 73, 109, 110], "rusin": 49, "ruskei": 18, "russian": 0, "rutger": 112, "rv": 48, "rvert": 6, "s0": [6, 25], "s0020": 18, "s0022314x96900499": 112, "s0747": 112, "s0747717183710515": 112, "s0747717183710539": 112, "s074771718571022x": 41, "s0747717188800452": 112, "s0747717189800616": 112, "s1": [17, 25, 45, 66], "s2": [18, 45, 66], "s208": 12, "s3": 17, "s4": 18, "s5": 17, "s_": [10, 22], "s_0": 22, "s_i": [22, 34], "s_j": 10, "s_n": [25, 45], "s_poli": 10, "s_postul": 43, "s_transvers": 22, "sa": [45, 104], "saarbr\u00fccken": 41, "safe": [43, 59], "safeti": 39, "sage": [27, 90, 91, 92, 95], "sagemath": 109, "sai": [7, 8, 10, 25, 27, 49, 52, 54, 117, 120], "said": [43, 52], "sake": [10, 29, 49], "salvi": 112, "same": [6, 7, 8, 10, 16, 17, 18, 22, 25, 27, 29, 32, 34, 36, 37, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 62, 64, 66, 67, 73, 75, 77, 88, 103, 104, 107, 110, 113, 114, 115, 118, 119, 121, 122], "sampl": 117, "san": 4, "saniti": 108, "sat": 102, "satisfi": [6, 10, 15, 17, 22, 27, 29, 32, 36, 41, 46, 49, 52, 53, 55, 56, 77, 110], "satisif": [49, 52], "satisifi": 52, "saunder": 41, "save": [27, 43, 55, 64, 87], "saveimag": 103, "sc": 17, "scalar": [10, 27, 37, 38, 41, 42, 57, 62, 104, 105, 106, 110], "scalar_multipli": 42, "scan": 27, "scarc": 10, "scenario": 43, "scene": 48, "scheme": [2, 5, 18, 25, 45, 72], "schmidt": 41, "schorn": 49, "schreier": [17, 22, 24, 104], "schreier_sim": [17, 23, 24], "schreier_sims_increment": [17, 24], "schreier_sims_random": [17, 24], "schreier_vector": 17, "schroeding": 102, "scienc": [18, 41, 112, 114], "sciencedirect": [41, 112], "scientif": [109, 112], "scipi": [61, 73], "scope": 122, "scott": 17, "scratch": 106, "screen": 121, "script": [32, 61, 81, 99], "search": [2, 8, 10, 17, 18, 22, 24, 27, 30, 43, 48, 53, 104], "sec": [31, 34, 46, 109, 122], "secant": 30, "sech": 31, "second": [5, 8, 10, 17, 18, 21, 22, 23, 24, 25, 29, 30, 32, 34, 41, 43, 45, 46, 48, 49, 52, 57, 66, 101, 102, 110, 112, 119], "secondli": 8, "secondqu": [102, 104], "section": [6, 7, 8, 9, 10, 18, 25, 27, 32, 37, 46, 52, 64, 71, 114, 115, 123], "see": [2, 6, 8, 10, 11, 15, 17, 18, 19, 22, 25, 27, 29, 30, 31, 32, 34, 36, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 60, 61, 62, 64, 66, 68, 72, 73, 74, 75, 76, 77, 84, 88, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 117, 118, 119, 120, 122], "seed": [16, 17, 41, 43], "seek": [54, 104], "seem": [4, 6, 27, 48, 52, 109, 110, 114], "seemingli": [25, 77], "seen": [6, 10, 18, 25, 52, 121], "segfault": 109, "segment": [17, 52, 99], "sei": 112, "seldom": 43, "select": [10, 11, 12, 17, 18, 25, 27, 36, 37, 41, 45, 48, 72, 107, 112], "selector": [25, 48], "self": [10, 11, 17, 18, 23, 25, 27, 28, 31, 32, 34, 37, 41, 42, 45, 46, 47, 108, 109], "semant": [2, 76], "semi": [41, 43], "send": [17, 27, 30, 41, 43, 52], "sens": [6, 8, 10, 27, 29, 48, 62, 66, 113, 115, 122], "sensibl": 34, "sensit": [10, 27, 48], "sent": [4, 34, 48], "sentenc": 36, "sep": [46, 53, 87], "separ": [6, 15, 27, 32, 34, 41, 45, 46, 48, 49, 53, 59, 64, 66, 75, 76, 99, 104, 105, 115], "separable_integr": 52, "separable_reduced_integr": 52, "separatevar": [27, 33, 52], "septemb": [18, 64, 112], "seq": [10, 17, 27, 41, 66], "sequenc": [8, 12, 14, 17, 18, 22, 24, 25, 27, 29, 32, 33, 41, 43, 46, 48, 49, 52, 53, 61, 62, 66, 68, 91, 106, 112, 113, 122], "sequenti": [12, 30], "seress": 17, "sergei": [0, 112], "seri": [5, 7, 8, 11, 17, 25, 27, 29, 30, 32, 43, 46, 52, 72, 73, 75, 76, 77, 82, 88, 89, 91, 95, 96, 99, 102, 106, 108, 109, 110, 112, 116], "serial": 110, "seriessolut": 52, "serv": [23, 27, 31, 52, 53, 69, 116], "servic": 0, "session": [3, 27, 34, 35, 76, 121], "set": [3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 59, 60, 61, 62, 66, 67, 73, 77, 87, 96, 100, 102, 103, 104, 107, 108, 109, 110, 112, 113, 122], "set_domain": 45, "set_global_set": 46, "set_main": 104, "set_modulu": 45, "set_ord": [45, 72], "seterr": 73, "setminu": [6, 10, 32], "setup": [2, 8, 10, 26, 27, 45, 61, 81, 102], "setuptool": 109, "setuptools_scm": 72, "sever": [5, 6, 7, 13, 17, 18, 25, 27, 29, 31, 32, 34, 47, 55, 62, 66, 107, 108, 113, 119, 121, 122], "sf": [10, 74], "sff": 41, "sfu": 32, "sg": 17, "sgen": 22, "sha1": 62, "shadow": 19, "shall": [0, 6, 7, 8], "shallow": 10, "shape": [2, 8, 38, 41, 42, 46, 57, 59, 60, 107, 119], "shapeerror": 41, "share": [10, 28, 41, 43, 62], "shea": 112, "sheet": 32, "shell": [1, 84], "shi": [6, 8, 32, 104], "shift": [2, 8, 13, 17, 18, 20, 28, 32, 36, 45, 77, 106, 108], "ship": 103, "shor": 102, "short": [2, 18, 22, 43, 121], "shortcut": [27, 37, 46, 47, 48, 102], "shorter": [27, 62], "shortest": [48, 52, 66, 107], "shorthand": [36, 47], "should": [2, 5, 6, 7, 8, 17, 19, 20, 22, 25, 27, 32, 34, 36, 41, 43, 44, 45, 46, 48, 49, 52, 55, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 80, 102, 103, 104, 106, 108, 109, 110, 114, 115, 122], "shouldn": [27, 102], "show": [1, 5, 6, 7, 8, 10, 18, 25, 27, 30, 31, 41, 43, 45, 48, 49, 52, 55, 56, 57, 61, 62, 102, 103, 104, 117, 119, 120, 121], "shown": [5, 6, 10, 16, 18, 25, 27, 32, 46, 52, 116], "showpost": 43, "shrink": 6, "shuffl": 18, "shut": [27, 45], "si": [6, 32, 104], "side": [17, 18, 27, 34, 41, 46, 53, 59, 62, 76, 104, 106, 114], "siev": [17, 43], "sift": [17, 24, 66], "sig": 10, "sig_cmp": 10, "sig_kei": 10, "sig_mult": 10, "sigma": [6, 46, 52], "sigma_k": 43, "sigmoid": 76, "sign": [6, 7, 10, 11, 22, 27, 29, 31, 34, 46, 48, 49, 56, 66, 73, 74, 77, 102, 110], "signal": [10, 43, 118], "signatur": [10, 18, 27, 62, 107], "signed_permut": [49, 66, 110], "signifi": [17, 45], "signific": [5, 27, 34, 43, 73, 83, 108], "significantli": [5, 61, 64, 96, 102, 104], "signinf": 7, "signsimp": 48, "silent": [27, 61], "silli": 83, "sim": [6, 17, 22, 24, 104], "sim16": [52, 112], "similar": [5, 8, 25, 27, 29, 32, 36, 48, 52, 54, 64, 102, 104, 117, 119, 122], "similari": 75, "similarli": [8, 10, 22, 27, 47, 52, 84, 103, 118, 119], "simmon": 112, "simpl": [4, 5, 6, 8, 17, 25, 27, 28, 32, 34, 41, 43, 45, 46, 48, 49, 52, 61, 62, 73, 74, 75, 76, 77, 80, 82, 97, 109, 110, 119, 120, 121, 122], "simpledomain": 28, "simpler": [5, 6, 8, 10, 27, 32, 48, 52, 54, 122], "simplest": [36, 41, 43, 48, 52, 76, 105, 122], "simplex": 74, "simpli": [2, 8, 25, 27, 30, 38, 43, 52, 66, 67, 106], "simplic": [8, 52], "simplif": [3, 9, 27, 29, 30, 31, 33, 41, 44, 45, 52, 54, 55, 56, 73, 75, 77, 95, 98, 100, 104, 105, 107, 108, 109, 113, 115, 116, 117], "simplifi": [3, 8, 25, 27, 29, 30, 32, 33, 34, 36, 37, 39, 41, 42, 47, 49, 52, 53, 54, 55, 56, 73, 74, 75, 76, 77, 80, 83, 85, 88, 92, 95, 102, 103, 104, 105, 106, 108, 109, 110, 113, 117, 122], "simplify_log": [36, 105], "simultan": [27, 43, 110, 113], "sin": [5, 6, 8, 11, 27, 29, 31, 32, 34, 41, 44, 46, 47, 48, 52, 57, 62, 66, 67, 70, 72, 73, 77, 82, 83, 85, 88, 102, 105, 108, 109, 110, 113, 114, 117, 122, 123], "sinc": [6, 8, 10, 17, 18, 19, 22, 23, 24, 27, 36, 41, 43, 46, 48, 49, 52, 64, 66, 98, 102, 103, 104, 105, 107, 120, 122], "sine": [6, 30, 32, 34], "sine_transform": 34, "sinetransform": 34, "sing": 41, "singl": [5, 6, 7, 8, 10, 12, 17, 27, 28, 29, 30, 32, 34, 36, 37, 41, 44, 46, 48, 49, 52, 54, 55, 60, 62, 64, 72, 73, 102, 106, 114, 118, 123], "singleton": [18, 33, 36, 74, 76, 83, 108, 110], "singletonregistri": 27, "singletonwithmanagedproperti": 27, "singlevaluedfunct": 92, "singli": 43, "singular": [5, 11, 30, 32, 34, 41, 42, 52, 104, 109, 114], "singular_valu": 41, "singularit": 34, "sinh": [5, 6, 8, 27, 31, 32, 46, 48, 75, 122], "siret": 112, "sister": [25, 109], "sit": 90, "site": [43, 108, 112], "situat": [5, 6, 52, 55], "six": 49, "size": [10, 12, 16, 17, 18, 19, 20, 21, 22, 27, 41, 42, 43, 48, 49, 52, 66, 75, 77, 107, 108], "skiena": 18, "skip": [12, 27, 41, 43, 52, 55, 106, 109], "slater": [8, 32], "slice": [27, 37, 41, 48, 57, 76, 107, 119], "slightli": [5, 8, 22, 44, 48, 106], "slip": 104, "slot": [22, 60], "slow": [22, 27, 34, 46, 48, 52, 61, 72, 73, 74, 75, 76, 96, 106, 110, 113, 122], "slowdown": [5, 83], "slower": [22, 41, 42], "slowest": 34, "slowli": 5, "sm": 43, "small": [5, 17, 18, 29, 41, 43, 48, 49, 54, 66, 86, 99, 100, 103, 107, 109, 117], "smaller": [8, 10, 17, 18, 27, 32, 38, 43, 54, 66, 102, 103, 104, 113, 120, 122], "smallest": [10, 20, 28, 30, 41, 43, 66], "smallmatrix": [46, 117], "smart": [49, 52], "smatrix": 102, "smith": 110, "smooth": [5, 27, 43], "smoothness_p": 43, "sn": [18, 25], "so": [2, 4, 5, 6, 8, 10, 11, 12, 15, 16, 17, 18, 20, 22, 24, 27, 30, 31, 32, 34, 36, 38, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 61, 64, 66, 67, 70, 84, 90, 102, 103, 104, 106, 107, 108, 115, 118, 121, 123], "societi": [49, 112], "sode0401": 52, "sode0402": 52, "softwar": [0, 112], "sol": [52, 53, 56, 104], "sola": 52, "solb": 52, "soldner": 32, "soldnersconst": 32, "solid": 19, "sollist": 52, "soln": [41, 42], "solut": [5, 10, 22, 27, 30, 32, 34, 41, 42, 43, 45, 48, 49, 52, 53, 54, 55, 56, 72, 73, 75, 76, 99, 104, 105, 107, 109, 110, 112, 115, 123], "solv": [10, 12, 22, 25, 33, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 72, 73, 74, 75, 76, 77, 95, 96, 100, 102, 104, 105, 107, 109, 110, 112, 117, 123], "solvabl": [17, 49, 52, 105], "solve_biquadrat": 110, "solve_congru": [43, 104], "solve_for_func": [52, 53], "solve_least_squar": [41, 42], "solve_linear": 55, "solve_linear_system": [55, 109], "solve_poly_system": [45, 55, 73, 77, 110], "solve_surd_system": 55, "solve_triangul": 110, "solve_undetermined_coeff": 110, "solve_univariate_inequ": 107, "solvefun": 53, "solver": [3, 33, 41, 43, 45, 49, 52, 53, 54, 55, 56, 73, 75, 76, 84, 93, 95, 99, 102, 103, 105, 107, 109, 110, 116], "solveset": 75, "some": [1, 2, 4, 5, 6, 8, 10, 11, 15, 17, 18, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 41, 43, 44, 45, 46, 48, 49, 52, 53, 61, 62, 64, 65, 66, 67, 73, 80, 88, 96, 101, 103, 104, 106, 107, 109, 110, 113, 115, 120, 122], "someon": [64, 116], "someth": [5, 6, 7, 27, 33, 36, 41, 43, 48, 52, 62, 103, 104, 110, 113, 117], "sometim": [5, 6, 27, 29, 32, 45, 49, 52, 66, 75, 76, 77, 109, 110, 113, 119, 122], "somewhat": [32, 34], "soon": [2, 25, 27], "sop": [36, 112], "sopform": [76, 105], "sophi": 74, "sophist": 54, "sort": [6, 10, 16, 18, 22, 27, 41, 42, 43, 45, 48, 49, 52, 53, 59, 62, 66, 72, 99, 102, 103, 106, 108, 110, 117], "sort_kei": [16, 27, 52, 66, 109], "sought": [17, 43, 48], "sound": 122, "sourc": [0, 3, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 94, 103, 111], "source_format": 46, "south": 10, "southwest": 10, "sp": 75, "space": [27, 44, 64, 73, 102, 106, 108, 112], "spammer": 46, "span": [41, 46, 119], "spars": [9, 33, 40, 41, 57, 73, 74, 75, 76, 102, 109], "sparsematrix": [38, 41, 42, 48, 102], "sparsematrixbas": 42, "sparsiti": 42, "spatial": 46, "speak": 41, "spec": 45, "specfun": 68, "speci": [25, 27], "special": [0, 5, 6, 8, 18, 27, 29, 31, 33, 34, 41, 46, 48, 52, 53, 61, 62, 66, 67, 74, 103, 104, 105, 106, 107, 112, 114, 116], "specialis": 27, "specialpoli": 45, "specif": [0, 10, 17, 25, 27, 32, 41, 45, 46, 48, 49, 52, 53, 56, 62, 72, 122], "specifi": [6, 8, 10, 11, 21, 25, 27, 28, 30, 34, 41, 42, 43, 45, 46, 48, 52, 53, 55, 57, 60, 61, 62, 66, 67, 72, 73, 76, 80, 104, 108, 110, 120, 122], "spectral": 41, "spedup": 94, "speed": [5, 17, 34, 41, 46, 48, 52, 61, 64, 66, 104, 122], "speedup": [78, 83, 95, 106, 108], "spell": 52, "sphere": 73, "spheric": [31, 45, 92, 102, 105, 117], "spherical_bessel_fn": [32, 45], "spherical_harmon": 32, "spherical_jn": 73, "sphericalharmon": 32, "sphericalharmonici": 32, "sphinx": [2, 30, 52, 73, 99, 103], "sphinxcontrib": 73, "spin": [102, 103], "spline": [31, 102], "split": [5, 6, 25, 27, 34, 44, 46, 66, 102, 105], "split_1": 27, "split_super_sub": 46, "split_symbol": 44, "split_symbols_custom": 44, "spoli": 10, "spot": 41, "spread": [46, 64], "spring": 43, "springer": [43, 112], "spuriou": [10, 73], "sq": 49, "sqf": [45, 49, 73, 75, 102, 120], "sqf_list": [45, 72, 73, 77], "sqf_list_includ": 72, "sqf_norm": [45, 72], "sqf_part": [45, 72], "sqfreetool": 74, "sqr": 72, "sqrt": [5, 6, 8, 10, 27, 28, 29, 31, 32, 34, 35, 41, 43, 45, 46, 48, 49, 52, 55, 66, 67, 72, 73, 74, 75, 76, 77, 82, 106, 109, 110, 113, 117, 120, 121, 122], "sqrt_mod": 43, "sqrt_mod_it": 43, "sqrtdenest": 104, "squar": [6, 10, 30, 33, 34, 37, 41, 42, 43, 45, 47, 49, 72, 73, 75, 77, 80, 103, 106, 109, 110, 116, 117], "square_factor": 43, "square_iter": 47, "square_root": 30, "squarefre": [10, 43], "squarefree_cor": 43, "squenc": 66, "src": 52, "srepr": [46, 109], "sring": [73, 74], "sss": 104, "sstr": [25, 46, 109], "sstrrepr": 77, "st": 34, "stab": 17, "stabil": [5, 17, 22, 24, 59, 104], "stabl": [33, 41, 66, 72], "stack": [41, 46, 64, 119], "stackoverflow": 43, "stade": 6, "stage": [25, 33], "stai": 108, "standard": [2, 6, 27, 30, 32, 34, 36, 39, 41, 43, 44, 46, 48, 49, 52, 67, 99, 102, 104, 105, 109, 113, 115, 122], "standard_transform": 44, "stanford": 12, "starrett": 52, "start": [0, 2, 3, 4, 8, 10, 12, 16, 17, 18, 22, 25, 27, 32, 41, 43, 45, 46, 47, 49, 52, 57, 59, 61, 66, 69, 73, 83, 104, 116, 117], "starter": 4, "startnumb": 52, "stat": [72, 76, 104, 105], "state": [0, 2, 3, 8, 17, 24, 32, 43, 48, 64, 102, 103, 104, 108, 112], "statement": [3, 4, 6, 27, 32, 36, 38, 46, 62, 87, 102, 103, 108, 117, 123], "static": [5, 17, 18, 20, 30, 46, 47], "statist": [2, 12, 32, 72, 75, 104], "statweb": 12, "stdfactkb": 27, "stegun": 32, "stein": 43, "stem": 60, "step": [2, 6, 7, 8, 10, 21, 22, 25, 32, 34, 41, 43, 48, 49, 52, 54, 61, 66], "steven": 112, "still": [7, 8, 10, 18, 25, 27, 32, 34, 41, 46, 48, 52, 60, 66, 98, 102, 103, 104, 106, 108, 109], "stinson": 18, "stirl": [18, 31, 66, 73], "stirling_numbers_of_the_first_kind": 29, "stirling_numbers_of_the_second_kind": 29, "stone": 3, "stop": [18, 27, 43, 52], "stopiter": [49, 109], "storag": [10, 27, 41], "store": [8, 17, 27, 38, 42, 43, 57, 59, 60, 62, 64, 66, 118], "stori": 2, "stormi": 52, "str": [10, 18, 27, 41, 43, 44, 45, 46, 48, 52, 61, 66, 67, 73, 110, 116], "straight": 52, "straightforward": [8, 17], "strang": [27, 75, 110], "strategi": [7, 8, 27, 34, 41, 48, 53, 74, 109, 112], "stream": [48, 66], "stretch": 64, "strict": [0, 5, 17, 27, 29, 61, 110, 113, 122], "strictli": [10, 27, 32, 41, 43, 48, 107], "strike": 107, "string": [5, 12, 16, 27, 35, 36, 41, 43, 44, 46, 48, 52, 59, 60, 61, 62, 66, 67, 69, 73, 99, 102, 103, 108, 109, 121], "stringify_expr": 44, "stringio": [103, 106], "stringpict": 46, "strip": [34, 43, 69], "strong": [17, 22, 23, 24, 43], "strong_gen": [17, 23, 24], "strong_gens_distr": [17, 24], "strprinter": [33, 41], "structur": [6, 15, 17, 18, 24, 27, 36, 41, 42, 45, 48, 50, 52, 59, 60, 62, 64, 66, 102, 105, 115], "structure_theorem_for_finitely_generated_abelian_group": 15, "struggl": 5, "stub": 27, "stuck": 77, "student": [49, 103, 104], "studi": 49, "stuff": [62, 69, 72, 102], "sturm": [10, 73], "style": [27, 46, 104, 109], "stylis": 46, "sub": [5, 25, 30, 32, 36, 38, 41, 42, 43, 48, 49, 52, 53, 55, 61, 72, 73, 75, 84, 96, 99, 102, 103, 106, 109, 110, 113, 114], "sub1": 46, "sub2": 46, "sub_ground": 72, "subclass": [27, 46, 61, 62, 67, 72, 73, 102, 104, 106, 107], "subdetermin": 10, "subdiagon": 41, "subdirectori": 33, "subdomain": 10, "subexpres": 33, "subexpress": [7, 27, 41, 42, 45, 46, 48, 62, 73, 94, 106, 122], "subfactori": 31, "subgroup": [17, 18, 22, 23, 24, 43, 104], "subgroup_search": 17, "subject": 27, "sublist": 22, "submatric": [38, 41], "submatrix": [10, 41, 42, 107], "submit": 2, "submodul": [72, 75, 104, 109, 110], "suboptim": 8, "subprocess": [27, 61], "subproduct": 41, "subresult": [27, 45, 99, 112], "subroutin": 10, "subs_dict": [83, 84], "subscript": [8, 18, 46, 49, 66, 119], "subsequ": [10, 27, 64, 66], "subset": [6, 10, 12, 14, 17, 18, 23, 24, 27, 30, 33, 46, 47, 66, 74, 104, 108, 110], "subset_from_bitlist": 21, "subset_indic": 21, "subsitut": [52, 110], "substit": 109, "substitut": [0, 6, 7, 8, 10, 27, 32, 34, 41, 48, 49, 52, 53, 54, 55, 56, 67, 74, 75, 99, 103, 106, 109, 110, 116], "substract": 10, "subsum": 32, "subsystem": [46, 83], "subtleti": 6, "subtract": [5, 10, 18, 27, 43, 103, 118], "subtre": [27, 64, 66], "subvector": 32, "subwiki": [15, 17], "succ": 7, "succe": [27, 36, 43], "success": [6, 10, 17, 27, 32, 34, 43, 52, 66, 104], "succinct": 27, "succinctli": 27, "suffici": [5, 7, 17, 18, 22, 52, 64, 66], "suffix": [2, 27, 62], "sugar": [60, 72, 112], "suggest": [17, 34, 43], "suit": [41, 45, 98], "suitabl": [8, 10, 34, 46, 49, 52, 57], "sullivan": 66, "sum": [6, 8, 9, 16, 18, 25, 27, 29, 32, 34, 38, 41, 43, 45, 48, 49, 52, 54, 57, 59, 66, 73, 75, 76, 83, 84, 99, 102, 106, 109, 110, 116, 122], "sum2": 102, "sum_": [6, 8, 10, 25, 27, 29, 32, 34, 43, 52], "sum_0": 8, "sum_i": 32, "sum_k": [25, 57], "sum_m": 57, "sum_of_pow": 49, "summand": [16, 25], "summar": 71, "summari": 2, "summat": [5, 25, 27, 29, 32, 46, 48, 59, 60, 61, 73, 75, 96, 102, 105, 106, 112, 114], "summer": 105, "sun": [10, 112], "suominen": [72, 73, 74], "sup": [11, 45, 46, 47], "super": [32, 46], "super_set": 21, "superclass": [27, 38, 106], "superdiagon": 41, "supergroup": 17, "superscript": [46, 96, 99], "superset": [16, 21, 47, 48, 108], "superset_s": 21, "suppli": [17, 18, 27, 43, 52, 61, 66, 67, 107], "support": [5, 10, 11, 18, 25, 27, 31, 32, 34, 41, 43, 45, 46, 47, 48, 52, 53, 55, 57, 60, 61, 62, 72, 73, 74, 75, 76, 77, 82, 83, 85, 89, 96, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 119, 120], "suppos": [6, 8, 10, 18, 25, 27, 31, 46, 52, 66], "suppress": [27, 44], "supremum": [30, 47], "surd": [43, 48, 73], "sure": [2, 4, 17, 27, 33, 41, 52, 61, 66, 72, 122], "surfac": [6, 27, 30, 32, 48, 104, 106], "surpris": [27, 77, 115], "surround": [27, 109], "susan": [12, 112], "suspect": [27, 43], "sussman": 104, "svd": 105, "svn": 2, "sw10": [10, 112], "swallow": 27, "swap": [17, 19, 37, 41, 42, 119], "swig": 61, "swing": 29, "swinnerton": [45, 102], "swinnerton_dyer_poli": 45, "swiss": 112, "switch": [10, 17, 18, 24, 43, 45, 83, 102], "switzerland": 112, "sx": 22, "sy": [80, 102, 115], "sylvest": [10, 43], "sym": [22, 27, 29, 46, 48, 49, 66], "sym_i": 22, "symarrai": [77, 101, 102], "symb": [41, 46], "symb85": 48, "symb_nam": 46, "symbol": [0, 1, 3, 5, 7, 8, 10, 11, 25, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 55, 56, 57, 58, 59, 60, 61, 66, 67, 70, 73, 75, 76, 77, 83, 89, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "symbol_nam": 46, "symbolnam": 52, "symbologi": 46, "symbols_to_declar": 46, "symfunc": [61, 67], "symmetr": [8, 10, 15, 17, 18, 22, 28, 41, 42, 43, 45, 47, 72, 102, 105], "symmetri": [15, 19, 22, 32, 41, 52, 59], "symmetric_differ": 47, "symmetric_group": 15, "symmetric_poli": 45, "symmetric_residu": 43, "symmetricgroup": [15, 17, 23, 24], "sympi": [0, 2, 3, 18, 27, 67, 71, 72, 73, 74, 75, 76, 77, 109, 110], "sympif": [27, 66, 108], "sympifi": [33, 36, 66, 80, 82, 102, 103, 106, 110], "sympifyerror": 27, "sympifyit": 83, "symplifi": [8, 48], "symposium": 112, "sympy_cache_s": 108, "sympy_pars": 44, "symsac": 112, "syntact": 60, "syntax": [18, 27, 34, 35, 44, 46, 48, 72, 75, 87, 97, 102, 105, 108, 109, 114, 117, 121], "sysod": 52, "sysode_linear_neq_order1": 52, "system": [2, 4, 6, 10, 17, 27, 28, 30, 35, 36, 41, 45, 46, 48, 50, 51, 54, 61, 72, 73, 74, 76, 90, 95, 96, 100, 104, 105, 107, 108, 109, 110, 112, 113, 115, 117, 123], "t": [1, 2, 3, 6, 8, 10, 12, 17, 18, 20, 22, 24, 25, 27, 29, 30, 32, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 61, 63, 66, 67, 69, 72, 73, 74, 75, 76, 77, 82, 87, 102, 108, 109, 110, 112, 113, 117, 119, 120, 122, 123], "t0": 22, "t1": [22, 49], "t2": 49, "t3": 49, "t4": 49, "t5": 49, "t_": [10, 22], "t_0": 49, "t_1": [10, 49], "t_2": 49, "t_c": 22, "t_k": 10, "t_m": 10, "t_n": [10, 32, 34], "tab": [22, 75], "tab1": 22, "tabl": [9, 32, 34, 41, 43, 104, 105], "tableform": [104, 110], "tackl": 62, "tag": [2, 46], "tail": [10, 12, 25, 27], "tail_degre": [10, 74], "take": [2, 5, 8, 10, 13, 17, 21, 25, 27, 30, 31, 32, 34, 41, 43, 45, 46, 47, 48, 49, 52, 60, 61, 66, 67, 72, 73, 76, 77, 103, 106, 110, 114, 117, 118, 119, 121, 122], "taken": [8, 15, 24, 25, 27, 34, 41, 42, 45, 60, 62, 66, 75, 111], "takenouchi": 43, "takeshima": 112, "taku": 112, "tall": 73, "tan": [27, 29, 31, 34, 44, 46, 48, 52, 67, 75, 76, 108, 122], "tandem": 61, "tangent": [30, 52], "tangent_lin": 83, "tanh": [5, 27, 31, 34, 46, 48, 122], "taocp": 103, "tarbal": [86, 104], "target": [27, 43, 48, 62], "task": [30, 103, 114], "tau": [6, 46, 52], "taylor": [27, 30, 45, 52, 110], "taylor_term": [27, 30], "tc": 45, "tcc": 62, "td": 46, "teach": 18, "team": 0, "tear": 118, "tech": 41, "technic": [2, 27, 52, 62, 112, 118], "techniqu": [6, 21, 48, 52], "technologi": 112, "tediou": 34, "tell": [5, 8, 18, 32, 37, 42, 44, 52, 61], "temp": 5, "tempdir": 61, "temporari": [27, 61], "temporarili": 27, "tempt": 27, "tend": [7, 8, 10, 27, 106], "tendenc": 43, "tenenbaum": 112, "tensadd": 110, "tension": 39, "tensmul": 110, "tensor": [3, 14, 31, 33, 41, 46, 57, 59, 60, 61, 77, 102, 104, 105, 106, 110], "tensor_can": 22, "tensor_funct": [32, 104], "tensor_gen": 22, "tensorcontract": 57, "tensorproduct": [57, 104], "teo": 112, "term": [5, 6, 7, 8, 10, 11, 17, 27, 29, 30, 32, 33, 34, 36, 41, 43, 45, 46, 47, 48, 49, 52, 53, 54, 59, 60, 66, 73, 74, 75, 76, 77, 84, 102, 103, 104, 106, 107, 109, 110, 114, 115, 117, 118, 122], "termin": [7, 17, 27, 30, 43, 46, 74, 75, 89], "terminal_str": 46, "terminal_width": 46, "terms_gcd": [27, 45, 107], "termwis": 45, "ternari": [46, 49, 106], "terrab": 52, "terribl": 17, "test": [2, 4, 8, 10, 11, 14, 17, 18, 27, 28, 33, 38, 41, 42, 43, 47, 49, 52, 53, 55, 56, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 76, 81, 95, 97, 98, 99, 100, 101, 102, 104, 109, 110, 115], "test_arg": 110, "test_expr": 27, "test_formula": 8, "test_hyperexpand": 8, "test_issue_123": 2, "test_od": 52, "test_pd": 53, "test_piecewise_lambdifi": 109, "test_rsolve_bulk": 109, "test_sympyissue_123": 2, "testutil": [17, 23, 24], "tetrahedr": 19, "tetrahedron": [17, 19], "texmac": 80, "text": [0, 6, 17, 30, 43, 46, 49, 52, 112], "textbackend": 109, "textbook": 112, "textual": 121, "tfrac": [32, 52], "tg": 10, "th": [5, 8, 10, 17, 18, 24, 29, 30, 32, 41, 43, 45, 49, 52, 54, 57], "than": [6, 8, 10, 11, 13, 17, 18, 19, 25, 27, 29, 30, 31, 32, 34, 36, 38, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 61, 62, 64, 66, 70, 75, 77, 84, 98, 103, 108, 113, 115, 116, 119, 120], "thank": [72, 73, 74, 75, 103, 104, 109, 110], "thatsign": 10, "theano": [72, 105], "thei": [4, 5, 6, 7, 8, 10, 15, 17, 18, 24, 27, 29, 30, 32, 34, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 52, 53, 55, 57, 61, 62, 64, 66, 71, 76, 103, 104, 106, 108, 113, 114, 116, 117, 119, 122], "them": [2, 5, 6, 8, 10, 16, 17, 18, 25, 27, 28, 32, 36, 41, 43, 45, 46, 48, 49, 52, 55, 57, 62, 64, 66, 107, 109, 113, 114, 115, 122], "theme": 117, "themselv": [18, 24, 27, 43, 47, 64, 66], "theorem": [8, 9, 10, 11, 15, 32, 34, 43, 48, 49, 102], "theoret": [8, 112], "theori": [0, 3, 16, 17, 18, 24, 27, 29, 32, 33, 45, 47, 49, 64, 92, 104, 112, 117], "therefor": [5, 10, 22, 27, 32, 43, 45, 46, 52, 57], "thereof": 107, "thesi": [7, 17, 112], "theta": [6, 30, 32, 35, 41, 44, 46], "thi": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "thilinaatsympi": 49, "thing": [17, 18, 27, 33, 36, 41, 48, 52, 59, 66, 102, 108, 113, 114, 115, 119, 122], "think": [2, 4, 17, 27, 64, 115], "third": [8, 27, 32, 45, 52, 104, 112, 114], "thirdparti": 80, "thoma": [43, 112], "thorough": 49, "those": [5, 6, 10, 17, 18, 24, 25, 27, 28, 31, 36, 43, 45, 46, 48, 52, 53, 55, 64, 66, 97, 105, 106, 107], "though": [6, 8, 27, 33, 41, 43, 45, 48, 52, 53, 88, 114, 122], "thought": [11, 27, 52], "thousand": [5, 43], "thread": 95, "three": [6, 8, 17, 19, 27, 28, 32, 36, 45, 46, 48, 49, 54, 72, 102, 104, 113, 115], "threshold": 43, "through": [6, 8, 10, 17, 18, 20, 25, 27, 29, 32, 46, 47, 48, 52, 57, 61, 66, 83, 96, 104, 106, 108, 118], "throughout": [6, 36], "throw": [49, 67, 73, 109], "thrown": 46, "thu": [6, 8, 10, 13, 17, 18, 27, 30, 32, 39, 43, 46, 48, 62, 94, 98, 118], "thumb": 36, "ti": [16, 18, 27, 66], "ticket": 4, "tidi": [41, 98], "tie": [27, 66], "tight": 5, "tild": 27, "till": [27, 52], "tim": 66, "time": [7, 8, 10, 17, 18, 22, 27, 32, 41, 43, 46, 48, 52, 66, 75, 95, 96, 107, 110, 114, 119], "timeout": [76, 110], "tini": 27, "tip": [52, 53], "titu": 49, "to_cnf": 36, "to_dens": 74, "to_diof": 72, "to_dnf": [36, 105], "to_exact": 45, "to_expr": [28, 72], "to_field": 45, "to_fil": 62, "to_man_exp": 27, "to_matrix": 107, "to_mpi": 76, "to_nnf": 36, "to_number_field": 72, "to_pruf": 20, "to_r": 45, "to_rat": 28, "to_tre": 20, "todo": [41, 46, 60, 77], "togeth": [5, 17, 27, 28, 41, 43, 45, 46, 48, 52, 54, 66, 102], "toggl": 43, "token": [44, 109], "tol": [28, 45, 70], "toler": [5, 27, 28, 45, 48], "tolist": [37, 42, 57], "tomatrix": 57, "toml": 76, "too": [6, 17, 18, 27, 30, 43, 48, 49, 52, 61, 72, 73, 75, 76, 122], "tool": [9, 17, 33, 41, 45, 51, 61, 66, 108], "top": [8, 27, 46, 52, 62, 104, 109, 110], "topic": 5, "toplevel": 34, "topmost": 64, "topolog": [27, 102], "topologi": 6, "topological_sort": 77, "toronto": 43, "tort": 0, "total": [10, 16, 27, 37, 45, 48, 52, 59, 106, 122], "total_degre": [10, 45], "totient": [43, 110], "tough": 52, "tournier": 112, "toward": [27, 32], "tower": 72, "tp63": [52, 112], "tr": [17, 46, 104], "tra76": [10, 112], "trace": [22, 38, 41, 46, 57, 59, 104, 109, 110], "traceback": [5, 10, 18, 27, 34, 37, 39, 41, 42, 45, 59, 66, 109, 114, 119], "track": [5, 17, 27, 32, 72, 73, 114], "tradit": 104, "tradition": 32, "trafo": 25, "trager": [10, 34, 102, 112], "trail": [18, 43, 45, 69], "transact": 112, "transcend": [32, 104], "transcendent": [27, 32, 34, 55, 84, 105, 109], "transcendental_numb": 27, "transfer": 2, "transform": [5, 9, 11, 22, 25, 27, 29, 32, 33, 35, 38, 41, 45, 47, 48, 49, 52, 53, 54, 60, 62, 67, 96, 102, 104, 106, 109, 110, 117, 119, 122], "transform_vari": 34, "transformationset": [104, 106], "transit": 17, "transitivity_degre": 17, "translat": [17, 27, 46, 52, 61, 62, 66, 67, 82, 105], "transliter": 0, "transpar": [6, 46], "transpos": [27, 31, 37, 38, 39, 41, 49, 57, 104, 110, 119], "transposit": [15, 18, 30, 38, 41], "transposition_": 18, "transvers": [17, 22, 24], "transversals_onli": 24, "trapexoid": 34, "trapezoid": 34, "traub": [10, 112], "travers": [27, 33, 43, 45, 64, 66], "traversaltool": 48, "traverso": 112, "travi": [52, 73], "treat": [8, 10, 24, 25, 27, 41, 44, 45, 48, 59, 61, 64, 104, 113], "treatment": [6, 45, 106], "tree": [3, 11, 17, 20, 27, 42, 45, 46, 48, 59, 64, 66, 72, 105, 106, 116], "tree_repr": 20, "tri": [27, 32, 34, 46, 48, 52, 53, 90], "trial": [10, 27, 43, 52, 110], "trial_divis": 10, "trialset": 52, "triangl": [29, 41, 43, 104], "triangular": [41, 102], "trick": [8, 22], "trig": [27, 34, 45, 46, 48], "trigamma": 32, "trigamma_funct": 32, "trigammafunct": 32, "trigger": [18, 75], "trigintegr": 34, "trigonometr": [27, 31, 33, 34, 52, 76, 87, 98, 100, 104, 108, 110, 115, 116], "trigonometri": [34, 82], "trigonometric_and_hyperbolic_solut": 45, "trigonometric_funct": 30, "trigonometric_integr": 32, "trigonometryangl": 30, "trigsimp": [27, 41, 76, 105, 122], "trigsimp_groebn": [48, 109], "trim": [18, 83, 102], "tripl": [41, 69], "trivial": [8, 10, 11, 17, 22, 25, 27, 36, 43, 49, 52, 59, 75, 109, 110], "trotter": 18, "true": [3, 5, 6, 8, 10, 11, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 66, 67, 70, 73, 76, 77, 84, 87, 89, 97, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 117, 119, 120, 122, 123], "truli": [27, 110], "trunc": 45, "trunc_ground": 10, "truncat": [18, 73], "truth": [27, 36, 41, 105, 106], "try": [2, 5, 6, 8, 11, 25, 27, 32, 34, 37, 39, 43, 46, 47, 48, 49, 52, 55, 56, 75, 76, 96, 101, 109, 110, 115, 121], "trysolv": 52, "tsolv": 99, "ttf": 4, "tune": [5, 46], "tupl": [6, 7, 10, 17, 18, 25, 30, 33, 34, 37, 41, 43, 44, 46, 48, 49, 52, 53, 54, 55, 57, 60, 61, 62, 66, 67, 76, 77, 82, 102, 110, 114, 118, 119, 121], "tuple_count": 27, "turn": [8, 27, 30, 35, 39, 46, 47, 48, 49, 52, 66, 75, 106, 117], "tutori": [2, 3, 4, 46, 50, 52, 76, 117, 123], "tweak": 46, "twice": [5, 27, 43, 46, 64, 114], "twin": 43, "twist": 6, "two": [5, 6, 7, 8, 10, 13, 16, 17, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 57, 60, 64, 66, 72, 75, 76, 103, 104, 106, 108, 110, 114, 115, 118, 119, 121, 122], "twodic": 103, "twofold": 8, "type": [2, 5, 8, 17, 22, 25, 27, 28, 30, 31, 34, 36, 38, 41, 43, 44, 46, 48, 49, 52, 59, 60, 61, 62, 66, 67, 72, 74, 75, 77, 102, 103, 104, 106, 107, 109, 110, 115, 117, 122], "typeerror": [18, 27, 37, 39, 42, 72, 73, 74, 75, 76, 77, 106, 107, 109, 110], "typefunct": 32, "typic": [6, 8, 10, 22, 32, 43, 62, 106, 122], "typo": [2, 8, 73, 110], "u": [2, 6, 8, 10, 17, 22, 25, 27, 34, 37, 41, 42, 43, 46, 47, 48, 49, 52, 53, 54, 60, 76, 102, 103, 112, 115, 117, 118, 119], "u1": 17, "u2": 17, "u_": 10, "u_1": 52, "u_2": 52, "u_i": 43, "u_n": [32, 34], "ub": 64, "ubresult": 112, "uchberg": 112, "uci": 43, "uclid": 112, "uf": 10, "ufunc": [61, 108, 113], "ufuncifi": [9, 61, 108], "ufuncifycodewrapp": 61, "ui": [34, 53], "uk": [49, 112], "ull": 112, "ultipl": 112, "ultivari": 112, "um": 10, "umber": 112, "ummat": 112, "un": [8, 109], "unabl": [5, 76, 110, 114], "unaffect": 66, "unambigu": [27, 52], "unari": [83, 110], "unbound": [27, 60, 108], "unboundlocalvari": 109, "unbranch": [6, 32], "unbranched_argu": 30, "unbundl": 109, "uncertainti": [5, 104], "unchang": [17, 18, 27, 34, 41, 45, 48, 113], "unclear": 117, "uncoupl": 104, "unction": 112, "undecor": 66, "undefin": [8, 27, 30, 31, 32, 44, 72, 76, 123], "undefinedfunct": [27, 46, 61, 66, 67], "under": [6, 8, 17, 22, 24, 32, 34, 41, 45, 46, 47, 49, 52, 55, 99, 103], "underdetermin": [41, 55, 105], "undergradu": 112, "underli": [18, 24, 27, 37, 54], "underscor": [25, 27, 52], "understand": [6, 8, 27, 49, 121], "understood": 32, "undertermin": 45, "undesir": [8, 27, 109], "undetermin": [27, 45, 52, 54, 76, 102, 110], "undetermined_coeffici": 52, "undo": 8, "undocu": [9, 109], "unevalu": [11, 25, 27, 34, 43, 45, 47, 52, 75, 76, 82, 84, 102, 103, 108, 109, 110, 114, 117, 123], "unevaluat": 52, "unevlu": 76, "unexpect": [27, 110], "unflatten": 66, "unfortun": [5, 27, 49], "unhind": 52, "uni": [43, 66], "unicod": [1, 4, 35, 41, 46, 76, 83, 89, 91, 96, 109, 117, 121], "unicode_identifi": 35, "unif": [10, 106], "unifi": [10, 27, 28, 45, 84, 97, 106, 109], "unificationfailederror": 10, "unify_with_symbol": 72, "uninterest": 10, "union": [16, 17, 24, 47, 103, 109, 110], "union_": 47, "union_find": 17, "uniq": 66, "uniqu": [10, 20, 22, 27, 32, 34, 41, 48, 49, 59, 62, 66, 120], "unit": [4, 8, 27, 28, 43, 45, 47, 49, 74, 104, 108, 112], "unitari": 34, "uniti": [6, 30, 32, 76, 110], "unitsystem": 108, "univar": [10, 28], "univari": [10, 11, 25, 27, 28, 30, 34, 45, 49, 73, 74, 95, 120], "univariatepolynomialerror": 10, "univarpolyel": [10, 74], "univarpolynomialr": [28, 74], "univers": [47, 49, 54, 108, 110, 115], "universal_set": 108, "universalset": [73, 76, 104, 110], "unknown": [27, 52, 53, 54, 83, 106, 110, 113, 123], "unless": [0, 2, 3, 10, 17, 27, 32, 41, 42, 45, 46, 52, 64, 66, 67, 107, 109, 114, 122], "unlik": [10, 27, 43, 49, 52, 64, 117, 118, 119], "unlucki": [10, 72], "unluckyleadingcoefficienterror": 10, "unmodifi": 48, "unmov": 18, "unnam": 62, "unnecessari": [5, 45, 75], "unnecessary_permut": 34, "unord": [27, 43, 66], "unorder": 72, "unpack": [67, 90], "unpredict": 64, "unprejud": 27, "unqualifi": 2, "unrank": [12, 16, 17, 18, 20], "unrank_binari": 21, "unrank_grai": 21, "unrank_lex": 18, "unrank_nonlex": 18, "unrank_trotterjohnson": 18, "unread": 45, "unrel": 10, "unrestrict": [16, 43, 103], "unsat": 36, "unsatisfi": 36, "unset": 48, "unsign": [29, 48], "unsort": 27, "unspecifi": [27, 72], "unsplitt": 44, "unstrip": 77, "unsuccess": [17, 24], "unsuit": 10, "unsupport": 109, "unsurmount": 62, "until": [10, 18, 20, 27, 43, 52, 108], "untouch": 27, "unus": [72, 74, 76], "unwant": [27, 67], "up": [4, 5, 6, 8, 17, 18, 20, 27, 28, 32, 34, 35, 36, 41, 43, 45, 46, 48, 49, 52, 53, 54, 61, 62, 64, 76, 83, 98, 101, 104, 106, 109, 111, 119], "updat": [2, 4, 10, 27, 46, 80, 92, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110], "upgrad": 99, "upload": 43, "upon": [43, 52, 60, 61, 110, 122], "upper": [8, 10, 25, 32, 41, 49, 60], "upper_incomplete_gamma_funct": 32, "upper_triangular_solv": 41, "uppercas": 8, "uppergamma": [29, 32], "upsilon": 46, "ur": 49, "url": [2, 112], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 80, 83, 85, 87, 88, 91, 94, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "usa": 112, "usabl": 46, "usag": [2, 3, 8, 10, 30, 41, 46, 52, 53, 57, 64, 68, 76, 104, 108], "use2to3": 104, "use_imp": 67, "use_model": 36, "use_pm1": [27, 43], "use_rho": [27, 43], "use_tri": [27, 43], "use_unicod": 110, "usefulli": 28, "user": [5, 6, 17, 27, 38, 44, 45, 46, 48, 50, 61, 62, 64, 67, 71, 83, 106, 113, 122], "user_funct": [46, 73], "usr": 101, "ussr": 112, "usual": [6, 8, 10, 17, 25, 27, 34, 41, 46, 52, 57, 60, 62, 64, 66, 67, 73, 107, 108, 111, 117, 122], "util": [3, 5, 14, 16, 17, 26, 29, 33, 40, 46, 48, 49, 50, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 102, 103, 104, 107, 108], "utm": 43, "uvar": 34, "ux": 53, "uxi": 53, "uxt": 53, "u\u2081": 52, "u\u2082": 52, "v": [1, 5, 6, 8, 10, 11, 22, 25, 27, 36, 37, 41, 42, 43, 48, 49, 52, 54, 76, 77, 109, 112], "v0": 108, "v1": [41, 75], "v2": 41, "v3": 41, "v5_2": 27, "vacuou": 41, "val": 67, "val1": 72, "val2": 72, "valid": [19, 25, 27, 29, 41, 43, 48, 49, 52, 104, 109, 110, 122], "validrelationaloper": 27, "valu": [6, 10, 11, 12, 16, 17, 18, 22, 25, 26, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 62, 63, 66, 67, 73, 75, 76, 103, 106, 109, 110, 113, 121, 122], "valuat": 112, "valueerror": [27, 34, 41, 45, 66, 75, 110, 119], "van": [42, 112], "vanish": [10, 41, 45, 52], "vanston": 112, "var": [11, 25, 34, 41, 46, 48, 49, 81, 92, 96, 97, 102, 104, 109], "var1": 72, "var2": 72, "var_sub1__sup_sub2": 46, "var_t": 49, "varepsilon": 52, "vari": [7, 27], "variabl": [5, 6, 7, 10, 11, 21, 25, 27, 32, 34, 36, 41, 44, 45, 46, 48, 49, 52, 53, 55, 62, 64, 66, 72, 73, 75, 76, 83, 96, 99, 102, 104, 105, 106, 108, 109, 110, 113, 114, 117, 120, 122], "variant": [10, 52], "variat": [18, 27, 52, 76], "variation_of_paramet": 52, "varieti": [18, 27, 45, 104, 108], "variou": [6, 8, 10, 12, 17, 27, 28, 29, 34, 36, 45, 49, 52, 53, 62, 71, 76, 102, 103, 104, 105, 120, 122], "varlist": 41, "varphi": [5, 32, 52], "vast": [34, 45, 100], "vastli": 98, "vdiff": 27, "vec": [41, 99], "vech": [41, 99], "vector": [5, 8, 12, 17, 18, 32, 41, 60, 61, 76, 85, 103, 104, 106, 107, 108, 110, 113, 119], "vectori": 41, "vee": 6, "vega": 17, "verb": 102, "verbos": [2, 27, 43, 61, 101], "veri": [5, 6, 8, 10, 22, 27, 29, 34, 41, 43, 46, 48, 49, 52, 55, 56, 61, 62, 67, 76, 88, 109, 110, 118, 122], "verifi": [4, 10, 23, 52, 57], "verify_derivative_numer": 70, "verify_numer": 70, "verlag": 112, "versa": [34, 43, 110], "versatil": 6, "version": [1, 3, 10, 17, 24, 27, 34, 36, 37, 39, 41, 42, 46, 48, 54, 57, 62, 64, 66, 71, 72, 76, 87, 88, 101, 103, 104, 105, 106, 107, 110, 111, 118], "vertex": [12, 20], "vertic": [10, 12, 19, 20, 41, 46, 99], "vfield": 74, "vg": 10, "vhm02": [10, 112], "via": [2, 6, 10, 17, 27, 29, 32, 34, 36, 43, 45, 60, 62, 73, 87, 103, 104, 108, 110, 120], "vice": [34, 43, 110], "vicki": 32, "viet": [45, 102], "view": [27, 52, 62, 64, 67, 80], "viewer": [105, 106], "viewpoint": 106, "vigener": 106, "viktor": 53, "violat": 48, "virtual": [27, 116], "visibl": 6, "visit": [12, 17, 27, 29, 66], "visitor": 64, "vistor": 64, "visual": [27, 43, 48, 101, 105], "vital": 8, "vladimir": 103, "vline": 46, "vlist": 41, "vm": 10, "vobj": 46, "void": 62, "vol": [12, 18, 32, 41, 64, 103], "volker": 112, "volum": [32, 41, 49, 52, 64, 112], "vpad": 41, "vr": 49, "vring": 74, "vsin": 27, "vstack": [41, 73], "vx": 2, "w": [2, 6, 7, 8, 10, 12, 27, 30, 32, 34, 41, 45, 47, 48, 49, 52, 53, 66, 67, 69, 72, 73, 106, 109, 112], "w1": 48, "w3": 46, "w_0": 49, "w_i": [34, 45, 52], "w_k": 30, "wa": [0, 2, 8, 10, 16, 17, 18, 20, 27, 37, 43, 44, 45, 46, 48, 54, 63, 66, 72, 73, 74, 78, 79, 80, 83, 84, 85, 87, 88, 91, 92, 94, 95, 96, 102, 103, 104, 106, 107, 108, 109, 117], "wai": [0, 6, 8, 12, 16, 17, 18, 19, 22, 27, 28, 29, 41, 43, 45, 46, 48, 49, 52, 53, 60, 62, 64, 66, 67, 103, 106, 108, 113, 114, 117, 118, 120, 122], "wait": 11, "walk": [5, 8, 12, 116], "walker": 52, "wan81": [43, 112], "wang": [10, 102, 112], "wanner": 112, "want": [2, 4, 6, 8, 12, 27, 31, 34, 41, 43, 45, 46, 47, 48, 49, 52, 53, 62, 64, 66, 67, 102, 103, 113, 114, 117, 119, 120, 121, 122], "warn": [27, 46, 52, 55, 56, 62, 66, 99, 108, 120], "warranti": 0, "washington": 43, "wast": 66, "watch": 18, "watson": 48, "wave": 102, "we": [2, 5, 6, 7, 8, 10, 11, 12, 16, 17, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 41, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 59, 61, 62, 64, 67, 70, 83, 85, 96, 103, 108, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "weak": [10, 106], "weakref": 109, "web": [17, 43, 49, 111], "wedg": 6, "weight": [32, 34, 48, 105], "weird": 75, "weispfen": 112, "well": [5, 8, 10, 12, 27, 29, 30, 31, 32, 39, 41, 48, 52, 61, 83, 104, 106, 112], "welleslei": 112, "wendi": 18, "were": [2, 3, 6, 18, 20, 25, 27, 37, 41, 42, 43, 44, 45, 48, 54, 66, 67, 72, 73, 74, 75, 76, 77, 80, 83, 88, 93, 94, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 117, 123], "weslei": [12, 18, 43, 112], "wester": 102, "western": 10, "what": [6, 8, 10, 18, 20, 25, 27, 28, 29, 30, 41, 43, 48, 49, 52, 60, 62, 66, 70, 75, 104, 115, 116, 118, 122], "whatev": [27, 48, 52, 53, 104], "wheeler": 112, "when": [1, 2, 5, 8, 10, 12, 17, 18, 19, 24, 25, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 55, 59, 60, 61, 62, 66, 67, 70, 72, 73, 74, 75, 76, 77, 83, 89, 101, 103, 105, 106, 109, 110, 113, 114, 115, 117, 118, 120, 121, 122, 123], "when_multipl": 109, "whenc": 8, "whenev": [6, 8, 24, 46, 114], "where": [5, 6, 7, 8, 10, 16, 17, 18, 20, 22, 24, 25, 27, 29, 30, 32, 34, 36, 38, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 59, 62, 66, 83, 90, 101, 106, 109, 110, 113, 117, 119, 122], "wherea": [6, 10, 36, 46, 66], "wherev": 48, "whet": 117, "whether": [0, 10, 17, 27, 32, 34, 36, 41, 42, 43, 46, 47, 49, 52, 56, 57, 62, 66, 70, 73, 104, 106], "which": [6, 7, 8, 10, 16, 17, 18, 19, 22, 24, 25, 27, 29, 30, 32, 34, 36, 39, 41, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 59, 61, 62, 63, 64, 66, 67, 73, 75, 76, 83, 88, 102, 103, 104, 105, 106, 108, 110, 114, 115, 116, 117, 118, 120, 121, 122], "while": [5, 18, 19, 22, 25, 27, 29, 35, 36, 41, 42, 43, 52, 62, 64, 66, 73, 75, 77, 103, 104, 106, 109, 110], "whitespac": 27, "whittak": 34, "whittl": 122, "who": [10, 46, 116], "whole": [2, 8, 27, 32, 45, 47, 52, 75], "whose": [12, 16, 18, 25, 27, 37, 42, 43, 45, 48, 52, 53, 64], "why": [8, 66, 109, 110, 122], "wick": [100, 102], "wide": [27, 35, 41, 45, 46, 90], "wider": [46, 108], "width": [46, 80], "wierdli": 77, "wigner": [102, 103], "wignerd": 103, "wiki": [11, 15, 16, 17, 18, 25, 27, 29, 30, 32, 34, 41, 43, 45, 47, 49, 52, 62, 94], "wikibook": 34, "wikipedia": [11, 15, 16, 17, 18, 25, 27, 29, 30, 32, 34, 41, 43, 45, 47, 52, 62, 109], "wild": [48, 66, 78, 83, 96], "wildcard": [27, 35, 48, 117], "wildfunct": 78, "wilf": [12, 112], "william": 112, "willing": 2, "window": 110, "wisdom": 104, "wise": [5, 30, 42, 61], "wish": [5, 6, 27, 43, 64, 106, 114], "wit": 43, "within": [27, 36, 38, 41, 43, 47, 52, 61, 66, 75], "without": [0, 5, 6, 8, 10, 27, 34, 38, 41, 45, 46, 48, 49, 52, 53, 56, 60, 62, 66, 76, 84, 97, 99, 102, 103, 104, 105], "wittkopf": 112, "wlog": [8, 10], "wn_m": 41, "wolfram": [19, 20, 27, 29, 30, 32, 43, 46, 47, 48, 49], "wolphramalpha": 52, "won": [48, 52, 66, 102], "word": [25, 27, 30, 36, 48, 49, 52, 62, 108], "wordpress": 49, "work": [2, 4, 5, 6, 7, 8, 10, 19, 27, 28, 34, 36, 38, 41, 43, 44, 45, 46, 48, 49, 52, 55, 61, 62, 64, 66, 67, 71, 73, 75, 77, 80, 82, 88, 91, 96, 97, 98, 102, 103, 104, 106, 109, 110, 117, 120, 122], "workaround": 67, "workflow": 62, "world": 25, "worri": 27, "wors": [2, 36], "worst": [43, 52], "worth": 2, "worthwhil": 5, "would": [4, 5, 6, 8, 16, 18, 27, 31, 41, 43, 44, 46, 48, 49, 52, 53, 54, 59, 60, 62, 64, 66, 67, 101, 106, 108, 110, 114, 117, 121, 122, 123], "wouldn": 41, "wrap": [1, 16, 27, 30, 35, 46, 60, 61, 104, 108, 109, 110, 115], "wrap_float_liter": 35, "wrap_lin": [5, 34, 41, 46, 52], "wrapper": [10, 18, 27, 32, 34, 52, 61, 102], "wrench": 32, "wright": 112, "write": [6, 8, 10, 16, 27, 34, 38, 46, 49, 52, 60, 61, 62, 103, 106, 118], "written": [0, 6, 7, 8, 15, 17, 18, 22, 27, 29, 32, 43, 45, 48, 49, 52, 62, 80, 86, 106], "wrong": [17, 27, 41, 72, 73, 74, 75, 76, 77, 105, 109, 110], "wrongli": [73, 109], "wronskian": [41, 52, 73], "wrote": 117, "wrt": [27, 41, 45, 54, 55], "www": [17, 18, 32, 41, 43, 46, 48, 49, 52, 66, 112], "x": [3, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 22, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 70, 72, 73, 74, 75, 76, 77, 82, 83, 84, 87, 88, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "x0": [11, 27, 43, 48, 52, 66, 102, 106, 114], "x01": 27, "x02": 27, "x1": [10, 27, 29, 48, 52, 66, 106], "x11": 27, "x12": 27, "x2": [10, 27, 29, 52], "x3": [27, 29, 52], "x4": [27, 29], "x5": [27, 29], "x50": 27, "x51": 27, "x6": 27, "x7": 27, "x8": 27, "x9": 27, "x_": [10, 29, 45, 49, 52, 57, 106], "x_0": [10, 11, 49, 52], "x_1": [10, 29, 41, 45, 49], "x_2": [29, 45, 49], "x_i": [10, 32, 34, 41, 46], "x_j": 45, "x_n": [10, 41, 45, 49], "xa": 27, "xb": 27, "xc": 27, "xdist": 110, "xfail": 52, "xfield": 110, "xi": [6, 46, 52, 53], "xlim": 27, "xml": 48, "xobj": 46, "xor": [36, 44, 73, 102], "xpage": 43, "xpath": 48, "xreplac": [27, 41, 42], "xring": 110, "xsym": 46, "xt": 32, "xtension": 112, "xx": 41, "xxx": [27, 34, 41], "xy": [41, 42, 122], "xyz": [44, 102, 103], "x\u2080": [52, 122], "x\u2081": 122, "y": [2, 3, 5, 6, 7, 10, 17, 18, 25, 27, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 72, 73, 76, 83, 95, 96, 99, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123], "y0": [27, 52], "y1": [10, 27], "y2": [10, 27], "y3": 27, "y4": 27, "y_": [6, 32], "y_0": [49, 52], "y_1": 49, "y_2": 49, "y_i": 52, "y_n": [32, 49], "yao": [10, 112], "ye": [36, 52], "yet": [3, 5, 27, 29, 31, 33, 34, 52, 71, 77, 103, 105, 110, 113, 117], "yield": [6, 7, 10, 17, 27, 32, 43, 45, 48, 49, 64, 66, 76, 109, 121], "yiu": 112, "ylm": 92, "ymbolic": 112, "ymposium": 112, "yn": 32, "ynm": 32, "ynm_c": 32, "ynt89": [45, 112], "yokoyama": 112, "yorgei": 64, "york": [32, 112], "you": [1, 2, 3, 4, 5, 6, 10, 18, 25, 27, 30, 32, 33, 34, 36, 38, 39, 41, 43, 45, 46, 47, 48, 49, 52, 53, 59, 60, 61, 62, 66, 67, 70, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "your": [2, 4, 27, 34, 41, 46, 48, 52, 66, 70, 117], "your_hint": 52, "ypergeometr": 112, "ystem": 112, "yu": 112, "yudel": 112, "yuvalf": 43, "yx": 17, "yy": 52, "y\u2080": 52, "z": [2, 3, 6, 8, 10, 11, 17, 18, 25, 27, 28, 29, 30, 32, 34, 36, 38, 41, 43, 44, 45, 48, 49, 52, 53, 55, 57, 60, 61, 62, 66, 67, 70, 73, 76, 95, 96, 97, 102, 103, 106, 110, 112, 114, 117, 120, 122, 123], "z0": [11, 27], "z_": [10, 48], "z_0": [6, 11, 48], "z_1": [6, 52], "z_2": 52, "z_n": 32, "z_p": 10, "za": 48, "ze": 32, "zeilberg": 112, "zero": [5, 6, 7, 8, 10, 11, 17, 18, 22, 29, 30, 32, 34, 37, 38, 40, 41, 42, 43, 45, 47, 48, 49, 52, 53, 54, 55, 57, 66, 72, 73, 74, 75, 77, 96, 102, 106, 109, 112, 119], "zero_to_the_power_of_zero": 27, "zerodivisionerror": 110, "zeromatrix": 38, "zeronm": 102, "zeroth": 27, "zeta": [5, 29, 31, 46, 72, 110], "zeta_funct": [32, 77], "zg": 17, "zhou": 41, "zhuojun": 112, "zip": [43, 45, 64], "zip_row_op": [37, 42], "znm": 32, "zo42": 18, "zoo": [27, 29, 32, 48, 76, 87, 107, 109, 110], "zoom": 78, "zout": 10, "zt": [6, 32], "zz": [10, 27, 28, 34, 43, 45, 109, 119], "\u00e8": 112, "\u00f6": 112, "\u00f8": 112, "\u00fc": 112, "\u0161": 112, "\u01f9ow": 106, "\u03b3": [73, 114, 122], "\u03b7": [52, 53], "\u03b8": 35, "\u03be": [52, 53], "\u03c0": [5, 34, 114, 117, 122], "\u03c6": [5, 120], "\u0434\u0438\u043e\u0444\u0430\u043d\u0442": 0, "\u2124": [108, 120], "\u212f": [5, 34, 52, 53, 114, 117, 122, 123], "\u2148": [5, 113, 120, 122]}, "titles": ["About", "Command-Line Usage", "Development", "Diofant\u2019s documentation", "Installation", "Numerical evaluation", "Computing Integrals using Meijer G-Functions", "The Gruntz Algorithm", "Details on the Hypergeometric Function Expansion", "Internals", "Internals of the Polynomial Manipulation Module", "Calculus", "Gray Code", "Group constructors", "Combinatorics", "Named Groups", "Partitions", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete Mathematics", "Config", "Core", "Domains", "Combinatorial", "Elementary", "Mathematical Functions", "Special", "Reference", "Integrals", "Interactive", "Logic", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Sparse Matrices", "Number Theory", "Parsing", "Polynomials", "Printing", "Sets", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Recurrence Equations", "Algebraic equations", "Utilities for solving", "N-dim array", "Tensors", "Methods", "Indexed Objects", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "Randomised Testing", "Release Notes", "Diofant 0.10", "Diofant 0.11", "Diofant 0.12", "Diofant 0.13", "Diofant 0.14", "Diofant 0.15", "SymPy 0.5.0", "SymPy 0.5.1", "SymPy 0.5.10", "SymPy 0.5.11", "SymPy 0.5.12", "SymPy 0.5.13", "SymPy 0.5.14", "SymPy 0.5.15", "SymPy 0.5.2", "SymPy 0.5.3", "SymPy 0.5.4", "SymPy 0.5.5", "SymPy 0.5.6", "SymPy 0.5.7", "SymPy 0.5.8", "SymPy 0.5.9", "SymPy 0.6.0", "SymPy 0.6.1", "SymPy 0.6.2", "SymPy 0.6.3", "SymPy 0.6.4", "SymPy 0.6.5", "SymPy 0.6.6", "SymPy 0.6.7", "SymPy 0.7.0", "SymPy 0.7.1", "SymPy 0.7.2", "SymPy 0.7.3", "SymPy 0.7.4", "SymPy 0.7.5", "SymPy 0.7.6", "Diofant 0.8", "Diofant 0.9", "SymPy releases", "Bibliography", "Basics", "Calculus", "Gotchas", "Tutorial", "Introduction", "Expression Trees", "Matrices", "Polynomials", "Printing", "Simplification", "Solvers"], "titleterms": {"": 3, "0": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "1": [6, 79, 95, 103], "10": [72, 80], "11": [73, 81], "12": [74, 82], "13": [75, 83], "14": [76, 84], "15": [77, 85], "1st_exact": 52, "1st_homogeneous_coeff_best": 52, "1st_homogeneous_coeff_subs_dep_div_indep": 52, "1st_homogeneous_coeff_subs_indep_div_dep": 52, "1st_linear": 52, "1st_power_seri": 52, "2": [6, 86, 96, 104], "2d": 121, "2nd_power_series_ordinari": 52, "2nd_power_series_regular": 52, "3": [87, 97, 105], "4": [88, 98, 106], "5": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 107], "6": [90, 94, 95, 96, 97, 98, 99, 100, 101, 108], "7": [91, 101, 102, 103, 104, 105, 106, 107, 108], "8": [92, 109], "9": [93, 110], "One": 27, "The": [6, 7, 8], "ab": 30, "abaco1_product": 52, "abaco1_simpl": 52, "abaco2_similar": 52, "abaco2_unique_unknown": 52, "about": 0, "abstract": 28, "accuraci": 5, "aco": 30, "acosh": 30, "acot": 30, "acoth": 30, "acsc": 30, "add": 27, "adjoint": 30, "advanc": 119, "airi": 32, "algebra": [10, 41, 45, 55, 119, 123], "algorithm": [7, 8, 10, 45], "allhint": 52, "almost_linear": 52, "an": 8, "api": [34, 61, 62], "appli": [6, 8], "arg": 30, "argand": 6, "around": 8, "arrai": 57, "asec": 30, "asin": 30, "asinh": 30, "assumpt": [27, 113], "atan": 30, "atan2": 30, "atanh": 30, "atomicexpr": 27, "autowrap": 61, "b": 32, "base": 120, "base_solution_linear": 49, "basi": 10, "basic": [27, 41, 45, 113], "bell": 29, "bernoulli": [29, 52], "bessel": 32, "besselsimp": 48, "beta": 32, "bibliographi": 112, "binomi": 29, "bivari": 52, "block": 38, "boolean": 36, "branch": 6, "break": [72, 73, 74, 75, 76, 77, 102, 104, 105, 106, 107, 108, 109, 110], "cach": 27, "cacheit": 27, "calculu": [11, 114], "canonic": 22, "catalan": [27, 29], "ccodeprint": 46, "ceil": 30, "chang": [72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 106, 107, 108, 109, 110], "chebyshev": 32, "checkinfsol": 52, "checkodesol": 52, "checkpdesol": 53, "chi": 52, "class": [25, 37, 39, 41, 42, 46, 48, 57], "classic": 10, "classify_diop": 49, "classify_od": 52, "classify_pd": 53, "close": [72, 73, 74, 75, 76, 77, 109, 110], "co": 30, "code": [2, 12, 46], "codegen": 62, "codeprint": 46, "collect": 48, "collect_const": 48, "collect_sqrt": 48, "combinator": 14, "combinatori": [29, 48], "combsimp": 48, "command": 1, "common": 48, "compat": [27, 72, 73, 74, 75, 76, 77, 102, 104, 105, 106, 107, 108, 109, 110], "complex": 30, "complexinfin": 27, "compound": 47, "comput": 6, "concret": [25, 28], "condit": 6, "config": 26, "confluenc": 8, "conjug": 30, "constant_renumb": 52, "constantsimp": 52, "constructor": [13, 45], "contain": [27, 56], "content": [14, 31, 40, 50, 58, 65, 116], "contract": 57, "contribut": 2, "converg": 6, "core": [27, 38], "cornacchia": 49, "cosh": 30, "cot": 30, "coth": 30, "count_op": 27, "creat": 41, "csc": 30, "csch": 30, "cse": [48, 122], "decomposit": 45, "decor": 63, "decrement": 8, "denest": 48, "dens": 37, "deriv": [27, 57, 114], "descent": 49, "detail": [8, 61, 62], "develop": [2, 72, 73, 74, 75, 76, 77, 109, 110], "dict": 27, "diff": 27, "differenti": 123, "dim": 57, "diofant": [1, 3, 4, 30, 72, 73, 74, 75, 76, 77, 109, 110], "diop_bf_dn": 49, "diop_dn": 49, "diop_general_pythagorean": 49, "diop_general_sum_of_even_pow": 49, "diop_general_sum_of_squar": 49, "diop_linear": 49, "diop_quadrat": 49, "diop_solv": 49, "diop_ternary_quadrat": 49, "diop_ternary_quadratic_norm": 49, "diophantin": 49, "diracdelta": 32, "distribut": 10, "divis": [49, 120], "docstr": 66, "document": 3, "domain": [28, 45], "dot": 121, "dotprint": 46, "doubl": 29, "dsolv": 52, "dummi": 27, "element": 28, "elementari": [30, 47], "elimin": 48, "ellipt": 32, "encod": 45, "end": 8, "entri": 41, "enum": 64, "epath": 48, "eq": 27, "equal": [27, 115], "equat": [49, 54, 55, 123], "equival": [36, 49], "error": [5, 32], "euler": 29, "eulergamma": 27, "evalf": 27, "evalu": [5, 27], "exampl": [8, 34], "except": 41, "exist": 6, "exp1": 27, "exp_polar": 30, "expand": 27, "expand_complex": 27, "expand_func": 27, "expand_log": 27, "expand_mul": 27, "expand_multinomi": 27, "expand_power_bas": 27, "expand_power_exp": 27, "expand_trig": 27, "expans": [8, 48, 114], "exponenti": [30, 32], "expr": 27, "exprcondpair": 30, "express": [36, 38, 118], "exprtool": 27, "extend": 8, "extra": 45, "factor": [10, 120], "factor_term": 27, "factori": 29, "factorial2": 29, "fallingfactori": 29, "featur": [72, 73, 74, 75, 76, 77, 108, 109, 110], "feedback": 4, "fibonacci": 29, "field": [10, 45], "find": 45, "find_dn": 49, "finit": 8, "float": [5, 27], "floor": 30, "form": 36, "formal": 45, "formula": [6, 8], "fortran": 46, "fraction": [45, 48], "free": 120, "fresnel": 32, "from": 4, "fu": 48, "function": [6, 8, 25, 27, 30, 31, 32, 36, 41, 44, 45, 46, 48, 49, 52, 53, 57, 115, 122], "function_sum": 52, "functionclass": 27, "further": 10, "futrig": 48, "g": [6, 8], "gamma": 32, "gaussian_reduc": 49, "gcd": [10, 120], "gcd_term": 27, "ge": 27, "gegenbau": 32, "gener": 18, "goldenratio": 27, "gotcha": 115, "grai": 12, "greaterthan": 27, "group": [13, 15, 17], "gruntz": 7, "gr\u00f6bner": [10, 120], "gt": 27, "half": 27, "handl": 5, "harmon": [29, 32], "heavisid": 32, "helper": 46, "hermit": 32, "heurist": [10, 52], "hint": [52, 53], "holzer": 49, "homogeneous_ord": 52, "how": 6, "hyperbol": 30, "hyperbolicfunct": 30, "hyperexpand": 48, "hypergeometr": [8, 25, 32, 48], "hypersimilar": 48, "hypersimp": 48, "i": 6, "identityfunct": 30, "im": 30, "imaginaryunit": 27, "immut": 39, "immutablematrix": [37, 39], "immutablesparsematrix": 42, "implement": [6, 8, 28, 46, 61, 62], "increment": 8, "index": [60, 119], "indic": 8, "inequ": 51, "infer": 36, "infin": 27, "infinitesim": 52, "inform": [52, 53], "instal": 4, "integ": [27, 30], "integer_digit": 27, "integr": [5, 6, 32, 34, 114], "interact": 35, "intern": [9, 10, 34, 49], "introduct": [36, 117], "invers": [6, 30], "issu": [2, 72, 73, 74, 75, 76, 77, 109, 110], "iter": 66, "jacobi": 32, "laguerr": 32, "lambda": 27, "lambdaprint": 46, "lambdifi": 67, "lambertw": 30, "laplac": 6, "latex": 121, "latexprint": 46, "lcm": 120, "ldescent": 49, "le": 27, "legendr": 32, "lessthan": 27, "licens": 0, "lie": 52, "lie_group": 52, "limit": 114, "line": 1, "linear": [41, 52], "linear_coeffici": 52, "liouvil": 52, "logarithm": [32, 122], "logcombin": 48, "logic": 36, "lookup": 6, "loos": 8, "lt": 27, "luca": 29, "m": 1, "major": [72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 106, 107, 109, 110], "manipul": [10, 41, 45], "mathemat": [25, 31], "mathematica": 46, "mathmlprint": 46, "matric": [37, 38, 39, 40, 41, 42, 119], "matrix": [37, 38, 41], "matrixbas": 41, "max": 30, "meijer": [6, 8], "mellin": 6, "memoiz": 68, "merge_solut": 49, "method": [53, 59, 119], "min": 30, "minor": [72, 73, 74, 75, 76, 77, 104, 105, 107, 108, 109, 110], "miscellan": [30, 69], "mod": 27, "mod_invers": 27, "modul": [10, 49, 52, 53, 61], "modular": 10, "monomi": 45, "move": 8, "mul": 27, "multidimension": 27, "n": [27, 57], "name": [15, 115], "nan": 27, "ne": 27, "negativeinfin": 27, "negativeon": 27, "new": [72, 73, 74, 75, 76, 77, 108, 109, 110], "nfloat": 27, "notat": 8, "note": 71, "nsimplifi": 48, "nth_linear_constant_coeff_homogen": 52, "nth_linear_constant_coeff_undetermined_coeffici": 52, "nth_linear_constant_coeff_variation_of_paramet": 52, "nthroot": 48, "number": [5, 6, 10, 27, 43, 45, 115], "numbersymbol": 27, "numer": [5, 34, 113], "numpi": 41, "object": 60, "od": 52, "odesimp": 52, "oper": [8, 41, 119], "opt_cs": 48, "order": [8, 45], "orthogon": [32, 45], "over": 10, "overview": 6, "paramet": 8, "parametrize_ternary_quadrat": 49, "pars": 44, "partial": 45, "partit": [16, 49, 66], "pde": 53, "pde_1st_linear_constant_coeff": 53, "pde_1st_linear_constant_coeff_homogen": 53, "pde_1st_linear_variable_coeff": 53, "pde_separ": 53, "pde_separate_add": 53, "pde_separate_mul": 53, "pdsolv": 53, "periodic_argu": 30, "permut": [17, 18], "pi": 27, "piecewis": 30, "plane": 6, "point": 5, "polar": 6, "polar_lift": 30, "poleerror": 27, "polyhedron": 19, "polynomi": [10, 32, 45, 55, 120], "posifi": 48, "powdenest": 48, "power": [27, 48, 122], "power_represent": 49, "powsimp": 48, "pqa": 49, "preced": 46, "precisionexhaust": 27, "pretti": [46, 121], "prettyprint": 46, "prime_as_sum_of_two_squar": 49, "principal_branch": 30, "print": [46, 121], "printer": [46, 121], "procedur": 2, "product": [57, 114], "prufer": 20, "python": 1, "pythonprint": 46, "rad_ration": 48, "radsimp": 48, "randomis": 70, "ration": [27, 45, 122], "ratsimp": 48, "re": 30, "real_root": 30, "rearrang": 119, "reconstruct": 49, "recurr": [54, 123], "reduct": 8, "refer": [25, 33, 34, 37, 38, 39, 41, 42, 44, 49, 61, 62], "rel": 27, "relat": [27, 32], "releas": [2, 71, 111], "remaind": 10, "report": 2, "repr": 121, "repres": 6, "reprprint": 46, "reshap": 119, "riccati_special_minus2": 52, "riemann": 32, "risingfactori": 29, "root": [30, 45, 48], "rosetta": 2, "roundfunct": 30, "routin": 62, "run": 4, "sec": 30, "sech": 30, "separ": 52, "separable_reduc": 52, "separatevar": 48, "sequenc": [10, 20], "seri": 114, "set": 47, "sign": 30, "simplif": [5, 36, 48, 122], "simplifi": [10, 48], "sin": 30, "singleton": [27, 47], "sinh": 30, "sol_simpl": 52, "solv": 56, "solver": [50, 51, 123], "sourc": 4, "space": 8, "spars": [10, 42], "special": [32, 45, 47, 119, 122], "spheric": 32, "spline": 32, "sqf_normal": 49, "sqrt": 30, "sqrtdenest": 48, "squar": [48, 120], "square_factor": 49, "stirl": 29, "stone": 2, "str": 121, "strictgreaterthan": 27, "strictlessthan": 27, "strprinter": 46, "structur": 49, "sub": 27, "subexpres": 48, "subfactori": 29, "subresult": 10, "subset": 21, "substitut": 113, "sum": [5, 114], "sum_of_four_squar": 49, "sum_of_squar": 49, "sum_of_three_squar": 49, "symbol": [27, 45], "sympi": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111], "sympifi": 27, "system": [52, 55], "system_of_odes_linear_2eq_order1_type3": 52, "system_of_odes_linear_2eq_order1_type4": 52, "system_of_odes_linear_2eq_order1_type5": 52, "system_of_odes_linear_2eq_order1_type6": 52, "system_of_odes_linear_2eq_order1_type7": 52, "system_of_odes_linear_2eq_order2_type1": 52, "system_of_odes_linear_2eq_order2_type11": 52, "system_of_odes_linear_2eq_order2_type2": 52, "system_of_odes_linear_2eq_order2_type3": 52, "system_of_odes_linear_2eq_order2_type5": 52, "system_of_odes_linear_2eq_order2_type6": 52, "system_of_odes_linear_2eq_order2_type7": 52, "system_of_odes_linear_2eq_order2_type8": 52, "system_of_odes_linear_2eq_order2_type9": 52, "system_of_odes_linear_3eq_order1_type4": 52, "system_of_odes_linear_neq_order1_type1": 52, "system_of_odes_nonlinear_2eq_order1_type1": 52, "system_of_odes_nonlinear_2eq_order1_type2": 52, "system_of_odes_nonlinear_2eq_order1_type3": 52, "system_of_odes_nonlinear_2eq_order1_type4": 52, "system_of_odes_nonlinear_2eq_order1_type5": 52, "system_of_odes_nonlinear_3eq_order1_type1": 52, "system_of_odes_nonlinear_3eq_order1_type2": 52, "tabl": [6, 8], "tan": 30, "tanh": 30, "tensor": [22, 32, 58], "term": 25, "test": [23, 36, 70], "theorem": 6, "theori": 43, "thi": 6, "tool": [10, 48], "transform": [6, 34, 44], "transformation_to_dn": 49, "transformation_to_norm": 49, "transpos": 30, "travers": 48, "tree": 118, "tree_cs": 48, "trigonometr": [30, 32, 48, 122], "trigsimp": 48, "tupl": [27, 45], "tutori": [49, 116], "type": 32, "ufuncifi": 5, "undocu": 10, "unequ": 27, "unrad": 48, "us": [6, 48], "usag": 1, "user": [49, 52, 53], "util": [23, 24, 41, 56, 65], "valid": 6, "var": 27, "vector": 27, "version": 2, "walk": 118, "when": 6, "wild": 27, "wildfunct": 27, "zero": 27, "zeta": 32}})